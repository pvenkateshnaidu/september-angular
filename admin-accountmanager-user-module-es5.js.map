{"version":3,"sources":["webpack:///./src/app/admin/accountmanager/user-create/user-create.component.html","webpack:///./src/app/admin/accountmanager/user-edit/user-create.component.html","webpack:///./src/app/admin/accountmanager/user-index/user-index.component.html","webpack:///./src/app/admin/accountmanager/user-list/user-list.component.html","webpack:///./src/app/admin/accountmanager/user-create/user-create.component.scss","webpack:///./src/app/admin/accountmanager/user-create/user-create.component.ts","webpack:///./src/app/admin/accountmanager/user-edit/user-create.component.scss","webpack:///./src/app/admin/accountmanager/user-edit/user-edit.component.ts","webpack:///./src/app/admin/accountmanager/user-index/user-index.component.scss","webpack:///./src/app/admin/accountmanager/user-index/user-index.component.ts","webpack:///./src/app/admin/accountmanager/user-list/user-list.component.scss","webpack:///./src/app/admin/accountmanager/user-list/user-list.component.ts","webpack:///./src/app/admin/accountmanager/user-rest.service.ts","webpack:///./src/app/admin/accountmanager/user-routing.module.ts","webpack:///./src/app/admin/accountmanager/user.module.ts","webpack:///./src/app/field2.pipe.ts"],"names":[],"mappings":"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","file":"admin-accountmanager-user-module-es5.js","sourcesContent":["module.exports = \"<p-toast position=\\\"bottom-right\\\"></p-toast>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h4 class=\\\"remove-margin\\\">Add Job Requirement </h4>\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <!-- <h5 class=\\\"card-title\\\">Edit Profile</h5> -->\\n\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"registerUser()\\\" enctype=\\\"multipart/form-data\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n\\n                <label>Job Title:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"jobTitle\\\" class=\\\"form-control\\\" placeholder=\\\"Job Title\\\">\\n                <div *ngIf=\\\"jobTitle.invalid && (jobTitle.dirty || jobTitle.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobTitle.errors?.required\\\">\\n                    Title is required.\\n                  </div>\\n                  <div *ngIf=\\\"jobTitle.errors?.minlength\\\">\\n                    Title must be at least 2 characters long.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobTitle }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Experience:</label>\\n                <input type=\\\"number\\\" formControlName=\\\"jobExperience\\\" class=\\\"form-control\\\" placeholder=\\\"Exp\\\"\\n                  required>\\n                <div *ngIf=\\\"jobExperience.invalid && (jobExperience.dirty || jobExperience.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobExperience.errors?.required\\\">\\n                    Experience is required.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobExperience }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <label>Technology</label>\\n              <p-dropdown #dd [options]=\\\"cars\\\" [(ngModel)]=\\\"selectedCar\\\" formControlName=\\\"jobTechnology\\\"\\n                [style]=\\\"{'width':'100%'}\\\" scrollHeight=\\\"400px\\\" filter=\\\"true\\\" filterBy=\\\"value,label\\\"\\n                resetFilterOnHide=\\\"true\\\" (onFocus)=\\\"OnFocus()\\\" (keydown)=\\\"test($event)\\\">\\n              </p-dropdown>\\n              <div *ngIf=\\\"jobTechnology.invalid && (jobTechnology.dirty || jobTechnology.touched)\\\" class=\\\"form-text text-muted\\\">\\n                <div *ngIf=\\\"jobTechnology.errors?.required\\\">\\n                  Technology is required.\\n                </div>\\n\\n              </div>\\n              <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobTechnology }}</small>\\n             </div>\\n             <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Visa Type:</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"jobVisaType\\\">\\n                  <option value=\\\"null\\\" disabled>Choose visaType</option>\\n                  <option value=\\\"H4 EAD\\\">H4 EAD\\n                  </option>\\n                  <option value=\\\"H1B-Transfer\\\">H1B-Transfer\\n                  </option>\\n                  <option value=\\\"CPT\\\">CPT\\n                  </option>\\n                  <option value=\\\"OPT\\\">OPT\\n                  </option>\\n                  <option value=\\\"H1-B\\\">H1-B\\n                  </option>\\n                  <option value=\\\"GC-EAD\\\">GC-EAD\\n                  </option>\\n                  <option value=\\\"Green Card\\\">Green Card\\n                  </option>\\n                  <option value=\\\"US Citizen\\\">US Citizen\\n                  </option>\\n\\n                </select>\\n                <div *ngIf=\\\"jobVisaType.invalid && (jobVisaType.dirty || jobVisaType.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobVisaType.errors?.required\\\">\\n                    Visa Type is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobVisaType }}</small>\\n              </div>\\n            </div>\\n\\n          </div>\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Work Type:</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"workType\\\">\\n                  <option value=\\\"null\\\" disabled>Choose Type</option>\\n                  <option value=\\\"Remote\\\">Remote\\n                  </option>\\n                  <option value=\\\"In person\\\">In person\\n                  </option>\\n                </select>\\n                <div *ngIf=\\\"workType.invalid && (workType.dirty || workType.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"workType.errors?.required\\\">\\n                    Work Type is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.workType }}</small>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-1\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Rate:</label>\\n                <input type=\\\"number\\\" formControlName=\\\"rate\\\" class=\\\"form-control\\\" placeholder=\\\"Rate\\\"\\n                required>\\n                <!-- <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\" placeholder=\\\"State\\\" required> -->\\n                <div *ngIf=\\\"rate.invalid && (mainRequirement.dirty || rate.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"rate.errors?.required\\\">\\n                    Rate is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.rate }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Duration (Years):</label>\\n                <input type=\\\"number\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\" placeholder=\\\"Duration\\\"\\n                required>\\n                <!-- <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\" placeholder=\\\"State\\\" required> -->\\n                <div *ngIf=\\\"duration.invalid && (duration.dirty || duration.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"duration.errors?.required\\\">\\n                    Duration is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.duration }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Client:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"client\\\" class=\\\"form-control\\\" placeholder=\\\"Client\\\"\\n                required>\\n                <!-- <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\" placeholder=\\\"State\\\" required> -->\\n                <div *ngIf=\\\"client.invalid && (client.dirty || client.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"client.errors?.required\\\">\\n                    Client is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.client }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Main Requirement:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"mainRequirement\\\" class=\\\"form-control\\\" placeholder=\\\"Main Requirement\\\"\\n                required>\\n                <!-- <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\" placeholder=\\\"State\\\" required> -->\\n                <div *ngIf=\\\"mainRequirement.invalid && (mainRequirement.dirty || mainRequirement.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"mainRequirement.errors?.required\\\">\\n                    Main Requirement is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.mainRequirement }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Location:</label>\\n                <p-dropdown #dd [options]=\\\"states\\\" [(ngModel)]=\\\"selectedStates\\\" formControlName=\\\"jobLocation\\\"\\n                  [style]=\\\"{'width':'100%'}\\\" scrollHeight=\\\"400px\\\" filter=\\\"true\\\" filterBy=\\\"value,label\\\"\\n                  resetFilterOnHide=\\\"true\\\" (onFocus)=\\\"OnFocus()\\\" (keydown)=\\\"statesUi($event)\\\">\\n                </p-dropdown>\\n                <!-- <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\" placeholder=\\\"State\\\" required> -->\\n                <div *ngIf=\\\"jobLocation.invalid && (jobLocation.dirty || jobLocation.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobLocation.errors?.required\\\">\\n                    Location is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobLocation }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Status</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"jobStatus\\\">\\n                  <option value=\\\"null\\\">--select--</option>\\n                  <option value=\\\"A\\\">Active</option>\\n                  <option value=\\\"I\\\">InActive</option>\\n                </select>\\n                <div *ngIf=\\\"jobStatus.invalid && (jobStatus.dirty || jobStatus.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobStatus.errors?.required\\\">\\n                    Status is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobStatus }}</small>\\n\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Job Description</label>\\n                <angular-editor formControlName=\\\"jobDescription\\\" [config]=\\\"config\\\"></angular-editor>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Job Responsibilities:</label>\\n                <angular-editor formControlName=\\\"jobResponsibility\\\" [config]=\\\"config\\\"></angular-editor>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"update ml-auto mr-auto\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-round\\\" [disabled]=\\\"!registerForm.valid\\\">Submit\\n                Job</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<p-toast position=\\\"bottom-right\\\"></p-toast>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h4 class=\\\"remove-margin\\\">Edit Job Requirement </h4>\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <!-- <h5 class=\\\"card-title\\\">Edit Profile</h5> -->\\n\\n\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"updateUserDetails()\\\" enctype=\\\"multipart/form-data\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n\\n                <label>Job Title:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"jobTitle\\\" class=\\\"form-control\\\" placeholder=\\\"Job Title\\\">\\n                <div *ngIf=\\\"jobTitle.invalid && (jobTitle.dirty || jobTitle.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobTitle.errors?.required\\\">\\n                    Title is required.\\n                  </div>\\n                  <div *ngIf=\\\"jobTitle.errors?.minlength\\\">\\n                    Title must be at least 2 characters long.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobTitle }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Experience:</label>\\n                <input type=\\\"number\\\" formControlName=\\\"jobExperience\\\" class=\\\"form-control\\\" placeholder=\\\"Exp\\\"\\n                  required>\\n                <div *ngIf=\\\"jobExperience.invalid && (jobExperience.dirty || jobExperience.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobExperience.errors?.required\\\">\\n                    Experience is required.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobExperience }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <label>Technology</label>\\n              <p-dropdown #dd [options]=\\\"cars\\\" [(ngModel)]=\\\"selectedCar\\\" formControlName=\\\"jobTechnology\\\"\\n                [style]=\\\"{'width':'100%'}\\\" scrollHeight=\\\"400px\\\" filter=\\\"true\\\" filterBy=\\\"value,label\\\"\\n                resetFilterOnHide=\\\"true\\\" (onFocus)=\\\"OnFocus()\\\" (keydown)=\\\"test($event)\\\">\\n              </p-dropdown>\\n              <div *ngIf=\\\"jobTechnology.invalid && (jobTechnology.dirty || jobTechnology.touched)\\\" class=\\\"form-text text-muted\\\">\\n                <div *ngIf=\\\"jobTechnology.errors?.required\\\">\\n                  Technology is required.\\n                </div>\\n\\n              </div>\\n              <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobTechnology }}</small>\\n             </div>\\n             <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Visa Type:</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"jobVisaType\\\">\\n                  <option value=\\\"null\\\" disabled>Choose visaType</option>\\n                  <option value=\\\"H4 EAD\\\">H4 EAD\\n                  </option>\\n                  <option value=\\\"H1B-Transfer\\\">H1B-Transfer\\n                  </option>\\n                  <option value=\\\"CPT\\\">CPT\\n                  </option>\\n                  <option value=\\\"OPT\\\">OPT\\n                  </option>\\n                  <option value=\\\"H1-B\\\">H1-B\\n                  </option>\\n                  <option value=\\\"GC-EAD\\\">GC-EAD\\n                  </option>\\n                  <option value=\\\"Green Card\\\">Green Card\\n                  </option>\\n                  <option value=\\\"US Citizen\\\">US Citizen\\n                  </option>\\n\\n                </select>\\n                <div *ngIf=\\\"jobVisaType.invalid && (jobVisaType.dirty || jobVisaType.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobVisaType.errors?.required\\\">\\n                    Visa Type is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobVisaType }}</small>\\n              </div>\\n            </div>\\n\\n          </div>\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Work Type:</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"workType\\\">\\n                  <option value=\\\"null\\\" disabled>Choose Type</option>\\n                  <option value=\\\"Remote\\\">Remote\\n                  </option>\\n                  <option value=\\\"In person\\\">In person\\n                  </option>\\n                </select>\\n                <div *ngIf=\\\"workType.invalid && (workType.dirty || workType.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"workType.errors?.required\\\">\\n                    Work Type is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.workType }}</small>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-1\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Rate:</label>\\n                <input type=\\\"number\\\" formControlName=\\\"rate\\\" class=\\\"form-control\\\" placeholder=\\\"Rate\\\"\\n                required>\\n                <!-- <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\" placeholder=\\\"State\\\" required> -->\\n                <div *ngIf=\\\"rate.invalid && (mainRequirement.dirty || rate.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"rate.errors?.required\\\">\\n                    Rate is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.rate }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Duration (Years):</label>\\n                <input type=\\\"number\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\" placeholder=\\\"Duration\\\"\\n                required>\\n                <!-- <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\" placeholder=\\\"State\\\" required> -->\\n                <div *ngIf=\\\"duration.invalid && (duration.dirty || duration.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"duration.errors?.required\\\">\\n                    Duration is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.duration }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Client:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"client\\\" class=\\\"form-control\\\" placeholder=\\\"Client\\\"\\n                required>\\n                <!-- <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\" placeholder=\\\"State\\\" required> -->\\n                <div *ngIf=\\\"client.invalid && (client.dirty || client.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"client.errors?.required\\\">\\n                    Client is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.client }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Main Requirement:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"mainRequirement\\\" class=\\\"form-control\\\" placeholder=\\\"Main Requirement\\\"\\n                required>\\n                <!-- <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\" placeholder=\\\"State\\\" required> -->\\n                <div *ngIf=\\\"mainRequirement.invalid && (mainRequirement.dirty || mainRequirement.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"mainRequirement.errors?.required\\\">\\n                    Main Requirement is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.mainRequirement }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Location:</label>\\n                <p-dropdown #dd [options]=\\\"states\\\" [(ngModel)]=\\\"selectedStates\\\" formControlName=\\\"jobLocation\\\"\\n                  [style]=\\\"{'width':'100%'}\\\" scrollHeight=\\\"400px\\\" filter=\\\"true\\\" filterBy=\\\"value,label\\\"\\n                  resetFilterOnHide=\\\"true\\\" (onFocus)=\\\"OnFocus()\\\" (keydown)=\\\"statesUi($event)\\\">\\n                </p-dropdown>\\n                <!-- <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\" placeholder=\\\"State\\\" required> -->\\n                <div *ngIf=\\\"jobLocation.invalid && (jobLocation.dirty || jobLocation.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobLocation.errors?.required\\\">\\n                    Location is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobLocation }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Status</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"jobStatus\\\">\\n                  <option value=\\\"null\\\">--select--</option>\\n                  <option value=\\\"A\\\">Active</option>\\n                  <option value=\\\"I\\\">InActive</option>\\n                </select>\\n                <div *ngIf=\\\"jobStatus.invalid && (jobStatus.dirty || jobStatus.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobStatus.errors?.required\\\">\\n                    Status is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobStatus }}</small>\\n\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Job Description</label>\\n                <angular-editor formControlName=\\\"jobDescription\\\" [config]=\\\"config\\\"></angular-editor>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Job Responsibilities:</label>\\n                <angular-editor formControlName=\\\"jobResponsibility\\\" [config]=\\\"config\\\"></angular-editor>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"update ml-auto mr-auto\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-round\\\" [disabled]=\\\"!registerForm.valid\\\">Update\\n                Job</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n\"","module.exports = \"<h4 class=\\\"remove-margin\\\"> Jobs List <a routerLink=\\\"/jobs/create\\\" class=\\\"btn btn-primary\\\">\\r\\n    Add Job Requirment\\r\\n  </a></h4>\\r\\n\\r\\n\\r\\n<!--\\r\\n<p-table #dt [responsive]=\\\"true\\\" [value]=\\\"timeSheets\\\" [frozenColumns]=\\\"frozenCols\\\" [scrollable]=\\\"true\\\"\\r\\n  scrollHeight=\\\"200px\\\" appendTo=\\\"body\\\" filterMatchMode=\\\"equals\\\" columnResizeMode=\\\"expand\\\" dataKey=\\\"id\\\" [rows]=\\\"10\\\"\\r\\n  [showCurrentPageReport]=\\\"true\\\" tableStyleClass=\\\"fixtable\\\" [rowsPerPageOptions]=\\\"[5,10,20,30]\\\" [loading]=\\\"loading\\\"\\r\\n  styleClass=\\\"p-datatable-customers\\\" [paginator]=\\\"true\\\" [filterDelay]=\\\"0\\\"\\r\\n  [globalFilterFields]=\\\"['created_at','consultatName','consultantEmail','consultatMobileNumber','experience','rate','reportStatus']\\\">\\r\\n\\r\\n  <ng-template pTemplate=\\\"header\\\">\\r\\n    <tr>\\r\\n\\r\\n      <th>Consultant Name</th>\\r\\n      <th>Created At</th>\\r\\n      <th>Email</th>\\r\\n      <th>Phone number</th>\\r\\n\\r\\n      <th>Exp </th>\\r\\n      <th>Rate</th>\\r\\n      <th>Status</th>\\r\\n      <th>Action</th>\\r\\n\\r\\n    </tr>\\r\\n    <tr>\\r\\n\\r\\n\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'consultatName', 'startsWith')\\\"\\r\\n          placeholder=\\\"Name\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <p-calendar (onSelect)=\\\"onDateSelect($event)\\\" (onClearClick)=\\\"dt.filter('', 'created_at', 'equals')\\\"\\r\\n          [showButtonBar]=\\\"true\\\" [style]=\\\"{'width':'300px'}\\\" styleClass=\\\"p-column-filter\\\" placeholder=\\\"Date\\\"\\r\\n          [readonlyInput]=\\\"true\\\" dateFormat=\\\"yy-mm-dd\\\"></p-calendar>\\r\\n      </th>\\r\\n      <th> <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'consultantEmail', 'startsWith')\\\"\\r\\n          placeholder=\\\"Email\\\" class=\\\"p-column-filter\\\"></th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'consultatMobileNumber', 'startsWith')\\\"\\r\\n          placeholder=\\\"Phone\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'experience', 'startsWith')\\\"\\r\\n          placeholder=\\\"exp\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'rate', 'startsWith')\\\" placeholder=\\\"Rate\\\"\\r\\n          class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'reportStatus', 'startsWith')\\\"\\r\\n          placeholder=\\\"Status\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"body\\\" let-customer>\\r\\n    <tr>\\r\\n\\r\\n\\r\\n      <td>\\r\\n        {{customer.consultatName}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{customer.created_at | date}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{customer.consultantEmail}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{customer.consultatMobileNumber}}\\r\\n      </td>\\r\\n\\r\\n      <td>\\r\\n        {{customer.experience}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{customer.rate}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{customer.reportStatus}}\\r\\n      </td>\\r\\n      <td>\\r\\n        -\\r\\n      </td>\\r\\n\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n    <tr>\\r\\n      <td colspan=\\\"6\\\">No Consultants found.</td>\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n</p-table> -->\\r\\n<!--\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n          <h4 class=\\\"remove-margin\\\"> Timesheet List </h4>\\r\\n    <div class=\\\"card\\\">\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <p-table #dt [value]=\\\"timeSheets\\\" dataKey=\\\"id\\\"\\r\\n        [rows]=\\\"10\\\" [showCurrentPageReport]=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20]\\\" [loading]=\\\"loading\\\" styleClass=\\\"p-datatable-customers\\\"\\r\\n        [paginator]=\\\"false\\\"\\r\\n        [filterDelay]=\\\"0\\\" [globalFilterFields]=\\\"['fromDate','duration','assignment','serviceCode']\\\">\\r\\n\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n            <tr>\\r\\n                <th>Employee</th>\\r\\n                <th>Date</th>\\r\\n                <th>Duration</th>\\r\\n                <th>Assignment</th>\\r\\n                <th>Service Code</th>\\r\\n            </tr>\\r\\n\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-customer>\\r\\n            <tr>\\r\\n              <td>\\r\\n                {{customer.user_details.name}}\\r\\n              </td>\\r\\n                <td>\\r\\n                    {{customer.fromDate | date}}\\r\\n                </td>\\r\\n                <td>\\r\\n                   {{customer.duration}}\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{customer.assignment}}\\r\\n               </td>\\r\\n               <td>\\r\\n                {{customer.serviceCode}}\\r\\n             </td>\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n            <tr>\\r\\n                <td colspan=\\\"6\\\">No Users found.</td>\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n    </p-table>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<p-inplace>\\r\\n  <ng-template pTemplate=\\\"display\\\">\\r\\n    Click to Edit\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"content\\\">\\r\\n    <input type=\\\"text\\\" value=\\\"PrimeNG\\\" pInputText>\\r\\n  </ng-template>\\r\\n</p-inplace>\\r\\n\\r\\n<p-table #dt [value]=\\\"timeSheets\\\" dataKey=\\\"id\\\"\\r\\n        [rows]=\\\"10\\\" [showCurrentPageReport]=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,25,50]\\\" [loading]=\\\"loading\\\" styleClass=\\\"p-datatable-customers\\\"\\r\\n        [paginator]=\\\"true\\\" currentPageReportTemplate=\\\"Showing {first} to {last} of {totalRecords} entries\\\"\\r\\n        [filterDelay]=\\\"0\\\" [globalFilterFields]=\\\"['consultatName']\\\">\\r\\n        <ng-template pTemplate=\\\"caption\\\">\\r\\n            <div class=\\\"table-header\\\">\\r\\n                List of Consultants\\r\\n                <span class=\\\"p-input-icon-left\\\">\\r\\n                    <i class=\\\"pi pi-search\\\"></i>\\r\\n                    <input pInputText type=\\\"text\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Search\\\" />\\r\\n                </span>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n            <tr>\\r\\n                <th>Name</th>\\r\\n\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <th>\\r\\n                    <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'consultatName', 'startsWith')\\\" placeholder=\\\"Search by Name\\\" class=\\\"p-column-filter\\\">\\r\\n                </th>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-customer>\\r\\n            <tr>\\r\\n                <td>\\r\\n                    {{customer.consultatName}}\\r\\n                </td>\\r\\n\\r\\n\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n            <tr>\\r\\n                <td colspan=\\\"6\\\">No Consultants found.</td>\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n    </p-table>\\r\\n {{rowData|field:col}}\\r\\n  -->\\r\\n\\r\\n<p-table #dt [columns]=\\\"scrollableCols\\\" [autoLayout]=\\\"true\\\" [value]=\\\"timeSheets\\\" [scrollable]=\\\"true\\\" [filterDelay]=\\\"0\\\"\\r\\n  [globalFilterFields]=\\\"['consultatName']\\\" [resizableColumns]=\\\"true\\\" columnResizeMode=\\\"expand\\\"\\r\\n  [reorderableColumns]=\\\"true\\\" autoLayout=\\\"true\\\" dataKey=\\\"reportId\\\" editMode=\\\"row\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\r\\n  [showCurrentPageReport]=\\\"true\\\"\\r\\n  [rowsPerPageOptions]=\\\"[10,25,50]\\\">\\r\\n  <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n    <colgroup>\\r\\n\\r\\n      <col *ngFor=\\\"let col of columns\\\" style=\\\"width:200px\\\">\\r\\n      <col style=\\\"width:200px\\\">\\r\\n      <col style=\\\"width:200px\\\">\\r\\n    </colgroup>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n    <tr>\\r\\n      <th>Action</th>\\r\\n      <th *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{'width': col.width}\\\">\\r\\n        {{col.header}}\\r\\n      </th>\\r\\n    </tr>\\r\\n    <tr>\\r\\n\\r\\n      <th>\\r\\n\\r\\n      </th>\\r\\n      <th>\\r\\n\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'jobTitle', 'startsWith')\\\"\\r\\n          placeholder=\\\"Title\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'jobTechnology', 'startsWith')\\\"\\r\\n          placeholder=\\\"Technology\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'jobExperience', 'startsWith')\\\"\\r\\n          placeholder=\\\"Experience\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'jobLocation', 'startsWith')\\\"\\r\\n          placeholder=\\\"Location\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'jobVisaType', 'startsWith')\\\"\\r\\n          placeholder=\\\"VisaType\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'jobStatus', 'startsWith')\\\"\\r\\n          placeholder=\\\"Status\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-editing=\\\"editing\\\" let-ri=\\\"rowIndex\\\">\\r\\n\\r\\n    <tr [pEditableRow]=\\\"rowData\\\" [ngStyle]=\\\"{'background-color':getColor(rowData.reportStatus,rowData.adminStatus)}\\\">\\r\\n      <td style=\\\"text-align:center\\\">\\r\\n        <a (click)=\\\"editUser(rowData.jobId)\\\" class=\\\"btn btn-warning btn-sm\\\">Edit</a>\\r\\n        <a (click)=\\\"showModalDialog(rowData)\\\" class=\\\"btn btn-primary btn-sm\\\">View</a>\\r\\n      </td>\\r\\n      <td *ngFor=\\\"let col of columns\\\">\\r\\n        <div *ngIf=\\\"!col.editable\\\">\\r\\n          {{rowData|field:col}}\\r\\n        </div>\\r\\n        <p-cellEditor *ngIf=\\\"col.editable\\\">\\r\\n          <ng-template pTemplate=\\\"input\\\">\\r\\n            <div *ngIf=\\\"rowData|field:col as variable\\\">\\r\\n              <input pInputText type=\\\"text\\\" [(ngModel)]=\\\"variable\\\" required>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n          <ng-template pTemplate=\\\"output\\\">\\r\\n            {{rowData|field:col}}\\r\\n          </ng-template>\\r\\n        </p-cellEditor>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n</p-table>\\r\\n<p-confirmDialog key=\\\"confirm-drop-database\\\" header=\\\"Confirmation\\\" acceptLabel=\\\"Yes\\\" rejectLabel=\\\"No\\\"\\r\\n  [(visible)]=\\\"confirmDropDatabaseDialogVisible\\\"></p-confirmDialog>\\r\\n<p-dialog header=\\\"View Job Details\\\" [(visible)]=\\\"displayModal\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '75vw'}\\\"\\r\\n  [baseZIndex]=\\\"10000\\\" [draggable]=\\\"false\\\" [resizable]=\\\"true\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Job Title :{{jobTitle}}</label><br>\\r\\n        <label>Job Location : {{jobLocation}}</label><br>\\r\\n        <label>Client : {{client}}</label><br>\\r\\n        <label>Duration : {{duration}} Years</label><br>\\r\\n        <label>Work Type : {{workType}}</label><br>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Description:</label><br>\\r\\n        <div [innerHTML]=\\\"jobDescription\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Responsibilities:</label><br>\\r\\n        <div [innerHTML]=\\\"jobResponsibility\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <ng-template pTemplate=\\\"footer\\\">\\r\\n    <p-button icon=\\\"pi pi-check\\\" (click)=\\\"displayModal=true\\\" label=\\\"Yes\\\" class=\\\"p-button-text\\\"></p-button>\\r\\n    <p-button icon=\\\"pi pi-times\\\" (click)=\\\"displayModal=false\\\" label=\\\"No\\\"></p-button>\\r\\n  </ng-template>\\r\\n</p-dialog>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FjY291bnRtYW5hZ2VyL3VzZXItY3JlYXRlL3VzZXItY3JlYXRlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit,ViewChild, ɵConsole } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserRestService } from '../user-rest.service';\nimport {SelectItem} from 'primeng/api';\nimport {SelectItemGroup} from 'primeng/api';\nimport { FormGroup, FormControlName, Validators, FormControl } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nexport class Profile {\n  constructor(public prId:string, public prName:string) {\n  }\n}\n@Component({\n  selector: 'app-user-create',\n  templateUrl: './user-create.component.html',\n  providers: [MessageService],\n  styleUrls: ['./user-create.component.scss']\n})\nexport class UserCreateComponent implements OnInit {\n  @ViewChild('dd', { static: true }) dropdown: any;\n  countries: any[];\n  htmlContent = '';\n\n  config: AngularEditorConfig = {\n    editable: true,\n    spellcheck: true,\n    height: '15rem',\n    minHeight: '5rem',\n    placeholder: 'Enter text here...',\n    translate: 'no',\n    defaultParagraphSeparator: 'p',\n    defaultFontName: 'Arial',\n    toolbarHiddenButtons: [\n      ['bold']\n      ],\n    customClasses: [\n      {\n        name: \"quote\",\n        class: \"quote\",\n      },\n      {\n        name: 'redText',\n        class: 'redText'\n      },\n      {\n        name: \"titleText\",\n        class: \"titleText\",\n        tag: \"h1\",\n      },\n    ]\n  };\n  selectedCountry: string;\n  cars: SelectItem[];\n  states: SelectItem[];\n  selectedCar: SelectItem;\n  selectedStates: SelectItem;\n  str: string;\n  counter = 0;\n  totalNumberOfCars : number;\n  formData: FormGroup;\n\n  serverErrors = [];\n  imageFile: {link: string, file: any, name: string};\n  registerForm: FormGroup;\n  registerForm1: FormGroup;\n  text1: string =\n  '<span style=\"color: red\">red text</span>' + '<br>' +\n  '<span style=\"text-decoration: line-through\">crossed out text</span>' + '<br>' +\n  '<span style=\"text-decoration: overline\">overline text</span>' + '<br>' +\n  '<span style=\"text-decoration: underline\">underline text</span>';\n  constructor(private route: ActivatedRoute,private messageService: MessageService, private userRest: UserRestService, private router: Router) { }\n\n  ngOnInit() {\n\n    this.states = [\n      {label: \"Choose State\", value: \"\"},\n      {label: \"Alabama\", value: \"Alabama\"},\n      {label: 'Alaska', value: 'Alaska'},\n      {label: 'Arizona', value: 'Arizona'},\n      {label: 'Arkansas', value: 'Arkansas'},\n      {label: 'California', value: 'California'},\n      {label: 'Colorado', value: 'Colorado'},\n      {label: 'Connecticut', value: 'Connecticut'},\n      {label: 'Delaware', value:\"Delaware\"},\n      {label: 'District of Columbia', value:\"District of Columbia\"},\n      {label: 'Florida', value:\"Florida\"},\n      {label: 'Georgia', value:\"Georgia\"},\n      {label: 'Hawaii', value:\"Hawaii\"},\n      {label: 'Idaho', value:\"Idaho\"},\n      {label: 'Illinois', value:\"Illinois\"},\n      {label: 'Indiana', value:\"Indiana\"},\n      {label: 'Iowa', value:\"Iowa\"},\n      {label: 'Kansas', value:\"Kansas\"},\n      {label: 'Kentucky', value:\"Kentucky\"},\n      {label: 'Louisiana', value:\"Louisiana\"},\n      {label: 'Maine', value:\"Maine\"},\n      {label: 'Maryland', value:\"Maryland\"},\n      {label: 'Michigan', value:\"Michigan\"},\n      {label: 'Minnesota', value:\"Minnesota\"},\n      {label: 'Mississippi', value:\"Mississippi\"},\n      {label: 'Missouri', value:\"Missouri\"},\n      {label: 'Montana', value:\"Montana\"},\n      {label: 'Nebraska', value:\"Nebraska\"},\n      {label: 'Nevada', value:\"Nevada\"},\n      {label: 'New Hampshire', value:\"New Hampshire\"},\n      {label: 'New Jersey', value:\"New Jersey\"},\n      {label: 'New Mexico', value:\"New Mexico\"},\n      {label: 'New York', value:\"New York\"},\n      {label: 'North Carolina', value:\"North Carolina\"},\n      {label: 'North Dakota', value:\"North Dakota\"},\n      {label: 'Ohio', value:\"Ohio\"},\n      {label: 'Oklahoma', value:\"Oklahoma\"},\n      {label: 'Oregon', value:\"Oregon\"},\n      {label: 'Pennsylvania', value:\"Pennsylvania\"},\n      {label: 'Puerto Rico', value:\"Puerto Rico\"},\n      {label: 'Rhode Island', value:\"Rhode Island\"},\n      {label: 'South Carolina', value:\"South Carolina\"},\n      {label: 'South Dakota', value:\"South Dakota\"},\n      {label: 'Tennessee', value:\"Tennessee\"},\n      {label: 'Texas', value:\"Texas\"},\n      {label: 'Utah', value:\"Utah\"},\n      {label: 'Vermont', value:\"Vermont\"},\n      {label: 'Virginia', value:\"Virginia\"},\n      {label: 'Washington', value:\"Washington\"},\n      {label: 'West Virginia', value:\"West Virginia\"},\n      {label: 'Wisconsin', value:\"Wisconsin\"},\n      {label: 'Wyoming', value:\"Wyoming\"},\n  ];\n    this.cars = [\n      {label: \"Choose Technology\", value: \"\"},\n      {label: \"AEM(Adobe Experience manger)\", value: \"AEM(Adobe Experience manger)\"},\n      {label: 'Android Developer', value: 'Android Developer'},\n      {label: 'Business Analyst', value: 'Business Analyst'},\n      {label: 'Business Intelligence', value: 'Business Intelligence'},\n      {label: 'Data Analyst', value: 'Data Analyst'},\n      {label: 'Database Administrator', value: 'Database Administrator'},\n      {label: 'Devops Engineer', value: 'Devops Engineer'},\n      {label: 'Dot net Developer', value: 'Dot net Developer'},\n      {label: 'ETL Developer', value:\"ETL Developer\"},\n      {label: 'Hadoop', value:\"Hadoop\"},\n      {label: 'Hadoop Developer/Hadoop Admin', value:\"Hadoop Developer/Hadoop Admin\"},\n      {label: 'IOS Developer', value:\"IOS Developer\"},\n      {label: 'Java Developer', value:\"Java Developer\"},\n      {label: 'Linux Admin', value:\"Linux Admin\"},\n      {label: 'Mainframe Developer', value:\"Mainframe Developer\"},\n      {label: 'Network Engineer', value:\"Network Engineer\"},\n      {label: 'Oracle fusion developer', value:\"Oracle fusion developer\"},\n      {label: 'PEGA', value:\"PEGA\"},\n      {label: 'QA Tester/QA Analyst', value:\"QA Tester/QA Analyst\"},\n      {label: 'SAP Hana', value:\"SAP Hana\"},\n      {label: 'Salesforce', value:\"Salesforce\"},\n      {label: 'Salesforce Admin', value:\"Salesforce Admin\"},\n      {label: 'Salesforce Developer', value:\"Salesforce Developer\"},\n      {label: 'Service now developer', value:\"Service now developer\"},\n      {label: 'Tableau Developer', value:\"Tableau Developer\"},\n      {label: 'UI Developer / Frontend Developer', value:\"UI Developer / Frontend Developer\"},\n      {label: 'VOIP Engineer', value:\"VOIP Engineer\"},\n      {label: 'others', value:\"others\"},\n  ];\n  this.totalNumberOfCars = this.cars.length;\n  this.str ='';\n\n    this.registerForm = new FormGroup({\n      'jobTitle': new FormControl(null, [Validators.required, Validators.minLength(2)]),\n      'jobVisaType': new FormControl(null, [Validators.required]),\n      'jobLocation': new FormControl(null, [Validators.required]),\n      'jobExperience': new FormControl(null, [Validators.required]),\n      'jobTechnology': new FormControl(null, [Validators.required]),\n      'jobDescription': new FormControl(null, [Validators.required]),\n      'workType' : new FormControl(null, [Validators.required]),\n      'jobStatus': new FormControl(null, [Validators.required]),\n      'mainRequirement': new FormControl(null, [Validators.required]),\n      'rate': new FormControl(null, [Validators.required]),\n      'duration': new FormControl(null, [Validators.required]),\n      'client' : new FormControl(null, [Validators.required]),\n      'jobResponsibility' :  new FormControl(null, [Validators.required]),\n    })\n  }\n  imagesPreviewResume(event) {\n    if (event.target.files && event.target.files[0]) {\n        const reader = new FileReader();\n\n        reader.onload = (_event: any) => {\n            this.imageFile = {\n                link: _event.target.result,\n                file: event.srcElement.files[0],\n                name: event.srcElement.files[0].name\n            };\n        };\n        reader.readAsDataURL(event.target.files[0]);\n        const formData = new FormData();\n        formData.append(\"resume\", event.target.files[0]);\n\n        this.userRest.storeDocument(formData).subscribe(\n          (response) => { console.log(response)\n            this.registerForm.patchValue({\n              resume: response.path,\n              // formControlName2: myValue2 (can be omitted)\n            });\n          },\n          (error) => { console.log(error) }\n        );\n    }\n}\nimagesPreviewOtherDoc(event) {\n  if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n\n      reader.onload = (_event: any) => {\n          this.imageFile = {\n              link: _event.target.result,\n              file: event.srcElement.files[0],\n              name: event.srcElement.files[0].name\n          };\n      };\n      reader.readAsDataURL(event.target.files[0]);\n      const formData = new FormData();\n      formData.append(\"otherDocument\", event.target.files[0]);\n\n      this.userRest.storeDocument(formData).subscribe(\n        (response) => { console.log(response)\n          this.registerForm.patchValue({\n            otherDocument: response.path,\n            // formControlName2: myValue2 (can be omitted)\n          });\n        },\n        (error) => { console.log(error) }\n      );\n  }\n}\nimagesPreviewWorkAuth(event) {\n  if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n\n      reader.onload = (_event: any) => {\n          this.imageFile = {\n              link: _event.target.result,\n              file: event.srcElement.files[0],\n              name: event.srcElement.files[0].name\n          };\n      };\n      reader.readAsDataURL(event.target.files[0]);\n      const formData = new FormData();\n      formData.append(\"workAuthorization\", event.target.files[0]);\n\n      this.userRest.storeDocument(formData).subscribe(\n        (response) => { console.log(response)\n          this.registerForm.patchValue({\n            workAuthorization: response.path,\n            // formControlName2: myValue2 (can be omitted)\n          });\n        },\n        (error) => { console.log(error) }\n      );\n  }\n}\n  OnFocus() {\n    if(this.cars.length > this.totalNumberOfCars) {\n      this.cars.shift();\n    }\n  }\n\n  OnBlur() {\n    console.log(\"OnBlur\");\n  }\n\n  test(event) {\n    const charCode = event.keyCode;\n    if(event.key === 'Enter') {\n      this.selectedCar = this.cars.find(car => {\n       return car.label.toLowerCase().includes(this.str.toLowerCase());\n      });\n      this.cars.unshift(this.selectedCar)\n      this.str = '';\n    } else if (event.key === 'Backspace') {\n        this.str = this.str.replace(/.$/,\"\");\n    } else if( (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode === 8) {\n        this.str+= event.key;\n      }\n\n  }\n\n\n  statesUi(event) {\n    const charCode = event.keyCode;\n    if(event.key === 'Enter') {\n      this.selectedStates = this.states.find(car => {\n       return car.label.toLowerCase().includes(this.str.toLowerCase());\n      });\n      this.states.unshift(this.selectedStates)\n      this.str = '';\n    } else if (event.key === 'Backspace') {\n        this.str = this.str.replace(/.$/,\"\");\n    } else if( (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode === 8) {\n        this.str+= event.key;\n      }\n  }\n\n  get jobTitle() { return this.registerForm.get('jobTitle'); }\n  get jobDescription() { return this.registerForm.get('jobDescription'); }\n  get jobTechnology() { return this.registerForm.get('jobTechnology'); }\n  get jobExperience() { return this.registerForm.get('jobExperience'); }\n  get jobLocation() { return this.registerForm.get('jobLocation'); }\n  get jobVisaType() { return this.registerForm.get('jobVisaType'); }\n  get jobStatus() { return this.registerForm.get('jobStatus'); }\nget workType(){ return this.registerForm.get('workType');  }\nget mainRequirement(){ return this.registerForm.get('mainRequirement');  }\nget rate(){ return this.registerForm.get('rate');  }\nget duration() {return this.registerForm.get('duration');  }\nget client() {return this.registerForm.get('duration');   }\nget jobResponsibility() {return this.registerForm.get('jobResponsibility');   }\n  registerUser(){\n     console.log(this.registerForm);\n\n\n //formData.append('myImageToSend', this.imageFile.file);\n\n\n      this.userRest.storeUser(this.registerForm).subscribe(\n        response => {\n          console.log(response),\n          this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Job is added' });\n          this.router.navigate(['jobs/list'])\n        },\n        error =>{\n          this.serverErrors = error.error.errors\n        }\n      );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FjY291bnRtYW5hZ2VyL3VzZXItZWRpdC91c2VyLWNyZWF0ZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit,ViewChild, ɵConsole } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserRestService } from '../user-rest.service';\nimport {SelectItem} from 'primeng/api';\nimport {SelectItemGroup} from 'primeng/api';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { FormGroup, FormControlName, Validators, FormControl } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nexport class Profile {\n  constructor(public prId:string, public prName:string) {\n  }\n}\n@Component({\n  selector: 'app-user-create',\n  templateUrl: './user-create.component.html',\n  providers: [MessageService],\n  styleUrls: ['./user-create.component.scss']\n})\nexport class UserEditComponent implements OnInit {\n  @ViewChild('dd', { static: true }) dropdown: any;\n  countries: any[];\n  htmlContent = '';\n\n  config: AngularEditorConfig = {\n    editable: true,\n    spellcheck: true,\n    height: '15rem',\n    minHeight: '5rem',\n    placeholder: 'Enter text here...',\n    translate: 'no',\n    defaultParagraphSeparator: 'p',\n    defaultFontName: 'Arial',\n    toolbarHiddenButtons: [\n      ['bold']\n      ],\n    customClasses: [\n      {\n        name: \"quote\",\n        class: \"quote\",\n      },\n      {\n        name: 'redText',\n        class: 'redText'\n      },\n      {\n        name: \"titleText\",\n        class: \"titleText\",\n        tag: \"h1\",\n      },\n    ]\n  };\n  selectedCountry: string;\n  cars: SelectItem[];\n  states: SelectItem[];\n  selectedCar: SelectItem;\n  selectedStates: SelectItem;\n  str: string;\n  counter = 0;\n  totalNumberOfCars : number;\n  formData: FormGroup;\n\n  serverErrors = [];\n  imageFile: {link: string, file: any, name: string};\n  registerForm: FormGroup;\n  registerForm1: FormGroup;\n  constructor(private route: ActivatedRoute,private messageService: MessageService, private userRest: UserRestService, private router: Router) { }\n\n  ngOnInit() {\n    this.states = [\n      {label: \"Choose State\", value: \"\"},\n      {label: \"Alabama\", value: \"Alabama\"},\n      {label: 'Alaska', value: 'Alaska'},\n      {label: 'Arizona', value: 'Arizona'},\n      {label: 'Arkansas', value: 'Arkansas'},\n      {label: 'California', value: 'California'},\n      {label: 'Colorado', value: 'Colorado'},\n      {label: 'Connecticut', value: 'Connecticut'},\n      {label: 'Delaware', value:\"Delaware\"},\n      {label: 'District of Columbia', value:\"District of Columbia\"},\n      {label: 'Florida', value:\"Florida\"},\n      {label: 'Georgia', value:\"Georgia\"},\n      {label: 'Hawaii', value:\"Hawaii\"},\n      {label: 'Idaho', value:\"Idaho\"},\n      {label: 'Illinois', value:\"Illinois\"},\n      {label: 'Indiana', value:\"Indiana\"},\n      {label: 'Iowa', value:\"Iowa\"},\n      {label: 'Kansas', value:\"Kansas\"},\n      {label: 'Kentucky', value:\"Kentucky\"},\n      {label: 'Louisiana', value:\"Louisiana\"},\n      {label: 'Maine', value:\"Maine\"},\n      {label: 'Maryland', value:\"Maryland\"},\n      {label: 'Michigan', value:\"Michigan\"},\n      {label: 'Minnesota', value:\"Minnesota\"},\n      {label: 'Mississippi', value:\"Mississippi\"},\n      {label: 'Missouri', value:\"Missouri\"},\n      {label: 'Montana', value:\"Montana\"},\n      {label: 'Nebraska', value:\"Nebraska\"},\n      {label: 'Nevada', value:\"Nevada\"},\n      {label: 'New Hampshire', value:\"New Hampshire\"},\n      {label: 'New Jersey', value:\"New Jersey\"},\n      {label: 'New Mexico', value:\"New Mexico\"},\n      {label: 'New York', value:\"New York\"},\n      {label: 'North Carolina', value:\"North Carolina\"},\n      {label: 'North Dakota', value:\"North Dakota\"},\n      {label: 'Ohio', value:\"Ohio\"},\n      {label: 'Oklahoma', value:\"Oklahoma\"},\n      {label: 'Oregon', value:\"Oregon\"},\n      {label: 'Pennsylvania', value:\"Pennsylvania\"},\n      {label: 'Puerto Rico', value:\"Puerto Rico\"},\n      {label: 'Rhode Island', value:\"Rhode Island\"},\n      {label: 'South Carolina', value:\"South Carolina\"},\n      {label: 'South Dakota', value:\"South Dakota\"},\n      {label: 'Tennessee', value:\"Tennessee\"},\n      {label: 'Texas', value:\"Texas\"},\n      {label: 'Utah', value:\"Utah\"},\n      {label: 'Vermont', value:\"Vermont\"},\n      {label: 'Virginia', value:\"Virginia\"},\n      {label: 'Washington', value:\"Washington\"},\n      {label: 'West Virginia', value:\"West Virginia\"},\n      {label: 'Wisconsin', value:\"Wisconsin\"},\n      {label: 'Wyoming', value:\"Wyoming\"},\n  ];\n    this.cars = [\n      {label: \"Choose Technology\", value: \"\"},\n      {label: \"AEM(Adobe Experience manger)\", value: \"AEM(Adobe Experience manger)\"},\n      {label: 'Android Developer', value: 'Android Developer'},\n      {label: 'Business Analyst', value: 'Business Analyst'},\n      {label: 'Business Intelligence', value: 'Business Intelligence'},\n      {label: 'Data Analyst', value: 'Data Analyst'},\n      {label: 'Database Administrator', value: 'Database Administrator'},\n      {label: 'Devops Engineer', value: 'Devops Engineer'},\n      {label: 'Dot net Developer', value: 'Dot net Developer'},\n      {label: 'ETL Developer', value:\"ETL Developer\"},\n      {label: 'Hadoop', value:\"Hadoop\"},\n      {label: 'Hadoop Developer/Hadoop Admin', value:\"Hadoop Developer/Hadoop Admin\"},\n      {label: 'IOS Developer', value:\"IOS Developer\"},\n      {label: 'Java Developer', value:\"Java Developer\"},\n      {label: 'Linux Admin', value:\"Linux Admin\"},\n      {label: 'Mainframe Developer', value:\"Mainframe Developer\"},\n      {label: 'Network Engineer', value:\"Network Engineer\"},\n      {label: 'Oracle fusion developer', value:\"Oracle fusion developer\"},\n      {label: 'PEGA', value:\"PEGA\"},\n      {label: 'QA Tester/QA Analyst', value:\"QA Tester/QA Analyst\"},\n      {label: 'SAP Hana', value:\"SAP Hana\"},\n      {label: 'Salesforce', value:\"Salesforce\"},\n      {label: 'Salesforce Admin', value:\"Salesforce Admin\"},\n      {label: 'Salesforce Developer', value:\"Salesforce Developer\"},\n      {label: 'Service now developer', value:\"Service now developer\"},\n      {label: 'Tableau Developer', value:\"Tableau Developer\"},\n      {label: 'UI Developer / Frontend Developer', value:\"UI Developer / Frontend Developer\"},\n      {label: 'VOIP Engineer', value:\"VOIP Engineer\"},\n      {label: 'others', value:\"others\"},\n  ];\n  this.totalNumberOfCars = this.cars.length;\n  this.str ='';\n\n    this.registerForm = new FormGroup({\n      'jobTitle': new FormControl(null, [Validators.required, Validators.minLength(2)]),\n      'jobVisaType': new FormControl(null, [Validators.required]),\n      'jobLocation': new FormControl(null, [Validators.required]),\n      'jobExperience': new FormControl(null, [Validators.required]),\n      'jobTechnology': new FormControl(null, [Validators.required]),\n      'jobDescription': new FormControl(null, [Validators.required]),\n      'workType' : new FormControl(null, [Validators.required]),\n      'jobStatus': new FormControl(null, [Validators.required]),\n      'mainRequirement': new FormControl(null, [Validators.required]),\n      'rate': new FormControl(null, [Validators.required]),\n      'duration': new FormControl(null, [Validators.required]),\n      'client' : new FormControl(null, [Validators.required]),\n      'jobResponsibility' :  new FormControl(null, [Validators.required]),\n\n    });\n    let id = this.route.snapshot.params.id;\n    this.userRest.editUser(id).subscribe(\n     (response) => {\n       this.registerForm.patchValue({\n\n        'jobTitle': response.user.jobTitle,\n      'jobVisaType':  response.user.jobVisaType,\n      'jobLocation':  response.user.jobLocation,\n      'jobExperience': response.user.jobExperience,\n      'jobTechnology':  response.user.jobTechnology,\n      'jobDescription':  response.user.jobDescription,\n      'jobStatus':  response.user.jobStatus,\n      'workType' : response.user.workType,\n      'mainRequirement' : response.user.mainRequirement,\n      'rate' : response.user.rate,\n      'duration' : response.user.duration,\n      'client' : response.user.client,\n      'jobResponsibility' : response.user.jobResponsibility,\n\n       })\n     },\n     (error) => console.log(error)\n   );\n  }\n  imagesPreviewResume(event) {\n    if (event.target.files && event.target.files[0]) {\n        const reader = new FileReader();\n\n        reader.onload = (_event: any) => {\n            this.imageFile = {\n                link: _event.target.result,\n                file: event.srcElement.files[0],\n                name: event.srcElement.files[0].name\n            };\n        };\n        reader.readAsDataURL(event.target.files[0]);\n        const formData = new FormData();\n        formData.append(\"resume\", event.target.files[0]);\n\n        this.userRest.storeDocument(formData).subscribe(\n          (response) => { console.log(response)\n            this.registerForm.patchValue({\n              resume: response.path,\n              // formControlName2: myValue2 (can be omitted)\n            });\n          },\n          (error) => { console.log(error) }\n        );\n    }\n}\nimagesPreviewOtherDoc(event) {\n  if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n\n      reader.onload = (_event: any) => {\n          this.imageFile = {\n              link: _event.target.result,\n              file: event.srcElement.files[0],\n              name: event.srcElement.files[0].name\n          };\n      };\n      reader.readAsDataURL(event.target.files[0]);\n      const formData = new FormData();\n      formData.append(\"otherDocument\", event.target.files[0]);\n\n      this.userRest.storeDocument(formData).subscribe(\n        (response) => { console.log(response)\n          this.registerForm.patchValue({\n            otherDocument: response.path,\n            // formControlName2: myValue2 (can be omitted)\n          });\n        },\n        (error) => { console.log(error) }\n      );\n  }\n}\nimagesPreviewWorkAuth(event) {\n  if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n\n      reader.onload = (_event: any) => {\n          this.imageFile = {\n              link: _event.target.result,\n              file: event.srcElement.files[0],\n              name: event.srcElement.files[0].name\n          };\n      };\n      reader.readAsDataURL(event.target.files[0]);\n      const formData = new FormData();\n      formData.append(\"workAuthorization\", event.target.files[0]);\n\n      this.userRest.storeDocument(formData).subscribe(\n        (response) => { console.log(response)\n          this.registerForm.patchValue({\n            workAuthorization: response.path,\n            // formControlName2: myValue2 (can be omitted)\n          });\n        },\n        (error) => { console.log(error) }\n      );\n  }\n}\n  OnFocus() {\n    if(this.cars.length > this.totalNumberOfCars) {\n      this.cars.shift();\n    }\n  }\n\n  OnBlur() {\n    console.log(\"OnBlur\");\n  }\n\n  test(event) {\n    const charCode = event.keyCode;\n    if(event.key === 'Enter') {\n      this.selectedCar = this.cars.find(car => {\n       return car.label.toLowerCase().includes(this.str.toLowerCase());\n      });\n      this.cars.unshift(this.selectedCar)\n      this.str = '';\n    } else if (event.key === 'Backspace') {\n        this.str = this.str.replace(/.$/,\"\");\n    } else if( (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode === 8) {\n        this.str+= event.key;\n      }\n\n  }\n\n\n  statesUi(event) {\n    const charCode = event.keyCode;\n    if(event.key === 'Enter') {\n      this.selectedStates = this.states.find(car => {\n       return car.label.toLowerCase().includes(this.str.toLowerCase());\n      });\n      this.states.unshift(this.selectedStates)\n      this.str = '';\n    } else if (event.key === 'Backspace') {\n        this.str = this.str.replace(/.$/,\"\");\n    } else if( (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode === 8) {\n        this.str+= event.key;\n      }\n  }\n  get jobTitle() { return this.registerForm.get('jobTitle'); }\n  get jobDescription() { return this.registerForm.get('jobDescription'); }\n  get jobTechnology() { return this.registerForm.get('jobTechnology'); }\n  get jobExperience() { return this.registerForm.get('jobExperience'); }\n  get jobLocation() { return this.registerForm.get('jobLocation'); }\n  get jobVisaType() { return this.registerForm.get('jobVisaType'); }\n  get jobStatus() { return this.registerForm.get('jobStatus'); }\nget workType(){ return this.registerForm.get('workType');  }\nget mainRequirement(){ return this.registerForm.get('mainRequirement');  }\nget rate(){ return this.registerForm.get('rate');  }\nget duration() {return this.registerForm.get('duration');  }\nget client() {return this.registerForm.get('duration');   }\nget jobResponsibility() {return this.registerForm.get('jobResponsibility');   }\n\n\n  registerUser(){\n     console.log(this.registerForm);\n\n\n //formData.append('myImageToSend', this.imageFile.file);\n\n\n      this.userRest.storeUser(this.registerForm).subscribe(\n        response => {\n          console.log(response),\n          this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Consultant is added' });\n          this.router.navigate(['jobs/list'])\n        },\n        error =>{\n          this.serverErrors = error.error.errors\n        }\n      );\n  }\n\n  updateUserDetails(){\n    let id = this.route.snapshot.params.id;\n    this.userRest.updateUser(this.registerForm,id).subscribe(\n      (response) => {\n        console.log(response),\n        this.router.navigate(['jobs/list'])\n      },\n      error =>{\n        this.serverErrors = error.error.errors\n      },\n      () => console.log('completed')\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FjY291bnRtYW5hZ2VyL3VzZXItaW5kZXgvdXNlci1pbmRleC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SortEvent } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-user-index',\r\n  templateUrl: './user-index.component.html',\r\n  styleUrls: ['./user-index.component.scss']\r\n})\r\nexport class UserIndexComponent implements OnInit {\r\n  userList: Array<object> = [];\r\n  timeSheets: Array<object> = [];\r\n    statuses: any[];\r\n    loading: boolean = true;\r\n  constructor(private route: ActivatedRoute,  private router: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \":host ::ng-deep .p-cell-editing {\\n  padding-top: 0 !important;\\n  padding-bottom: 0 !important;\\n}\\n\\n.disable-td {\\n  pointer-events: none;\\n}\\n\\n.ui-button {\\n  margin-left: 0.25rem;\\n  margin-right: 0.25rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYWNjb3VudG1hbmFnZXIvdXNlci1saXN0L0M6XFx4YW1wcFxcaHRkb2NzXFxzZXAtYmFyXFxhbmcvc3JjXFxhcHBcXGFkbWluXFxhY2NvdW50bWFuYWdlclxcdXNlci1saXN0XFx1c2VyLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FkbWluL2FjY291bnRtYW5hZ2VyL3VzZXItbGlzdC91c2VyLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBQTtFQUNBLDRCQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxvQkFBQTtBQ0VGOztBREFBO0VBQ0Usb0JBQUE7RUFDQSxxQkFBQTtBQ0dGIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vYWNjb3VudG1hbmFnZXIvdXNlci1saXN0L3VzZXItbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IDo6bmctZGVlcCAucC1jZWxsLWVkaXRpbmcge1xyXG4gIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7XHJcbiAgcGFkZGluZy1ib3R0b206IDAgIWltcG9ydGFudDtcclxufVxyXG4uZGlzYWJsZS10ZHtcclxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxufVxyXG4udWktYnV0dG9uIHtcclxuICBtYXJnaW4tbGVmdDogMC4yNXJlbTtcclxuICBtYXJnaW4tcmlnaHQ6IDAuMjVyZW07XHJcbn1cclxuIiwiOmhvc3QgOjpuZy1kZWVwIC5wLWNlbGwtZWRpdGluZyB7XG4gIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG5cbi5kaXNhYmxlLXRkIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5cbi51aS1idXR0b24ge1xuICBtYXJnaW4tbGVmdDogMC4yNXJlbTtcbiAgbWFyZ2luLXJpZ2h0OiAwLjI1cmVtO1xufSJdfQ== */\"","import { Component,  TemplateRef, OnInit, ViewChild, Output, EventEmitter,Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserRestService } from '../user-rest.service';\r\nimport { Representative } from '../../../customer';\r\nimport { Table } from 'primeng/table';\r\n\r\nimport { FormBuilder,FormGroup,FormControl } from '@angular/forms';\r\n\r\nimport { MessageService } from 'primeng/api';\r\n\r\nimport { ConfirmationService } from 'primeng/api';\r\n\r\n\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3',\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF',\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-user-list',\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [MessageService,ConfirmationService],\r\n\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  @ViewChild('dt', { static: true }) table: Table;\r\n  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\r\n  timeSheets: Array<object> = [];\r\n  representatives: Representative[];\r\n  confirmDropDatabaseDialogVisible = false;\r\nstatusOptions = [\r\n   // {label: \"Dot net Developer\",value: 'Dot net Developer'},\r\n    {label: \"Java Developer\",value: 'Java Developer'},\r\n    {label: \"QA Tester/QA Analyst\",value: 'QA Tester/QA Analyst'},\r\n  //  {label: \"Devops Engineer\",value: 'Devops Engineer'}\r\n];;\r\n  frozenCols: any[];\r\n  statuses: any[];\r\n  jobTitle:string;\r\n  jobDescription:any;\r\n  jobLocation:string;\r\n  client:string;\r\n  workType:string;\r\n  jobResponsibility:any;\r\n  duration:any;\r\n  loading: boolean = true;\r\n  scrollableCols: any[];\r\n  displayModal: boolean;\r\n  clonedProducts: { [s: string]: any; } = {};\r\n  constructor( private confirmation: ConfirmationService,private fb: FormBuilder,private messageService: MessageService, private route: ActivatedRoute, private userRest: UserRestService,\r\n     private router: Router) { }\r\n\r\n     showModalDialog(data:any) {\r\n       this.jobTitle=data.jobTitle;\r\n       this.jobLocation=data.jobLocation;\r\n       this.client=data.client;\r\n       this.workType=data.workType;\r\n       this.jobResponsibility=data.jobResponsibility;\r\n       this.jobDescription=data.jobDescription;\r\n       this.duration=data.duration;\r\n      this.displayModal = true;\r\n  }\r\n  ngOnInit() {\r\n\r\n    this.userRest.getConsultants().subscribe(\r\n      (response) => { console.log(this.timeSheets = response.jobs); this.loading = false; },\r\n      (error) => { console.log(error) }\r\n    );\r\n    this.frozenCols = [\r\n      { field: 'consultatName', header: 'Name' },\r\n  ];\r\n  this.scrollableCols = [\r\n    { field: 'user_details.name', header: 'Created By', width: '20%',editable: false},\r\n   { field: 'jobTitle', header: 'Job Title', width: '20%',editable: true},\r\n  //  { field: 'jobDescription', header: 'DESC', width: '40%',editable: true },\r\n    { field: 'jobTechnology', header: 'Technology', width: '20%',editable: true },\r\n    { field: 'jobExperience', header: 'Exp' , width: '20%',editable: true},\r\n   { field: 'jobLocation', header: 'Location', width: '20%' ,editable: false},\r\n    { field: 'jobVisaType', header: 'Visa Type', width: '20%',editable: false },\r\n    { field: 'jobStatus', header: 'Status', width: '20%',editable: false },\r\n\r\n];\r\n\r\n    this.representatives = [\r\n      {name: \"Dot net Developer\"},\r\n      {name: \"Java Developer\"},\r\n      {name: \"QA Tester/QA Analyst\"},\r\n      {name: \"Devops Engineer\"}\r\n\r\n  ];\r\n\r\n\r\n  this.statuses = [\r\n      {label: 'Unqualified', value: 'unqualified'},\r\n      {label: 'Qualified', value: 'qualified'},\r\n      {label: 'New', value: 'new'},\r\n      {label: 'Negotiation', value: 'negotiation'},\r\n      {label: 'Renewal', value: 'renewal'},\r\n      {label: 'Proposal', value: 'proposal'}\r\n  ]\r\n  }\r\n  onActivityChange(event) {\r\n    const value = event.target.value;\r\n    if (value && value.trim().length) {\r\n        const activity = parseInt(value);\r\n\r\n        if (!isNaN(activity)) {\r\n            this.table.filter(activity, 'activity', 'gte');\r\n        }\r\n    }\r\n}\r\nonRowEditInit(product: any) {\r\nconsole.log(product)\r\n  this.clonedProducts[product.reportId] = { ...product };\r\n}\r\nonRowEditSave(product: any, index: number) {\r\n  //alert(product.timeSheetId)\r\n  /*this.loading = true;\r\n  if (product.duration < 16) {\r\n    let updateUser: FormGroup;\r\n    updateUser = new FormGroup({\r\n      'duration': new FormControl(product.duration),\r\n      'fromDate': new FormControl(product.fromDate),\r\n      'assignment': new FormControl(product.assignment),\r\n      'serviceCode': new FormControl(product.serviceCode),\r\n    });\r\n    this.userRest.updateTimeSheet(updateUser, product.timeSheetId).subscribe(\r\n      (response) => {\r\n        this.loading = false;\r\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Timesheet is updated' });\r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n        this.loading = false;\r\n        this.timeSheets[index] = this.clonedProducts[product.timeSheetId];\r\n        delete this.timeSheets[product.timeSheetId];\r\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: error.error.message });\r\n      },\r\n      () => console.log('completed')\r\n    );\r\n\r\n  }\r\n  else {\r\n    this.loading = false;\r\n    this.timeSheets[index] = this.clonedProducts[product.timeSheetId];\r\n    delete this.timeSheets[product.timeSheetId];\r\n    this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Invalid Duration only 15 hours accepted' });\r\n  } */\r\n}\r\n\r\nonRowEditCancel(product: any, index: number) {\r\n  this.timeSheets[index] = this.clonedProducts[product.reportId];\r\n  delete this.timeSheets[product.reportId];\r\n}\r\n\r\n\r\n\r\n\r\nonDateSelect(value) {\r\n    this.table.filter(this.formatDate(value), 'created_at', 'equals')\r\n}\r\n\r\nformatDate(date) {\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n\r\n    if (month < 10) {\r\n        month = '0' + month;\r\n    }\r\n\r\n    if (day < 10) {\r\n        day = '0' + day;\r\n    }\r\n\r\n    return date.getFullYear() + '-' + month + '-' + day;\r\n}\r\n\r\nonRepresentativeChange(event) {\r\n  if(event.value)\r\n  {\r\n    console.log(event.value)\r\n    this.table.filter(event.value, 'technology', 'in')\r\n  }\r\n\r\n}\r\n\r\ndropDatabase(event: Event,index:number) {\r\n  if (event.defaultPrevented) return;\r\n  event.preventDefault();\r\n\r\n  this.confirmation.confirm({\r\n    key: 'confirm-drop-database',\r\n    message: 'Are you sure to Aprove for Hotlist',\r\n    accept: () => { this._dropDatabase(index); },\r\n  });\r\n}\r\n\r\nprivate _dropDatabase(index) {\r\n  const formData = new FormData();\r\n  formData.append(\"index\",index );\r\n  console.log(formData);\r\n  this.userRest.statusChangeConsultant(formData).subscribe(\r\n    (response) => { console.log(response); this.loading = false;\r\n      this.timeSheets = response.timesheet;\r\n    },\r\n    (error) => { console.log(error) }\r\n  );\r\n\r\n}\r\ndownload(event: Event,url:any)\r\n{\r\n\r\nwindow.open('https://portal.webmobilez.com/public/storage/'+url);\r\n\r\n}\r\neditUser(id: number) {\r\n  this.router.navigate(['jobs/edit',id]);\r\n}\r\ngetColor (status:string,adminStatus:string)\r\n{\r\n  if(adminStatus==\"A\")\r\n  {\r\n    return \"#d4edda\"\r\n  }else if(status==\"not interested\")\r\n  {\r\n    return \"#f8d7da\"\r\n  }\r\n}\r\nviewUser(id: number)\r\n{\r\nalert()\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport {environment} from \"../../../environments/environment\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRestService {\n  users: Array<{id: number, name: string, email: string}> = [];\n  constructor(private http: HttpClient) { }\n\n  getTimeSheet(): Observable<any> {\n    return this.http.get(`${environment.api}/getAllTimesheets`);\n  }\n  getConsultants(): Observable<any> {\n    return this.http.get(`${environment.api}/jobs/`);\n  }\n  storeUser(form): Observable<any> {\n    return this.http.post(`${environment.api}/jobs`,form.value);\n  }\n statusChangeConsultant(index): Observable<any> {\n\n    return this.http.post(`${environment.api}/status-consultant`,index);\n  }\n\n  editUser(id): Observable<any> {\n    return this.http.get(`${environment.api}/jobs/` + id);\n  }\n  updateUser(form,id): Observable<any> {\n    return this.http.put(`${environment.api}/jobs/` + id, form.value);\n  }\n  storeDocument(document): Observable<any> {\n\n    return this.http.post(`${environment.api}/saveDocument`, document);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserIndexComponent } from './user-index/user-index.component';\n\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserCreateComponent } from './user-create/user-create.component';\nimport { UserEditComponent } from './user-edit/user-edit.component';\nconst routes: Routes = [\n // { path: 'list', component: UserListComponent, outlet: 'users' },\n  {\n    path: '',\n    component: UserIndexComponent,\n    children: [\n\n    /*  {path: 'list', component: UserListComponent,data: {\n        expectedRole: 'Accountmanager'\n      }},\n      {path: 'inactivelist', component: UserListComponent,data: {\n        expectedRole: 'Accountmanager'\n      }},\n      {path: 'create', component: UserCreateComponent,data: {\n        expectedRole: 'Accountmanager'\n      }},\n      {path: 'edit/:id', component: UserEditComponent,data: {\n        expectedRole: 'Accountmanager'\n      }}, */\n      {path: 'list', component: UserListComponent},\n      {path: 'inactivelist', component: UserListComponent},\n      {path: 'create', component: UserCreateComponent},\n      {path: 'edit/:id', component: UserEditComponent},\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserIndexComponent } from './user-index/user-index.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserCreateComponent } from './user-create/user-create.component';\nimport { UserEditComponent } from './user-edit/user-edit.component';\nimport { UserRestService } from './user-rest.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TableModule } from 'primeng/table';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { ToastModule } from 'primeng/toast';\nimport { SliderModule } from 'primeng/slider';\nimport { FormsModule } from '@angular/forms';\nimport { ContextMenuModule } from 'primeng/contextmenu';\nimport { DialogModule } from 'primeng/dialog';\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { TabMenuModule } from 'primeng/tabmenu';\nimport { MenuItem } from 'primeng/api';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport { DropdownModule } from 'primeng/dropdown';\nimport {InplaceModule} from 'primeng/inplace';\nimport { FieldPipe2 } from '../../field2.pipe';\nimport { ConfirmDialogModule} from 'primeng/confirmdialog';\n\nimport { AngularEditorModule } from '@kolkov/angular-editor';\n@NgModule({\n  declarations: [UserIndexComponent, UserListComponent,UserCreateComponent,UserEditComponent,FieldPipe2],\n  imports: [\n    CommonModule,  AngularEditorModule ,\n    UserRoutingModule,\n    ReactiveFormsModule,TableModule, MultiSelectModule,\n    SliderModule,\n    DialogModule,\n    MultiSelectModule,\n    ContextMenuModule,\n    ButtonModule,\n    ToastModule,\n    InputTextModule,ConfirmDialogModule,\n    ProgressBarModule, TabMenuModule, TooltipModule, FileUploadModule, NgxDropzoneModule, DropdownModule, FormsModule,InplaceModule\n  ],\n  providers: [\n    UserRestService\n  ]\n})\nexport class UserModule { }\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DatePipe, CurrencyPipe, DecimalPipe } from \"@angular/common\";\r\n@Pipe({\r\n  name: \"field\"\r\n})\r\nexport class FieldPipe2 implements PipeTransform {\r\n  /**\r\n   *\r\n   */\r\n  constructor() {}\r\n  transform(value: any, ...args: any[]): any {\r\n    const column: any = args[0];\r\n    let result = value;\r\n    // addressModel.City.Name\r\n    column.field.split(\".\").forEach(f => (result = result[f]));\r\n    return result?result:'-';\r\n  }\r\n}\r\n"],"sourceRoot":""}