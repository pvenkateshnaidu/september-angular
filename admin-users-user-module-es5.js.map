{"version":3,"sources":["webpack:///./src/app/admin/users/user-create/user-create.component.html","webpack:///./src/app/admin/users/user-edit/user-edit.component.html","webpack:///./src/app/admin/users/user-index/user-index.component.html","webpack:///./src/app/admin/users/user-list/user-list.component.html","webpack:///./src/app/admin/users/user-create/user-create.component.scss","webpack:///./src/app/admin/users/user-create/user-create.component.ts","webpack:///./src/app/admin/users/user-edit/user-edit.component.scss","webpack:///./src/app/admin/users/user-edit/user-edit.component.ts","webpack:///./src/app/admin/users/user-index/user-index.component.scss","webpack:///./src/app/admin/users/user-index/user-index.component.ts","webpack:///./src/app/admin/users/user-list/user-list.component.scss","webpack:///./src/app/admin/users/user-list/user-list.component.ts","webpack:///./src/app/admin/users/user-rest.service.ts","webpack:///./src/app/admin/users/user-routing.module.ts","webpack:///./src/app/admin/users/user.module.ts"],"names":[],"mappings":"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","file":"admin-users-user-module-es5.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n                <h4 class=\\\"remove-margin\\\">Add New User Detail </h4>\\n                <div class=\\\"card\\\">\\n                  <div class=\\\"card-header\\\">\\n                    <!-- <h5 class=\\\"card-title\\\">Edit Profile</h5> -->\\n                  </div>\\n                  <div class=\\\"card-body\\\">\\n                    <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"registerUser()\\\">\\n                      <div class=\\\"row\\\">\\n                          <div class=\\\"col-md-12\\\">\\n                              <div class=\\\"form-group\\\">\\n                              <label>First Name</label>\\n                              <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\" required>\\n                              <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\"\\n                                      class=\\\"form-text text-muted\\\">\\n                                    <div *ngIf=\\\"name.errors?.required\\\">\\n                                      Name is required.\\n                                    </div>\\n                                    <div *ngIf=\\\"name.errors?.minlength\\\">\\n                                      Name must be at least 5 characters long.\\n                                    </div>\\n                              </div>\\n                              <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.name }}</small>\\n\\n                              </div>\\n                          </div>\\n                      </div>\\n\\n                        <div class=\\\"row\\\">\\n                          <!-- <div class=\\\"col-md-6 pr-1\\\">\\n                            <div class=\\\"form-group\\\">\\n                              <label>User Name</label>\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\">\\n                            </div>\\n                          </div> -->\\n                          <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                              <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n                              <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" required>\\n\\n                              <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\"\\n                                      class=\\\"form-text text-muted\\\">\\n                                    <div *ngIf=\\\"email.errors?.required\\\">\\n                                      Email is required.\\n                                    </div>\\n                                    <div *ngIf=\\\"email.errors?.email\\\">\\n                                      Invalid email address.\\n                                    </div>\\n                              </div>\\n\\n                              <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.email }}</small>\\n                            </div>\\n                          </div>\\n                        </div>\\n\\n      <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                    <label>Role</label>\\n                    <select formControlName=\\\"role\\\" class=\\\"form-control\\\">\\n                      <option value=\\\"\\\">Choose Role</option>\\n                      <option value=\\\"Admin\\\"> Admin</option>\\n                      <option value=\\\"Accountmanager\\\">Account Manger</option>\\n                      <option value=\\\"Recruiters\\\">Recruiters</option>\\n                      <option value=\\\"BenchSales\\\">Bench Sales</option>\\n                      <option value=\\\"HeadHunters\\\">Head hunters</option>\\n                      <option value=\\\"HeadHuntersAdmin\\\">Head hunters Admin</option>\\n                    </select>\\n                    <div *ngIf=\\\"role.invalid && (role.dirty || role.touched)\\\"\\n                            class=\\\"form-text text-muted\\\">\\n                          <div *ngIf=\\\"role.errors?.required\\\">\\n                            Role is required.\\n                          </div>\\n\\n                    </div>\\n                    <small id=\\\"roleHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.role }}</small>\\n\\n                    </div>\\n                </div>\\n            </div>\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col-md-12\\\">\\n                              <div class=\\\"form-group\\\">\\n                              <label>Password</label>\\n                              <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required>\\n\\n                              <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\"\\n                                      class=\\\"form-text text-muted\\\">\\n                                    <div *ngIf=\\\"password.errors?.required\\\">\\n                                      Password is required.\\n                                    </div>\\n                                    <div *ngIf=\\\"password.errors?.minlength\\\">\\n                                      Password must be at least 5 characters long.\\n                                    </div>\\n                              </div>\\n\\n                              <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.password }}</small>\\n                              </div>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col-md-12\\\">\\n                              <div class=\\\"form-group\\\">\\n                              <label>Confirm Password</label>\\n                              <input type=\\\"password\\\" formControlName=\\\"confirm_password\\\" class=\\\"form-control\\\" placeholder=\\\"Confirm Password\\\" required>\\n\\n                              <div *ngIf=\\\"confirm_password.invalid && (confirm_password.dirty || confirm_password.touched)\\\"\\n                                      class=\\\"form-text text-muted\\\">\\n                                    <div *ngIf=\\\"confirm_password.errors?.required\\\">\\n                                      Confirm Password is required.\\n                                    </div>\\n                                    <div *ngIf=\\\"confirm_password.errors?.minlength\\\">\\n                                      Confirm Password must be at least 5 characters long.\\n                                    </div>\\n                              </div>\\n\\n                              <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.confirm_password }}</small>\\n                              </div>\\n                          </div>\\n                      </div>\\n\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"update ml-auto mr-auto\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-round\\\" [disabled]=\\\"!registerForm.valid\\\">Register User</button>\\n                          </div>\\n                        </div>\\n                      </form>\\n                  </div>\\n                </div>\\n              </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n            <h4 class=\\\"remove-margin\\\">Edit User Detail </h4>\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header\\\">\\n                <!-- <h5 class=\\\"card-title\\\">Edit Profile</h5> -->\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <form [formGroup]=\\\"updateUser\\\" (ngSubmit)=\\\"updateUserDetails()\\\">\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-12\\\">\\n                          <div class=\\\"form-group\\\">\\n                            <input type=\\\"hidden\\\" name=\\\"_method\\\" value=\\\"PUT\\\">\\n                          <label>First Name</label>\\n                          <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\" required>\\n                          <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\"\\n                                  class=\\\"form-text text-muted\\\">\\n                                <div *ngIf=\\\"name.errors?.required\\\">\\n                                  Name is required.\\n                                </div>\\n                                <div *ngIf=\\\"name.errors?.minlength\\\">\\n                                  Name must be at least 5 characters long.\\n                                </div>\\n                          </div>\\n                          <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.name }}</small>\\n\\n                          </div>\\n                      </div>\\n                  </div>\\n\\n                    <div class=\\\"row\\\">\\n                      <!-- <div class=\\\"col-md-6 pr-1\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label>User Name</label>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\">\\n                        </div>\\n                      </div> -->\\n                      <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                        <label>Role</label>\\n                        <select formControlName=\\\"role\\\" class=\\\"form-control\\\">\\n                          <option value=\\\"null\\\">Choose Role</option>\\n                          <option value=\\\"Admin\\\"> Admin</option>\\n                          <option value=\\\"Accountmanager\\\">Account Manger</option>\\n                          <option value=\\\"Recruiters\\\">Recruiters</option>\\n                          <option value=\\\"BenchSales\\\">Bench Sales</option>\\n                          <option value=\\\"HeadHunters\\\">Head hunters</option>\\n                          <option value=\\\"HeadHuntersAdmin\\\">Head hunters Admin</option>\\n                        </select>\\n                        <div *ngIf=\\\"role.invalid && (role.dirty || role.touched)\\\"\\n                                class=\\\"form-text text-muted\\\">\\n                              <div *ngIf=\\\"role.errors?.required\\\">\\n                                Role is required.\\n                              </div>\\n\\n                        </div>\\n                        <small id=\\\"roleHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.role }}</small>\\n\\n                        </div>\\n                    </div>\\n                      <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n                          <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" required>\\n\\n                          <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\"\\n                                  class=\\\"form-text text-muted\\\">\\n                                <div *ngIf=\\\"email.errors?.required\\\">\\n                                  Email is required.\\n                                </div>\\n                                <div *ngIf=\\\"email.errors?.email\\\">\\n                                  Invalid email address.\\n                                </div>\\n                          </div>\\n\\n                          <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.email }}</small>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-12\\\">\\n                          <div class=\\\"form-group\\\">\\n                          <label>Password</label>\\n                          <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" >\\n\\n                          <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\"\\n                                  class=\\\"form-text text-muted\\\">\\n\\n                                <div *ngIf=\\\"password.errors?.minlength\\\">\\n                                  Password must be at least 5 characters long.\\n                                </div>\\n                          </div>\\n\\n                          <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.password }}</small>\\n                          </div>\\n                      </div>\\n                    </div>\\n\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"update ml-auto mr-auto\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-round\\\" [disabled]=\\\"!updateUser.valid\\\">Update</button>\\n                      </div>\\n                    </div>\\n                  </form>\\n              </div>\\n            </div>\\n          </div>\\n</div>\\n\"","module.exports = \"\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n          <h4 class=\\\"remove-margin\\\"> Users Detail </h4>\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <!-- <div class=\\\"float-right\\\"> -->\\r\\n          <a routerLink=\\\"/users/create\\\" class=\\\"btn btn-info btn-sm\\\">Add New</a>\\r\\n        <!-- </div> -->\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <p-table #dt [value]=\\\"timeSheets\\\" dataKey=\\\"id\\\"\\r\\n        [rows]=\\\"10\\\" [showCurrentPageReport]=\\\"true\\\" [rowsPerPageOptions]=\\\"[6,12]\\\" [loading]=\\\"loading\\\" styleClass=\\\"p-datatable-customers\\\"\\r\\n        [paginator]=\\\"false\\\"\\r\\n        [filterDelay]=\\\"0\\\" [globalFilterFields]=\\\"['fromDate','duration','assignment','serviceCode']\\\">\\r\\n\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n            <tr>\\r\\n                <th>Name</th>\\r\\n                <th>Email</th>\\r\\n                <th>Role</th>\\r\\n                <th>Created At</th>\\r\\n                <th>Action</th>\\r\\n            </tr>\\r\\n\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-customer>\\r\\n            <tr>\\r\\n              <td>\\r\\n                {{customer.name}}\\r\\n              </td>\\r\\n                <td>\\r\\n                    {{customer.email}}\\r\\n                </td>\\r\\n                <td>\\r\\n                   {{customer.role}}\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{customer.created_at | date}}\\r\\n               </td>\\r\\n               <td>\\r\\n               <a (click)=\\\"editUser(customer.id)\\\"  class=\\\"btn btn-warning btn-sm\\\">Edit</a>\\r\\n               </td>\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n            <tr>\\r\\n                <td colspan=\\\"6\\\">No Users found.</td>\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n    </p-table>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<p-inplace >\\r\\n  <ng-template pTemplate=\\\"display\\\">\\r\\n      Click to Edit\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"content\\\">\\r\\n      <input type=\\\"text\\\" value=\\\"PrimeNG\\\" pInputText>\\r\\n  </ng-template>\\r\\n</p-inplace>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3VzZXJzL3VzZXItY3JlYXRlL3VzZXItY3JlYXRlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserRestService } from '../user-rest.service';\nimport { FormGroup, FormControlName, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-user-create',\n  templateUrl: './user-create.component.html',\n  styleUrls: ['./user-create.component.scss']\n})\nexport class UserCreateComponent implements OnInit {\n  serverErrors = [];\n  registerForm: FormGroup\n  constructor(private route: ActivatedRoute, private userRest: UserRestService, private router: Router) { }\n\n  ngOnInit() {\n    this.registerForm = new FormGroup({\n      'name': new FormControl(null, [Validators.required, Validators.minLength(3)]),\n      'email': new FormControl(null, [Validators.required, Validators.email]),\n      'role': new FormControl(\"\", [Validators.required]),\n      'password': new FormControl(null, [Validators.required, Validators.minLength(5)]),\n      'confirm_password': new FormControl(null, [Validators.required, Validators.minLength(5)])\n    })\n  }\n\n  get name() { return this.registerForm.get('name'); }\n  get email() { return this.registerForm.get('email'); }\n  get password() { return this.registerForm.get('password'); }\n  get confirm_password() { return this.registerForm.get('confirm_password'); }\n  get role() { return this.registerForm.get('role'); }\n  registerUser(){\n     console.log(this.registerForm);\n      this.userRest.storeUser(this.registerForm).subscribe(\n        response => {\n          console.log(response),\n          this.router.navigate(['users/list'])\n        },\n        error =>{\n          this.serverErrors = error.error.errors\n        }\n      );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3VzZXJzL3VzZXItZWRpdC91c2VyLWVkaXQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { UserRestService } from '../user-rest.service';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.scss']\n})\nexport class UserEditComponent implements OnInit {\n  updateUser: FormGroup;\n  serverErrors = [];\n  @Input() data:any;\n  constructor(private route: ActivatedRoute, private userRest: UserRestService, private router: Router) { }\n\n  ngOnInit() {\n     let id = this.route.snapshot.params.id;\n     this.userRest.editUser(id).subscribe(\n      (response) => {\n        this.updateUser.patchValue({\n          'name': response.user.name,\n          'email':response.user.email,\n          'role' :response.user.role\n        })\n      },\n      (error) => console.log(error)\n    );\n\n      console.log(this.data);\n\n      this.updateUser = new FormGroup({\n        'name': new FormControl(null, [Validators.required, Validators.minLength(5)]),\n        'email': new FormControl(null, [Validators.required, Validators.email]),\n        'password': new FormControl(null),\n        'role': new FormControl(null),\n\n      });\n  }\n\n  get name() { return this.updateUser.get('name'); }\n  get email() { return this.updateUser.get('email'); }\n   get password() { return this.updateUser.get('password'); }\n   get role() { return this.updateUser.get('role'); }\n  updateUserDetails(){\n    let id = this.route.snapshot.params.id;\n    this.userRest.updateUser(this.updateUser,id).subscribe(\n      (response) => {\n        console.log(response),\n        this.router.navigate(['users/list'])\n      },\n      error =>{\n        this.serverErrors = error.error.errors\n      },\n      () => console.log('completed')\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3VzZXJzL3VzZXItaW5kZXgvdXNlci1pbmRleC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserRestService } from '../user-rest.service';\r\nimport { Customer,Representative  } from '../../../customer';\r\n\r\nimport { SortEvent } from 'primeng/api';\r\nimport { Table } from 'primeng/table';\r\n@Component({\r\n  selector: 'app-user-index',\r\n  templateUrl: './user-index.component.html',\r\n  styleUrls: ['./user-index.component.scss']\r\n})\r\nexport class UserIndexComponent implements OnInit {\r\n  userList: Array<object> = [];\r\n  timeSheets: Array<object> = [];\r\n    customers: Customer[];\r\n\r\n    representatives: Representative[];\r\n\r\n    statuses: any[];\r\n\r\n    loading: boolean = true;\r\n\r\n    products1: Customer[];\r\n    @ViewChild('dt',{ static: true }) table: Table;\r\n  constructor(private route: ActivatedRoute, private userRest: UserRestService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n     this.userRest.getUsers().subscribe(\r\n     (response) => { console.log(this.userList = response.user);  this.loading = false; },\r\n     (error) => { console.log(error) }\r\n    );\r\n\r\n\r\n  }\r\n\r\n  deleteUser(id: number) {\r\n    if(confirm(\"Are you sure to delete \")) {\r\n      this.userRest.deleteUser(id).subscribe(\r\n        (response) => console.log(response),\r\n        (error) => console.log(error)\r\n      );\r\n    }\r\n  }\r\n\r\n  editUser(id: number) {\r\n    this.router.navigate(['users/edit',id]);\r\n  }\r\n\r\n}\r\n","module.exports = \":host ::ng-deep .p-cell-editing {\\n  padding-top: 0 !important;\\n  padding-bottom: 0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vdXNlcnMvdXNlci1saXN0L0M6XFx4YW1wcFxcaHRkb2NzXFx3ZWJwb3J0YWwvc3JjXFxhcHBcXGFkbWluXFx1c2Vyc1xcdXNlci1saXN0XFx1c2VyLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FkbWluL3VzZXJzL3VzZXItbGlzdC91c2VyLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBQTtFQUNBLDRCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi91c2Vycy91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIC5wLWNlbGwtZWRpdGluZyB7XHJcbiAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDtcclxuICBwYWRkaW5nLWJvdHRvbTogMCAhaW1wb3J0YW50O1xyXG59XHJcbiIsIjpob3N0IDo6bmctZGVlcCAucC1jZWxsLWVkaXRpbmcge1xuICBwYWRkaW5nLXRvcDogMCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWJvdHRvbTogMCAhaW1wb3J0YW50O1xufSJdfQ== */\"","import { Component, ChangeDetectionStrategy, TemplateRef, OnInit, ViewChild, Output, EventEmitter,Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserRestService } from '../user-rest.service';\r\nimport { Customer, Representative } from '../../../customer';\r\nimport { Table } from 'primeng/table';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { FormGroup,FormBuilder, Validators, FormControl } from '@angular/forms';\r\n\r\nimport { SelectItem } from 'primeng/api';\r\nimport { MessageService } from 'primeng/api';\r\n\r\nimport {\r\n  CalendarEvent,\r\n  CalendarEventAction,\r\n  CalendarEventTimesChangedEvent,\r\n  CalendarView,\r\n} from 'angular-calendar';\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3',\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF',\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-user-list',\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [MessageService],\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  @ViewChild('dt', { static: true }) table: Table;\r\n  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\r\n  timeSheets: Array<object> = [];\r\n\r\n  loading: boolean = true;\r\n\r\n\r\n  constructor( private fb: FormBuilder,private messageService: MessageService, private route: ActivatedRoute, private userRest: UserRestService,\r\n     private router: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.userRest.getUsers().subscribe(\r\n      (response) => { console.log(this.timeSheets = response.user); this.loading = false; },\r\n      (error) => { console.log(error) }\r\n    );\r\n\r\n  }\r\n\r\n  deleteUser(id: number) {\r\n    if(confirm(\"Are you sure to delete \")) {\r\n      this.userRest.deleteUser(id).subscribe(\r\n        (response) => console.log(response),\r\n        (error) => console.log(error)\r\n      );\r\n    }\r\n  }\r\n\r\n  editUser(id: number) {\r\n    this.router.navigate(['users/edit',id]);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRestService {\n  users: Array<{id: number, name: string, email: string}> = [];\n  constructor(private http: HttpClient) { }\n\n  getUsers(): Observable<any> {\n    return this.http.get('https://portal.webmobilez.com/public/api/user-list');\n  }\n\n  editUser(id): Observable<any> {\n    return this.http.get('https://portal.webmobilez.com/public/api/user-list/' + id);\n  }\n\n  updateUser(form,id): Observable<any> {\n    return this.http.put('https://portal.webmobilez.com/public/api/user-list/' + id, form.value);\n  }\n\n  storeUser(form): Observable<any> {\n    return this.http.post('https://portal.webmobilez.com/public/api/user-list',form.value);\n  }\n\n  deleteUser(id): Observable<any> {\n    return this.http.delete('https://portal.webmobilez.com/public/api/user-list/' + id);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserIndexComponent } from './user-index/user-index.component';\nimport { UserCreateComponent } from './user-create/user-create.component';\nimport { UserEditComponent } from './user-edit/user-edit.component';\nimport { UserListComponent } from './user-list/user-list.component';\nconst routes: Routes = [\n // { path: 'list', component: UserListComponent, outlet: 'users' },\n  {\n    path: '',\n    component: UserIndexComponent,\n    children: [\n      {path: 'create', component: UserCreateComponent,data: {\n        expectedRole: 'Admin'\n      }},\n      {path: 'edit/:id', component: UserEditComponent,data: {\n        expectedRole: 'Admin'\n      }},\n      {path: 'delete', component: UserIndexComponent,data: {\n        expectedRole: 'Admin'\n      }},\n      {path: 'list', component: UserListComponent,data: {\n        expectedRole: 'Admin'\n      }}\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserIndexComponent } from './user-index/user-index.component';\nimport { UserCreateComponent } from './user-create/user-create.component';\nimport { UserEditComponent } from './user-edit/user-edit.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserRestService } from './user-rest.service';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { TableModule } from 'primeng/table';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { ToastModule } from 'primeng/toast';\nimport { SliderModule } from 'primeng/slider';\nimport { FormsModule } from '@angular/forms';\nimport { ContextMenuModule } from 'primeng/contextmenu';\nimport { DialogModule } from 'primeng/dialog';\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { TabMenuModule } from 'primeng/tabmenu';\nimport { MenuItem } from 'primeng/api';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { FileUploadModule } from 'primeng/fileupload';\n\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport { DropdownModule } from 'primeng/dropdown';\nimport {InplaceModule} from 'primeng/inplace';\n\n@NgModule({\n  declarations: [UserIndexComponent, UserCreateComponent, UserEditComponent,UserListComponent],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    ReactiveFormsModule, TableModule, MultiSelectModule, CalendarModule,\n    SliderModule,\n    DialogModule,\n    MultiSelectModule,\n    ContextMenuModule,\n    ButtonModule,\n    ToastModule,\n    InputTextModule,\n    ProgressBarModule, TabMenuModule, TooltipModule, FileUploadModule, NgxDropzoneModule, DropdownModule, FormsModule,InplaceModule\n  ],\n  providers: [\n    UserRestService\n  ]\n})\nexport class UserModule { }\n"],"sourceRoot":""}