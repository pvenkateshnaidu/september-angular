{"version":3,"sources":["webpack:///./src/app/admin/hotlist/user-create/user-create.component.html","webpack:///./src/app/admin/hotlist/user-index/user-index.component.html","webpack:///./src/app/admin/hotlist/user-list/user-list.component.html","webpack:///./src/app/admin/hotlist/documents.module.ts","webpack:///./src/app/admin/hotlist/user-create/user-create.component.scss","webpack:///./src/app/admin/hotlist/user-create/user-create.component.ts","webpack:///./src/app/admin/hotlist/user-index/user-index.component.scss","webpack:///./src/app/admin/hotlist/user-index/user-index.component.ts","webpack:///./src/app/admin/hotlist/user-list/user-list.component.scss","webpack:///./src/app/admin/hotlist/user-list/user-list.component.ts","webpack:///./src/app/admin/hotlist/user-rest.service.ts","webpack:///./src/app/admin/hotlist/user-routing.module.ts","webpack:///./src/app/field2.pipe.ts"],"names":[],"mappings":"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","file":"admin-hotlist-documents-module-es5.js","sourcesContent":["module.exports = \"<p-toast position=\\\"bottom-right\\\"></p-toast>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h4 class=\\\"remove-margin\\\">Add Consultant </h4>\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <!-- <h5 class=\\\"card-title\\\">Edit Profile</h5> -->\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"registerUser()\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Consultant First Name:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"consultatName\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\" required>\\n                <div *ngIf=\\\"consultatName.invalid && (consultatName.dirty || consultatName.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"consultatName.errors?.required\\\">\\n                    First Name is required.\\n                  </div>\\n                  <div *ngIf=\\\"consultatName.errors?.minlength\\\">\\n                    First Name must be at least 2 characters long.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.consultatName }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Consultant Last Name:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"consultantLastName\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name\\\" required>\\n                <div *ngIf=\\\"consultantLastName.invalid && (consultantLastName.dirty || consultantLastName.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"consultantLastName.errors?.required\\\">\\n                    Last Name is required.\\n                  </div>\\n                  <div *ngIf=\\\"consultantLastName.errors?.minlength\\\">\\n                    Last Name must be at least 2 characters long.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.consultantLastName }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleInputEmail1\\\">Consultant Email</label>\\n                <input type=\\\"email\\\" formControlName=\\\"consultantEmail\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" required>\\n\\n                <div *ngIf=\\\"consultantEmail.invalid && (consultantEmail.dirty || consultantEmail.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"consultantEmail.errors?.required\\\">\\n                    Email is required.\\n                  </div>\\n                  <div *ngIf=\\\"consultantEmail.errors?.email\\\">\\n                    Invalid email address.\\n                  </div>\\n                </div>\\n\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.consultantEmail }}</small>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Consultant Mobile Number:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"consultatMobileNumber\\\" class=\\\"form-control\\\" placeholder=\\\"Mobile Number\\\" required>\\n                <div *ngIf=\\\"consultatMobileNumber.invalid && (consultatMobileNumber.dirty || consultatMobileNumber.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"consultatMobileNumber.errors?.required\\\">\\n                    Mobile is required.\\n                  </div>\\n                  <div *ngIf=\\\"consultatMobileNumber.errors?.minlength\\\">\\n                    Mobile must be at least 10 number long.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.consultatMobileNumber }}</small>\\n\\n              </div>\\n            </div>\\n\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Technology</label>\\n\\n                <select  class=\\\"form-control\\\" formControlName=\\\"technology\\\">\\n                  <option [ngValue]=\\\"null\\\" disabled>Choose your profile</option>\\n                  <option *ngFor=\\\"let prf of allProfiles\\\" [ngValue]=\\\"prf\\\">\\n                   {{ prf.prName }}\\n                  </option>\\n                </select>\\n                <div *ngIf=\\\"technology.invalid && (technology.dirty || technology.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"technology.errors?.required\\\">\\n                    Technology is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.technology }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Other Technology:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"otherTechnologies\\\" class=\\\"form-control\\\" placeholder=\\\"Other Technology\\\" required>\\n                <div *ngIf=\\\"otherTechnologies.invalid && (otherTechnologies.dirty || otherTechnologies.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"otherTechnologies.errors?.required\\\">\\n                    Other Technology is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.otherTechnologies }}</small>\\n\\n              </div>\\n            </div>\\n\\n\\n            <div class=\\\"col-md-1\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Expected Rate:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"rate\\\" class=\\\"form-control\\\" placeholder=\\\"Rate\\\" required>\\n                <div *ngIf=\\\"rate.invalid && (rate.dirty || rate.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"rate.errors?.required\\\">\\n                    Rate is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.rate }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-1\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Experience:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"experience\\\" class=\\\"form-control\\\" placeholder=\\\"exp\\\" required>\\n                <div *ngIf=\\\"experience.invalid && (experience.dirty || experience.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"experience.errors?.required\\\">\\n                    Experience is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.experience }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>City:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"city\\\" class=\\\"form-control\\\" placeholder=\\\"City\\\" required>\\n                <div *ngIf=\\\"city.invalid && (city.dirty || city.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"city.errors?.required\\\">\\n                    City is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.city }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>State:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\" placeholder=\\\"State\\\" required>\\n                <div *ngIf=\\\"state.invalid && (state.dirty || state.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"state.errors?.required\\\">\\n                    State is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.state }}</small>\\n\\n              </div>\\n            </div>\\n\\n\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Willing to Reloacate:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"willingLocation\\\" class=\\\"form-control\\\" placeholder=\\\"Relocate\\\" required>\\n                <div *ngIf=\\\"willingLocation.invalid && (willingLocation.dirty || willingLocation.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"willingLocation.errors?.required\\\">\\n                    First Name is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.willingLocation }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Documents collected:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"documentsCollected\\\" class=\\\"form-control\\\"  required>\\n                <div *ngIf=\\\"documentsCollected.invalid && (documentsCollected.dirty || documentsCollected.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"documentsCollected.errors?.required\\\">\\n                    Documents is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.documentsCollected }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleInputEmail1\\\">Resource:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"resource\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" required>\\n\\n                <div *ngIf=\\\"resource.invalid && (resource.dirty || resource.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"resource.errors?.required\\\">\\n                    Resource is required.\\n                  </div>\\n\\n                </div>\\n\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.resource }}</small>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Status</label>\\n                <input type=\\\"text\\\" formControlName=\\\"reportStatus\\\" class=\\\"form-control\\\" placeholder=\\\"Status\\\" required>\\n                <div *ngIf=\\\"reportStatus.invalid && (reportStatus.dirty || reportStatus.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"reportStatus.errors?.required\\\">\\n                    Mobile is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.reportStatus }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Last 4 digits of SSN :</label>\\n                <input type=\\\"text\\\" formControlName=\\\"ssn\\\" class=\\\"form-control\\\" placeholder=\\\"SSN\\\" required>\\n                <div *ngIf=\\\"ssn.invalid && (ssn.dirty || ssn.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"ssn.errors?.required\\\">\\n                    Mobile is required.\\n                  </div>\\n                  <div *ngIf=\\\"ssn.errors?.minlength\\\">\\n                    Mobile must be at least 4 number long.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.ssn }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Best Contact Number</label>\\n                <input type=\\\"text\\\" formControlName=\\\"bestContactNumber\\\" class=\\\"form-control\\\" placeholder=\\\"Best Contact Number\\\"\\n                  required>\\n                <div *ngIf=\\\"bestContactNumber.invalid && (bestContactNumber.dirty || bestContactNumber.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"bestContactNumber.errors?.required\\\">\\n                    Best ContactNumber is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.bestContactNumber }}</small>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Skype ID:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"skypeId\\\" class=\\\"form-control\\\" placeholder=\\\"SkypeId\\\" required>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>linked In Url:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"linkedInUrl\\\" class=\\\"form-control\\\" placeholder=\\\"Linkedin Url\\\" required>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleInputEmail1\\\">Availability:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"availability\\\" class=\\\"form-control\\\" placeholder=\\\"availability\\\" required>\\n\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Priority</label>\\n                <input type=\\\"text\\\" formControlName=\\\"priority\\\" class=\\\"form-control\\\" placeholder=\\\"Priority\\\" required>\\n                <div *ngIf=\\\"priority.invalid && (priority.dirty || priority.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"priority.errors?.required\\\">\\n                    priority is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.priority }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-1\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Visa Type:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"visaType\\\" class=\\\"form-control\\\" placeholder=\\\"Visa Type\\\" required>\\n                <div *ngIf=\\\"visaType.invalid && (visaType.dirty || visaType.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"visaType.errors?.required\\\">\\n                    Visa Type is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.visaType }}</small>\\n\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"update ml-auto mr-auto\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-round\\\" [disabled]=\\\"!registerForm.valid\\\">Submit\\n                Consultant</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n\"","module.exports = \"<h4 class=\\\"remove-margin\\\"> Hot List </h4>\\r\\n<p-table #dt [columns]=\\\"cols\\\" [value]=\\\"products\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedProducts\\\">\\r\\n  <ng-template pTemplate=\\\"caption\\\">\\r\\n      <div class=\\\"p-d-flex\\\">\\r\\n          <button type=\\\"button\\\" pButton pRipple icon=\\\"pi pi-file-o\\\" (click)=\\\"dt.exportCSV()\\\" class=\\\"p-mr-2\\\" pTooltip=\\\"CSV\\\" tooltipPosition=\\\"bottom\\\"></button>\\r\\n       <!-- <button type=\\\"button\\\" pButton pRipple icon=\\\"pi pi-file-excel\\\" (click)=\\\"exportExcel()\\\" class=\\\"p-button-success p-mr-2\\\"  pTooltip=\\\"XLS\\\" tooltipPosition=\\\"bottom\\\"></button> -->\\r\\n\\r\\n          <button type=\\\"button\\\" pButton pRipple icon=\\\"pi pi-filter\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\" class=\\\"p-button-info p-ml-auto\\\" pTooltip=\\\"Selection Only\\\" tooltipPosition=\\\"bottom\\\"></button>\\r\\n      </div>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n      <tr>\\r\\n          <th *ngFor=\\\"let col of columns\\\">\\r\\n              {{col.header}}\\r\\n          </th>\\r\\n      </tr>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n      <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n          <td *ngFor=\\\"let col of columns\\\">\\r\\n              {{rowData[col.field]}}\\r\\n          </td>\\r\\n      </tr>\\r\\n  </ng-template>\\r\\n</p-table>\\r\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserIndexComponent } from './user-index/user-index.component';\n\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserCreateComponent } from './user-create/user-create.component';\nimport { UserRestService } from './user-rest.service';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { TableModule } from 'primeng/table';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MultiSelectModule } from 'primeng/primeng';\nimport { ToastModule } from 'primeng/toast';\nimport { SliderModule } from 'primeng/slider';\nimport { FormsModule } from '@angular/forms';\nimport { ContextMenuModule } from 'primeng/contextmenu';\nimport { DialogModule } from 'primeng/dialog';\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { TabMenuModule } from 'primeng/tabmenu';\nimport { MenuItem } from 'primeng/api';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { FileUploadModule } from 'primeng/fileupload';\n\nimport { CalendarModule } from 'primeng/primeng';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport { DropdownModule } from 'primeng/dropdown';\nimport {InplaceModule} from 'primeng/inplace';\nimport { FieldPipe2 } from '../../field2.pipe';\nimport { ConfirmDialogModule} from 'primeng/confirmdialog';\n@NgModule({\n  declarations: [UserIndexComponent, UserListComponent,UserCreateComponent,FieldPipe2],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    ReactiveFormsModule, TableModule, MultiSelectModule, CalendarModule,\n    SliderModule,\n    DialogModule,\n    MultiSelectModule,\n    ContextMenuModule,\n    ButtonModule,\n    ToastModule,\n    InputTextModule,ConfirmDialogModule,\n\n    ProgressBarModule, TabMenuModule, TooltipModule, FileUploadModule, NgxDropzoneModule, DropdownModule, FormsModule,InplaceModule\n  ],\n  providers: [\n    UserRestService\n  ]\n})\nexport class DocumentsModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2hvdGxpc3QvdXNlci1jcmVhdGUvdXNlci1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserRestService } from '../user-rest.service';\nimport { FormGroup, FormControlName, Validators, FormControl } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nexport class Profile {\n  constructor(public prId:string, public prName:string) {\n  }\n}\n@Component({\n  selector: 'app-user-create',\n  templateUrl: './user-create.component.html',\n  providers: [MessageService],\n  styleUrls: ['./user-create.component.scss']\n})\nexport class UserCreateComponent implements OnInit {\n  allProfiles = [\n    new Profile('dev', 'AEM(Adobe Experience manger)'),\n    new Profile('man', 'Manager'),\n    new Profile('dir', 'Director')\n];\n  serverErrors = [];\n  registerForm: FormGroup\n  constructor(private route: ActivatedRoute,private messageService: MessageService, private userRest: UserRestService, private router: Router) { }\n\n  ngOnInit() {\n    this.registerForm = new FormGroup({\n      'consultatName': new FormControl(null, [Validators.required, Validators.minLength(2)]),\n      'consultantLastName': new FormControl(null, [Validators.required, Validators.minLength(2)]),\n      'consultantEmail': new FormControl(null, [Validators.required, Validators.email]),\n      'consultatMobileNumber': new FormControl(null, [Validators.required, Validators.minLength(10)]),\n      'technology': new FormControl(null, [Validators.required]),\n      'otherTechnologies': new FormControl(null, [Validators.required]),\n      'rate': new FormControl(null, [Validators.required]),\n      'visaType': new FormControl(null, [Validators.required]),\n      'city': new FormControl(null, [Validators.required]),\n      'state': new FormControl(null, [Validators.required]),\n      'willingLocation': new FormControl(null, [Validators.required]),\n      'documentsCollected': new FormControl(null, [Validators.required]),\n      'resource': new FormControl(null, [Validators.required]),\n      'ssn': new FormControl(null, [Validators.required]),\n      'bestContactNumber': new FormControl(null, [Validators.required]),\n      'linkedInUrl': new FormControl(null, [Validators.required]),\n      'skypeId': new FormControl(null, [Validators.required]),\n   //   'comments': new FormControl(null, [Validators.required]),\n   //   'note': new FormControl(null, [Validators.required]),\n      'reportStatus': new FormControl(null, [Validators.required]),\n      'experience': new FormControl(null, [Validators.required]),\n      'availability': new FormControl(null, [Validators.required]),\n      'priority': new FormControl(null, [Validators.required]),\n\n    })\n  }\n\n  get consultatName() { return this.registerForm.get('consultatName'); }\n  get consultantEmail() { return this.registerForm.get('consultantEmail'); }\n  get visaType() { return this.registerForm.get('visaType'); }\n  get consultantLastName() { return this.registerForm.get('consultantLastName'); }\n  get consultatMobileNumber() { return this.registerForm.get('consultatMobileNumber'); }\n  get technology() { return this.registerForm.get('technology'); }\n  get otherTechnologies() { return this.registerForm.get('otherTechnologies'); }\n  get rate() { return this.registerForm.get('rate'); }\n  get ravisaTypete() { return this.registerForm.get('visaType'); }\n  get city() { return this.registerForm.get('city'); }\n  get state() { return this.registerForm.get('state'); }\n  get willingLocation() { return this.registerForm.get('willingLocation'); }\n  get documentsCollected() { return this.registerForm.get('documentsCollected'); }\n  get resource() { return this.registerForm.get('resource'); }\n  get ssn() { return this.registerForm.get('ssn'); }\n  get bestContactNumber() { return this.registerForm.get('bestContactNumber'); }\n  get linkedInUrl() { return this.registerForm.get('linkedInUrl'); }\n  get skypeId() { return this.registerForm.get('skypeId'); }\n  get comments() { return this.registerForm.get('comments'); }\n  get note() { return this.registerForm.get('note'); }\n  get reportStatus() { return this.registerForm.get('reportStatus'); }\n  get experience() { return this.registerForm.get('experience'); }\n  get availability() { return this.registerForm.get('availability'); }\n  get priority() { return this.registerForm.get('priority'); }\n\n  registerUser(){\n     console.log(this.registerForm);\n      this.userRest.storeUser(this.registerForm).subscribe(\n        response => {\n          console.log(response),\n          this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Consultant is added' });\n          this.router.navigate(['consultants/list'])\n        },\n        error =>{\n          this.serverErrors = error.error.errors\n        }\n      );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2hvdGxpc3QvdXNlci1pbmRleC91c2VyLWluZGV4LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SortEvent } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-user-index',\r\n  templateUrl: './user-index.component.html',\r\n  styleUrls: ['./user-index.component.scss']\r\n})\r\nexport class UserIndexComponent implements OnInit {\r\n  userList: Array<object> = [];\r\n  timeSheets: Array<object> = [];\r\n    statuses: any[];\r\n    loading: boolean = true;\r\n  constructor(private route: ActivatedRoute,  private router: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \":host ::ng-deep .p-cell-editing {\\n  padding-top: 0 !important;\\n  padding-bottom: 0 !important;\\n}\\n\\n.disable-td {\\n  pointer-events: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vaG90bGlzdC91c2VyLWxpc3QvQzpcXHhhbXBwXFxodGRvY3NcXHNlcC1iYXJcXGFuZ3VsYXIvc3JjXFxhcHBcXGFkbWluXFxob3RsaXN0XFx1c2VyLWxpc3RcXHVzZXItbGlzdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYWRtaW4vaG90bGlzdC91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7RUFDQSw0QkFBQTtBQ0NGOztBRENBO0VBQ0Usb0JBQUE7QUNFRiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2hvdGxpc3QvdXNlci1saXN0L3VzZXItbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IDo6bmctZGVlcCAucC1jZWxsLWVkaXRpbmcge1xyXG4gIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7XHJcbiAgcGFkZGluZy1ib3R0b206IDAgIWltcG9ydGFudDtcclxufVxyXG4uZGlzYWJsZS10ZHtcclxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxufVxyXG4iLCI6aG9zdCA6Om5nLWRlZXAgLnAtY2VsbC1lZGl0aW5nIHtcbiAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDtcbiAgcGFkZGluZy1ib3R0b206IDAgIWltcG9ydGFudDtcbn1cblxuLmRpc2FibGUtdGQge1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn0iXX0= */\"","import { Component,  TemplateRef, OnInit, ViewChild, Output, EventEmitter,Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserRestService } from '../user-rest.service';\r\nimport { Representative } from '../../../customer';\r\nimport { Table } from 'primeng/table';\r\n\r\nimport { FormBuilder,FormGroup,FormControl } from '@angular/forms';\r\n\r\nimport { MessageService } from 'primeng/api';\r\n\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { Product } from '../../consultants/product';\r\n\r\n\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3',\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF',\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-user-list',\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [MessageService,ConfirmationService],\r\n\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n\r\n  products: Product[];\r\n\r\n  selectedProducts: Product[];\r\n\r\n  constructor( private confirmation: ConfirmationService,private fb: FormBuilder,private messageService: MessageService, private route: ActivatedRoute, private userRest: UserRestService,\r\n    private router: Router) { }\r\n\r\n  cols: any[];\r\n\r\n  exportColumns: any[];\r\n\r\n  ngOnInit() {\r\n    this.userRest.getConsultants().subscribe(\r\n      (response) => { console.log(this.products = response.timesheet);  },\r\n      (error) => { console.log(error) }\r\n    );\r\n\r\n\r\n      this.cols = [\r\n\r\n          { field: 'consultatName', header: 'Name' },\r\n          { field: 'consultatMobileNumber', header: 'MobileNumber' },\r\n          { field: 'consultantEmail', header: 'Email' },\r\n          { field: 'experience', header: 'Experience' },\r\n          { field: 'technology', header: 'Technology' }\r\n      ];\r\n\r\n      this.exportColumns = this.cols.map(col => ({title: col.header, dataKey: col.field}));\r\n  }\r\n\r\n\r\n/*\r\n  exportExcel() {\r\n      import(\"xlsx\").then(xlsx => {\r\n          const worksheet = xlsx.utils.json_to_sheet(this.products);\r\n          const workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n          const excelBuffer: any = xlsx.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n          this.saveAsExcelFile(excelBuffer, \"Consultants\");\r\n      });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n      import(\"file-saver\").then(FileSaver => {\r\n          let EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n          let EXCEL_EXTENSION = '.xlsx';\r\n          const data: Blob = new Blob([buffer], {\r\n              type: EXCEL_TYPE\r\n          });\r\n          FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n      }); */\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRestService {\n  users: Array<{id: number, name: string, email: string}> = [];\n  constructor(private http: HttpClient) { }\n\n  getTimeSheet(): Observable<any> {\n    return this.http.get('http://localhost:8000/api/getAllTimesheets');\n  }\n  getConsultants(): Observable<any> {\n    return this.http.get('http://localhost:8000/api/getAllConsultants/');\n  }\n  storeUser(form): Observable<any> {\n    return this.http.post('http://localhost:8000/api/store-consultant',form.value);\n  }\n statusChangeConsultant(index): Observable<any> {\n  var body = 'index='+index;\n    return this.http.post('http://localhost:8000/api/status-consultant',JSON.stringify({\n      cmd: \"sa\",\n      data: \"sd\"}));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserIndexComponent } from './user-index/user-index.component';\n\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserCreateComponent } from './user-create/user-create.component';\nconst routes: Routes = [\n // { path: 'list', component: UserListComponent, outlet: 'users' },\n  {\n    path: '',\n    component: UserIndexComponent,\n    children: [\n\n      {path: 'list', component: UserListComponent,data: {\n        expectedRole: 'Admin'\n      }},\n      {path: 'inactivelist', component: UserListComponent,data: {\n        expectedRole: 'Admin'\n      }},\n      {path: 'create', component: UserCreateComponent,data: {\n        expectedRole: 'Admin'\n      }}\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DatePipe, CurrencyPipe, DecimalPipe } from \"@angular/common\";\r\n@Pipe({\r\n  name: \"field\"\r\n})\r\nexport class FieldPipe2 implements PipeTransform {\r\n  /**\r\n   *\r\n   */\r\n  constructor() {}\r\n  transform(value: any, ...args: any[]): any {\r\n    const column: any = args[0];\r\n    let result = value;\r\n    // addressModel.City.Name\r\n    column.field.split(\".\").forEach(f => (result = result[f]));\r\n    return result?result:'-';\r\n  }\r\n}\r\n"],"sourceRoot":""}