{"version":3,"sources":["webpack:///./src/app/admin/recruiters/calculator/calculator.component.html","webpack:///./src/app/admin/recruiters/user-create/user-create.component.html","webpack:///./src/app/admin/recruiters/user-edit/user-create.component.html","webpack:///./src/app/admin/recruiters/user-index/user-index.component.html","webpack:///./src/app/admin/recruiters/user-list/user-list.component.html","webpack:///./src/app/admin/recruiters/calculator/calculator.component.ts","webpack:///./src/app/admin/recruiters/calculator/format.ts","webpack:///./src/app/admin/recruiters/calculator/model.ts","webpack:///./src/app/admin/recruiters/calculator/rpn.ts","webpack:///./src/app/admin/recruiters/calculator/yard.ts","webpack:///./src/app/admin/recruiters/user-create/user-create.component.scss","webpack:///./src/app/admin/recruiters/user-create/user-create.component.ts","webpack:///./src/app/admin/recruiters/user-edit/user-create.component.scss","webpack:///./src/app/admin/recruiters/user-edit/user-edit.component.ts","webpack:///./src/app/admin/recruiters/user-index/user-index.component.scss","webpack:///./src/app/admin/recruiters/user-index/user-index.component.ts","webpack:///./src/app/admin/recruiters/user-list/user-list.component.scss","webpack:///./src/app/admin/recruiters/user-list/user-list.component.ts","webpack:///./src/app/admin/recruiters/user-rest.service.ts","webpack:///./src/app/admin/recruiters/user-routing.module.ts","webpack:///./src/app/admin/recruiters/user.module.ts","webpack:///./src/app/field10.pipe.ts"],"names":[],"mappings":"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","file":"admin-recruiters-user-module-es2015.js","sourcesContent":["module.exports = \"<input type=\\\"text\\\" [ngModel]=\\\"formattedTokens\\\" class=\\\"form-control-sm form-control text-right\\\" readonly>\\n\\n<input type=\\\"text\\\" [ngModel]=\\\"input\\\" class=\\\"form-control form-control-lg text-right\\\" readonly>\\n\\n<div class=\\\"row mt-3\\\">\\n\\t<div class=\\\"col-3\\\">\\n\\t\\t<button class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"reset()\\\">AC</button>\\n\\t</div>\\n\\t<div class=\\\"col-3\\\">\\n    <button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"execOperator('(')\\\">(</button>\\n  </div>\\n\\t<div class=\\\"col-3\\\">\\n    <button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"execOperator(')')\\\">)</button>\\n  </div>\\n\\t<div class=\\\"col-3\\\">\\n\\t\\t<button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"execOperator('/')\\\">/</button>\\n\\t</div>\\n</div>\\n<div class=\\\"row mt-3\\\">\\n\\t<div class=\\\"col-3\\\">\\n\\t\\t<button class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"insertChar('1')\\\">1</button>\\n\\t</div>\\n\\t<div class=\\\"col-3\\\">\\n\\t\\t<button class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"insertChar('2')\\\">2</button>\\n\\t</div>\\n\\t<div class=\\\"col-3\\\">\\n\\t\\t<button class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"insertChar('3')\\\">3</button>\\n\\t</div>\\n\\t<div class=\\\"col-3\\\">\\n\\t\\t<button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"execOperator('*')\\\">x</button>\\n\\t</div>\\n</div>\\n<div class=\\\"row mt-3\\\">\\n\\t<div class=\\\"col-3\\\">\\n\\t\\t<button class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"insertChar('4')\\\">4</button>\\n\\t</div>\\n\\t<div class=\\\"col-3\\\">\\n\\t\\t<button class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"insertChar('5')\\\">5</button>\\n\\t</div>\\n\\t<div class=\\\"col-3\\\">\\n\\t\\t<button class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"insertChar('6')\\\">6</button>\\n\\t</div>\\n\\t<div class=\\\"col-3\\\">\\n\\t\\t<button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"execOperator('+')\\\">+</button>\\n\\t</div>\\n</div>\\n<div class=\\\"row mt-3\\\">\\n\\t<div class=\\\"col-3\\\">\\n\\t\\t<button class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"insertChar('7')\\\">7</button>\\n\\t</div>\\n\\t<div class=\\\"col-3\\\">\\n\\t\\t<button class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"insertChar('8')\\\">8</button>\\n\\t</div>\\n\\t<div class=\\\"col-3\\\">\\n\\t\\t<button class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"insertChar('9')\\\">9</button>\\n\\t</div>\\n\\t<div class=\\\"col-3\\\">\\n\\t\\t<button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"execOperator('-')\\\">-</button>\\n\\t</div>\\n</div>\\n<div class=\\\"row mt-3\\\">\\n\\t<div class=\\\"col-6\\\">\\n\\t\\t<button class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"insertChar('0')\\\">0</button>\\n\\t</div>\\n\\t<div class=\\\"col-3\\\">\\n\\t\\t<button class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"insertChar('.')\\\">,</button>\\n\\t</div>\\n\\t<div class=\\\"col-3\\\">\\n\\t\\t<button autofocus class=\\\"btn btn-primary btn-block\\\" (click)=\\\"evaluate()\\\">=</button>\\n\\t</div>\\n</div>\"","module.exports = \"<p-toast position=\\\"bottom-right\\\"></p-toast>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h4 class=\\\"remove-margin\\\">Add Submissions </h4>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-round btn-length\\\" (click)=\\\"showCalculator()\\\">Percentage Calculator</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-round\\\" (click)=\\\"showCalculator1()\\\">Calculator</button>\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <!-- <h5 class=\\\"card-title\\\">Edit Profile</h5> -->\\n\\n\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"registerUser()\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Choose Consultant:</label>\\n                <p-dropdown #dd [options]=\\\"states\\\" [(ngModel)]=\\\"selectedStates\\\" formControlName=\\\"state\\\"\\n                  [style]=\\\"{'width':'100%'}\\\" scrollHeight=\\\"400px\\\" filter=\\\"true\\\" filterBy=\\\"value,label\\\"\\n                  resetFilterOnHide=\\\"true\\\" (onFocus)=\\\"OnFocus()\\\" (onChange)=\\\"onChange($event)\\\"\\n                  (keydown)=\\\"statesUi($event)\\\">\\n                </p-dropdown>\\n                <!-- <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\" placeholder=\\\"State\\\" required> -->\\n                <div *ngIf=\\\"state.invalid && (state.dirty || state.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"state.errors?.required\\\">\\n                    Consultant is required.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.state }}</small>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Rate:</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{crate}}\\\" readonly>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Consultant Email:</label>\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" value=\\\"{{cemail}}\\\" readonly>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Consultant Number:</label>\\n                <input type=\\\"text\\\" value=\\\"{{cmobile}}\\\" class=\\\"form-control\\\" readonly>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Technology:</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{ctechnology}}\\\" readonly>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Choose Vendor:</label>\\n                <p-dropdown #df [options]=\\\"vendors\\\" [(ngModel)]=\\\"selectedVendors\\\" formControlName=\\\"vid\\\"\\n                  [style]=\\\"{'width':'100%'}\\\" scrollHeight=\\\"400px\\\" filter=\\\"true\\\" filterBy=\\\"value,label\\\"\\n                  resetFilterOnHide=\\\"true\\\" (onChange)=\\\"ChangeVendor($event)\\\" (keydown)=\\\"vendorsUi($event)\\\">\\n                </p-dropdown>\\n\\n              </div>\\n              <p-button (click)=\\\"showModalDialog()\\\" icon=\\\"pi pi-external-link\\\" label=\\\"Add Vendor\\\"></p-button>\\n\\n            </div>\\n            <div class=\\\"col-md-3\\\" *ngIf=\\\"df.value\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Choose Vendor Contacts:</label>\\n                <p-dropdown [options]=\\\"contacts\\\" [(ngModel)]=\\\"selectedContacts\\\" formControlName=\\\"vendorDetailId\\\"\\n                  [style]=\\\"{'width':'100%'}\\\" scrollHeight=\\\"400px\\\" filter=\\\"true\\\" filterBy=\\\"value,label\\\"\\n                  resetFilterOnHide=\\\"true\\\" (onChange)=\\\"ChangeContacts($event)\\\" (keydown)=\\\"contactsUi($event)\\\">\\n                </p-dropdown>\\n                <div *ngIf=\\\"vendorDetailId.invalid && (vendorDetailId.dirty || vendorDetailId.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"vendorDetailId.errors?.required\\\">\\n                    Contact is required.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.vendorDetailId }}</small>\\n\\n              </div>\\n              <p-button (click)=\\\"showModalDialog1()\\\" icon=\\\"pi pi-external-link\\\" label=\\\"Add Contact\\\"></p-button>\\n\\n            </div>\\n            <div class=\\\"col-md-2\\\" *ngIf=\\\"vcname\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Vendor Contact Name:</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{vcname}}\\\" readonly>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\" *ngIf=\\\"vmobile\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Vendor Mobile Number:</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{vmobile}}\\\" readonly>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Choose End CLient:</label>\\n                <p-dropdown #dfrf [options]=\\\"clients\\\" [(ngModel)]=\\\"selectedClients\\\" formControlName=\\\"clientId\\\"\\n                  [style]=\\\"{'width':'100%'}\\\" scrollHeight=\\\"400px\\\" filter=\\\"true\\\" filterBy=\\\"value,label\\\"\\n                  resetFilterOnHide=\\\"true\\\" (onChange)=\\\"ChangeClients($event)\\\" (keydown)=\\\"clientsUi($event)\\\">\\n                </p-dropdown>\\n                <div *ngIf=\\\"clientId.invalid && (clientId.dirty || clientId.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"clientId.errors?.required\\\">\\n                    Client is required.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.clientId }}</small>\\n                <p-button (click)=\\\"showModalDialogClient()\\\" icon=\\\"pi pi-external-link\\\" label=\\\"Add Client\\\"></p-button>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>End CLient Location:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"endClientLocation\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"End Client Location\\\">\\n                <div *ngIf=\\\"endClientLocation.invalid && (endClientLocation.dirty || endClientLocation.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"endClientLocation.errors?.required\\\">\\n                    End ClientLocation is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.endClientLocation }}</small>\\n\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Actual Rate:</label>\\n                <input type=\\\"number\\\" formControlName=\\\"actualRate\\\" class=\\\"form-control\\\" placeholder=\\\"Actual Rate\\\">\\n                <div *ngIf=\\\"actualRate.invalid && (actualRate.dirty || actualRate.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"actualRate.errors?.required\\\">\\n                    ActualRate is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Submission Rate:</label>\\n                <input type=\\\"number\\\" formControlName=\\\"submissionRate\\\" class=\\\"form-control\\\" placeholder=\\\"Submit   Rate\\\">\\n                <div *ngIf=\\\"submissionRate.invalid && (submissionRate.dirty || submissionRate.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"submissionRate.errors?.required\\\">\\n                    submissionRate is required.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.submissionRate }}</small>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Vendor Status</label>\\n                <select #statusvalue class=\\\"form-control\\\" formControlName=\\\"vendorStatus\\\">\\n                  <option value=\\\"\\\">--select--</option>\\n                  <option value=\\\"Interview scheduled\\\">Interview scheduled</option>\\n                  <option value=\\\"Submitted to Client\\\">Submitted to Client</option>\\n                  <option value=\\\"Submitted to Vendor\\\">Submitted to Vendor</option>\\n                  <option value=\\\"Disqualified\\\">Disqualified</option>\\n                  <option value=\\\"Client rejected\\\">Client rejected</option>\\n                  <option value=\\\"Vendor Rejected\\\">Vendor Rejected</option>\\n                  <option value=\\\"Vendor screening call\\\">Vendor screening call</option>\\n                  <option value=\\\"Waiting for Evaluation\\\">Waiting for Evaluation</option>\\n                </select>\\n                <div *ngIf=\\\"vendorStatus.invalid && (vendorStatus.dirty || vendorStatus.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"vendorStatus.errors?.required\\\">\\n                    vendorStatus is required.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.vendorStatus }}</small>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\" *ngIf=\\\"(statusvalue.value=='Interview scheduled')\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Interview Schedule Date :</label>\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"scheduleDate\\\" placeholder=\\\"Interview Schedule Date\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\" formControlName=\\\"timezone\\\" *ngIf=\\\"(statusvalue.value=='Interview scheduled')\\\">\\n              <div class=\\\"form-group\\\">\\n                <label> Time Zone :</label>\\n                <select class=\\\"form-control\\\">\\n                  <option value=\\\"EST\\\">EST</option>\\n                  <option value=\\\"PST\\\">PST</option>\\n                  <option value=\\\"CST\\\">CST</option>\\n                  <option value=\\\"MST\\\">MST</option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Comments:</label>\\n                <textarea formControlName=\\\"vendorComments\\\" class=\\\"form-control\\\"></textarea>\\n                <div *ngIf=\\\"vendorComments.invalid && (vendorComments.dirty || vendorComments.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ vendorComments.jobExperience }}</small>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"update ml-auto mr-auto\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-round\\\" [disabled]=\\\"!registerForm.valid\\\">Submit\\n                Consultant</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<p-dialog header=\\\"Add New Vendor Contact\\\" [(visible)]=\\\"displayModal1\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '50vw'}\\\"\\n  [baseZIndex]=\\\"10000\\\" [draggable]=\\\"false\\\" [resizable]=\\\"false\\\">\\n  <form [formGroup]=\\\"registerContact\\\" (ngSubmit)=\\\"registerContactForm()\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Name:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"vendorcontactName\\\" placeholder=\\\"Vendor Contact Name\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label> Email:</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"vendorcontactEmail\\\"\\n            placeholder=\\\"Vendor Contact Email\\\">\\n          <div *ngIf=\\\"vendorcontactEmail.invalid && (vendorcontactEmail.dirty || vendorcontactEmail.touched)\\\"\\n            class=\\\"form-text text-muted\\\">\\n            <div *ngIf=\\\"vendorcontactEmail.errors?.required\\\">\\n              Email is required.\\n            </div>\\n          </div>\\n          <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.vendorcontactEmail }}</small>\\n\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Mobile Number:</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"vendorcontactMobile\\\" placeholder=\\\"Mobile Number\\\">\\n\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n        <div class=\\\"form-group\\\">\\n          <label> EXT:</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"vendorext\\\" placeholder=\\\"EXT\\\">\\n        </div>\\n      </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-round\\\" [disabled]=\\\"!registerContact.valid\\\">Add Vendor\\n      Contact</button>\\n  </form>\\n  <ng-template pTemplate=\\\"footer\\\">\\n    <p-button icon=\\\"pi pi-check\\\" (click)=\\\"displayModal=true\\\" label=\\\"Yes\\\" class=\\\"p-button-text\\\"></p-button>\\n    <p-button icon=\\\"pi pi-times\\\" (click)=\\\"displayModal=false\\\" label=\\\"No\\\"></p-button>\\n  </ng-template>\\n</p-dialog>\\n<p-dialog header=\\\"Add New Vendor\\\" [(visible)]=\\\"displayModal\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '50vw'}\\\"\\n  [baseZIndex]=\\\"10000\\\" [draggable]=\\\"false\\\" [resizable]=\\\"false\\\">\\n\\n  <form [formGroup]=\\\"registerVendor\\\" (ngSubmit)=\\\"registerVendorCompany()\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Vendor Company Name:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"vendorCompanyName\\\" placeholder=\\\"Vendor Company Name\\\">\\n          <div *ngIf=\\\"vendorCompanyName.invalid && (vendorCompanyName.dirty || vendorCompanyName.touched)\\\"\\n            class=\\\"form-text text-muted\\\">\\n            <div *ngIf=\\\"vendorCompanyName.errors?.required\\\">\\n              Company Name is required.\\n            </div>\\n          </div>\\n          <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.vendorCompanyName }}</small>\\n\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Name:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contactName\\\" placeholder=\\\"Vendor Contact Name\\\">\\n\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label> Email:</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"contactEmail\\\" placeholder=\\\"Vendor Contact Email\\\">\\n          <div *ngIf=\\\"contactEmail.invalid && (contactEmail.dirty || contactEmail.touched)\\\"\\n            class=\\\"form-text text-muted\\\">\\n            <div *ngIf=\\\"contactEmail.errors?.required\\\">\\n              Email is required.\\n            </div>\\n          </div>\\n          <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.contactEmail }}</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Mobile Number:</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"contactMobile\\\" placeholder=\\\"Mobile Number\\\">\\n          <div *ngIf=\\\"contactMobile.invalid && (contactEmail.dirty || contactMobile.touched)\\\"\\n            class=\\\"form-text text-muted\\\">\\n            <div *ngIf=\\\"contactMobile.errors?.required\\\">\\n              Mobile Number is required.\\n            </div>\\n          </div>\\n          <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.contactMobile }}</small>\\n\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n        <div class=\\\"form-group\\\">\\n          <label> EXT:</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"ext\\\" placeholder=\\\"EXT\\\">\\n        </div>\\n      </div>\\n\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-round\\\" [disabled]=\\\"!registerVendor.valid\\\">Add Vendor</button>\\n  </form>\\n  <ng-template pTemplate=\\\"footer\\\">\\n    <p-button icon=\\\"pi pi-check\\\" (click)=\\\"displayModal=true\\\" label=\\\"Yes\\\" class=\\\"p-button-text\\\"></p-button>\\n    <p-button icon=\\\"pi pi-times\\\" (click)=\\\"displayModal=false\\\" label=\\\"No\\\"></p-button>\\n  </ng-template>\\n</p-dialog>\\n<p-dialog header=\\\"percentage Off\\\" [(visible)]=\\\"calculatorModal\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '50vw'}\\\"\\n  [baseZIndex]=\\\"10000\\\" [draggable]=\\\"false\\\" [resizable]=\\\"false\\\">\\n\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n\\n            <form id=\\\"userForm\\\" method=\\\"post\\\" name=\\\"percent_off\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">$</span>\\n                    </div>\\n                    <input type=\\\"number\\\" name=\\\"list\\\" value=\\\"52\\\" class=\\\"form-control\\\"\\n                      aria-label=\\\"Amount (to the nearest dollar)\\\" [(ngModel)]=\\\"num1\\\" >\\n                  </div>\\n\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                  <label class=\\\"control-label required\\\" for=\\\"percent_off_p\\\">Percent Off</label>\\n                  <div class=\\\"input-group mb-3\\\">\\n\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">%</span>\\n                    </div>\\n                    <select class=\\\"form-control\\\" name=\\\"disc\\\" [(ngModel)]=\\\"num2\\\">\\n                      <option value=\\\"10\\\">10</option>\\n                      <option value=\\\"15\\\">15</option>\\n                      <option value=\\\"20\\\">20</option>\\n                      <option value=\\\"25\\\">25</option>\\n                      <option value=\\\"30\\\">30</option>\\n                    </select>\\n                  </div>\\n\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <br>\\n                    <button type=\\\"submit\\\" id=\\\"percent_off_save\\\" name=\\\"percent_off[save]\\\"\\n                      class=\\\"button btn-lg btn btn-primary btn-block btn\\\">Calculate Percent Off</button>\\n                  </div>\\n\\n                </div>\\n              </div>\\n            </form>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <div id=\\\"result\\\" style=\\\"height: auto !important;\\\">\\n                    <label class=\\\"control-label required\\\" for=\\\"percent_off_p\\\">Result :</label> {{ ConvertToInt(num1)  -( ConvertToInt(num1)*ConvertToInt(num2)/100)  }}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <ng-template pTemplate=\\\"footer\\\">\\n    <p-button icon=\\\"pi pi-check\\\" (click)=\\\"displayModal=true\\\" label=\\\"Yes\\\" class=\\\"p-button-text\\\"></p-button>\\n    <p-button icon=\\\"pi pi-times\\\" (click)=\\\"displayModal=false\\\" label=\\\"No\\\"></p-button>\\n  </ng-template>\\n</p-dialog>\\n<p-dialog header=\\\"Calculator\\\" [(visible)]=\\\"calculatorModal1\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '50vw'}\\\"\\n  [baseZIndex]=\\\"10000\\\" [draggable]=\\\"false\\\" [resizable]=\\\"false\\\">\\n\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n<ng-calculator></ng-calculator>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <ng-template pTemplate=\\\"footer\\\">\\n    <p-button icon=\\\"pi pi-check\\\" (click)=\\\"displayModal=true\\\" label=\\\"Yes\\\" class=\\\"p-button-text\\\"></p-button>\\n    <p-button icon=\\\"pi pi-times\\\" (click)=\\\"displayModal=false\\\" label=\\\"No\\\"></p-button>\\n  </ng-template>\\n</p-dialog>\\n<p-dialog header=\\\"Add Client\\\" [(visible)]=\\\"displayModalClient\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '50vw'}\\\"\\n  [baseZIndex]=\\\"10000\\\" [draggable]=\\\"false\\\" [resizable]=\\\"false\\\">\\n  <form [formGroup]=\\\"registerClient\\\" (ngSubmit)=\\\"registerClientForm()\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Client Name:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"clientName\\\" placeholder=\\\"Client Name\\\">\\n        </div>\\n      </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-round\\\" [disabled]=\\\"!registerClient.valid\\\">Add Client</button>\\n  </form>\\n  <ng-template pTemplate=\\\"footer\\\">\\n    <p-button icon=\\\"pi pi-check\\\" (click)=\\\"displayModal=true\\\" label=\\\"Yes\\\" class=\\\"p-button-text\\\"></p-button>\\n    <p-button icon=\\\"pi pi-times\\\" (click)=\\\"displayModal=false\\\" label=\\\"No\\\"></p-button>\\n  </ng-template>\\n</p-dialog>\\n\"","module.exports = \"<p-toast position=\\\"bottom-right\\\"></p-toast>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h4 class=\\\"remove-margin\\\">Edit Job Requirement </h4>\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <!-- <h5 class=\\\"card-title\\\">Edit Profile</h5> -->\\n\\n\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"updateUserDetails()\\\" enctype=\\\"multipart/form-data\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n\\n                <label>Job Title:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"jobTitle\\\" class=\\\"form-control\\\" placeholder=\\\"Job Title\\\">\\n                <div *ngIf=\\\"jobTitle.invalid && (jobTitle.dirty || jobTitle.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobTitle.errors?.required\\\">\\n                    Title is required.\\n                  </div>\\n                  <div *ngIf=\\\"jobTitle.errors?.minlength\\\">\\n                    Title must be at least 2 characters long.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobTitle }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Experience:</label>\\n                <input type=\\\"number\\\" formControlName=\\\"jobExperience\\\" class=\\\"form-control\\\" placeholder=\\\"Exp\\\"\\n                  required>\\n                <div *ngIf=\\\"jobExperience.invalid && (jobExperience.dirty || jobExperience.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobExperience.errors?.required\\\">\\n                    Experience is required.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobExperience }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <label>Technology</label>\\n              <p-dropdown #dd [options]=\\\"cars\\\" [(ngModel)]=\\\"selectedCar\\\" formControlName=\\\"jobTechnology\\\"\\n                [style]=\\\"{'width':'100%'}\\\" scrollHeight=\\\"400px\\\" filter=\\\"true\\\" filterBy=\\\"value,label\\\"\\n                resetFilterOnHide=\\\"true\\\" (onFocus)=\\\"OnFocus()\\\" (keydown)=\\\"test($event)\\\">\\n              </p-dropdown>\\n              <div *ngIf=\\\"jobTechnology.invalid && (jobTechnology.dirty || jobTechnology.touched)\\\" class=\\\"form-text text-muted\\\">\\n                <div *ngIf=\\\"jobTechnology.errors?.required\\\">\\n                  Technology is required.\\n                </div>\\n\\n              </div>\\n              <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobTechnology }}</small>\\n             </div>\\n             <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Visa Type:</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"jobVisaType\\\">\\n                  <option value=\\\"null\\\" disabled>Choose visaType</option>\\n                  <option value=\\\"H4 EAD\\\">H4 EAD\\n                  </option>\\n                  <option value=\\\"H1B-Transfer\\\">H1B-Transfer\\n                  </option>\\n                  <option value=\\\"CPT\\\">CPT\\n                  </option>\\n                  <option value=\\\"OPT\\\">OPT\\n                  </option>\\n                  <option value=\\\"H1-B\\\">H1-B\\n                  </option>\\n                  <option value=\\\"GC-EAD\\\">GC-EAD\\n                  </option>\\n                  <option value=\\\"Green Card\\\">Green Card\\n                  </option>\\n                  <option value=\\\"US Citizen\\\">US Citizen\\n                  </option>\\n\\n                </select>\\n                <div *ngIf=\\\"jobVisaType.invalid && (jobVisaType.dirty || jobVisaType.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobVisaType.errors?.required\\\">\\n                    Visa Type is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobVisaType }}</small>\\n              </div>\\n            </div>\\n\\n          </div>\\n          <div class=\\\"row\\\">\\n\\n\\n\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Location:</label>\\n                <p-dropdown #dd [options]=\\\"states\\\" [(ngModel)]=\\\"selectedStates\\\" formControlName=\\\"jobLocation\\\"\\n                  [style]=\\\"{'width':'100%'}\\\" scrollHeight=\\\"400px\\\" filter=\\\"true\\\" filterBy=\\\"value,label\\\"\\n                  resetFilterOnHide=\\\"true\\\" (onFocus)=\\\"OnFocus()\\\" (keydown)=\\\"statesUi($event)\\\">\\n                </p-dropdown>\\n                <!-- <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\" placeholder=\\\"State\\\" required> -->\\n                <div *ngIf=\\\"jobLocation.invalid && (jobLocation.dirty || jobLocation.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobLocation.errors?.required\\\">\\n                    Location is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobLocation }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Status</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"jobStatus\\\">\\n                  <option value=\\\"null\\\">--select--</option>\\n                  <option value=\\\"A\\\">Active</option>\\n                  <option value=\\\"I\\\">InActive</option>\\n                </select>\\n                <div *ngIf=\\\"jobStatus.invalid && (jobStatus.dirty || jobStatus.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobStatus.errors?.required\\\">\\n                    Status is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobStatus }}</small>\\n\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Job Description</label>\\n                <textarea formControlName=\\\"jobDescription\\\" class=\\\"form-control\\\"></textarea>\\n              </div>\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"update ml-auto mr-auto\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-round\\\" [disabled]=\\\"!registerForm.valid\\\">Update\\n                Job</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n\"","module.exports = \"<p-toast position=\\\"bottom-right\\\"></p-toast>\\r\\n<h4 class=\\\"remove-margin\\\"> Consultant Submissions  <a routerLink=\\\"/recruiters/create\\\" class=\\\"btn btn-primary\\\">\\r\\n  Add Submission\\r\\n </a></h4>\\r\\n<!--\\r\\n<p-table #dt [responsive]=\\\"true\\\" [value]=\\\"timeSheets\\\" [frozenColumns]=\\\"frozenCols\\\" [scrollable]=\\\"true\\\"\\r\\n  scrollHeight=\\\"200px\\\" appendTo=\\\"body\\\" filterMatchMode=\\\"equals\\\" columnResizeMode=\\\"expand\\\" dataKey=\\\"id\\\" [rows]=\\\"10\\\"\\r\\n  [showCurrentPageReport]=\\\"true\\\" tableStyleClass=\\\"fixtable\\\" [rowsPerPageOptions]=\\\"[5,10,20,30]\\\" [loading]=\\\"loading\\\"\\r\\n  styleClass=\\\"p-datatable-customers\\\" [paginator]=\\\"true\\\" [filterDelay]=\\\"0\\\"\\r\\n  [globalFilterFields]=\\\"['created_at','consultatName','consultantEmail','consultatMobileNumber','experience','rate','reportStatus']\\\">\\r\\n\\r\\n  <ng-template pTemplate=\\\"header\\\">\\r\\n    <tr>\\r\\n\\r\\n      <th>Consultant Name</th>\\r\\n      <th>Created At</th>\\r\\n      <th>Email</th>\\r\\n      <th>Phone number</th>\\r\\n\\r\\n      <th>Exp </th>\\r\\n      <th>Rate</th>\\r\\n      <th>Status</th>\\r\\n      <th>Action</th>\\r\\n\\r\\n    </tr>\\r\\n    <tr>\\r\\n\\r\\n\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'consultatName', 'startsWith')\\\"\\r\\n          placeholder=\\\"Name\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <p-calendar (onSelect)=\\\"onDateSelect($event)\\\" (onClearClick)=\\\"dt.filter('', 'created_at', 'equals')\\\"\\r\\n          [showButtonBar]=\\\"true\\\" [style]=\\\"{'width':'300px'}\\\" styleClass=\\\"p-column-filter\\\" placeholder=\\\"Date\\\"\\r\\n          [readonlyInput]=\\\"true\\\" dateFormat=\\\"yy-mm-dd\\\"></p-calendar>\\r\\n      </th>\\r\\n      <th> <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'consultantEmail', 'startsWith')\\\"\\r\\n          placeholder=\\\"Email\\\" class=\\\"p-column-filter\\\"></th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'consultatMobileNumber', 'startsWith')\\\"\\r\\n          placeholder=\\\"Phone\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'experience', 'startsWith')\\\"\\r\\n          placeholder=\\\"exp\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'rate', 'startsWith')\\\" placeholder=\\\"Rate\\\"\\r\\n          class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'reportStatus', 'startsWith')\\\"\\r\\n          placeholder=\\\"Status\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"body\\\" let-customer>\\r\\n    <tr>\\r\\n\\r\\n\\r\\n      <td>\\r\\n        {{customer.consultatName}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{customer.created_at | date}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{customer.consultantEmail}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{customer.consultatMobileNumber}}\\r\\n      </td>\\r\\n\\r\\n      <td>\\r\\n        {{customer.experience}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{customer.rate}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{customer.reportStatus}}\\r\\n      </td>\\r\\n      <td>\\r\\n        -\\r\\n      </td>\\r\\n\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n    <tr>\\r\\n      <td colspan=\\\"6\\\">No Consultants found.</td>\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n</p-table> -->\\r\\n<!--\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n          <h4 class=\\\"remove-margin\\\"> Timesheet List </h4>\\r\\n    <div class=\\\"card\\\">\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <p-table #dt [value]=\\\"timeSheets\\\" dataKey=\\\"id\\\"\\r\\n        [rows]=\\\"10\\\" [showCurrentPageReport]=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20]\\\" [loading]=\\\"loading\\\" styleClass=\\\"p-datatable-customers\\\"\\r\\n        [paginator]=\\\"false\\\"\\r\\n        [filterDelay]=\\\"0\\\" [globalFilterFields]=\\\"['fromDate','duration','assignment','serviceCode']\\\">\\r\\n\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n            <tr>\\r\\n                <th>Employee</th>\\r\\n                <th>Date</th>\\r\\n                <th>Duration</th>\\r\\n                <th>Assignment</th>\\r\\n                <th>Service Code</th>\\r\\n            </tr>\\r\\n\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-customer>\\r\\n            <tr>\\r\\n              <td>\\r\\n                {{customer.user_details.name}}\\r\\n              </td>\\r\\n                <td>\\r\\n                    {{customer.fromDate | date}}\\r\\n                </td>\\r\\n                <td>\\r\\n                   {{customer.duration}}\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{customer.assignment}}\\r\\n               </td>\\r\\n               <td>\\r\\n                {{customer.serviceCode}}\\r\\n             </td>\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n            <tr>\\r\\n                <td colspan=\\\"6\\\">No Users found.</td>\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n    </p-table>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<p-inplace>\\r\\n  <ng-template pTemplate=\\\"display\\\">\\r\\n    Click to Edit\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"content\\\">\\r\\n    <input type=\\\"text\\\" value=\\\"PrimeNG\\\" pInputText>\\r\\n  </ng-template>\\r\\n</p-inplace>\\r\\n\\r\\n<p-table #dt [value]=\\\"timeSheets\\\" dataKey=\\\"id\\\"\\r\\n        [rows]=\\\"10\\\" [showCurrentPageReport]=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,25,50]\\\" [loading]=\\\"loading\\\" styleClass=\\\"p-datatable-customers\\\"\\r\\n        [paginator]=\\\"true\\\" currentPageReportTemplate=\\\"Showing {first} to {last} of {totalRecords} entries\\\"\\r\\n        [filterDelay]=\\\"0\\\" [globalFilterFields]=\\\"['consultatName']\\\">\\r\\n        <ng-template pTemplate=\\\"caption\\\">\\r\\n            <div class=\\\"table-header\\\">\\r\\n                List of Consultants\\r\\n                <span class=\\\"p-input-icon-left\\\">\\r\\n                    <i class=\\\"pi pi-search\\\"></i>\\r\\n                    <input pInputText type=\\\"text\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Search\\\" />\\r\\n                </span>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n            <tr>\\r\\n                <th>Name</th>\\r\\n\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <th>\\r\\n                    <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'consultatName', 'startsWith')\\\" placeholder=\\\"Search by Name\\\" class=\\\"p-column-filter\\\">\\r\\n                </th>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-customer>\\r\\n            <tr>\\r\\n                <td>\\r\\n                    {{customer.consultatName}}\\r\\n                </td>\\r\\n\\r\\n\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n            <tr>\\r\\n                <td colspan=\\\"6\\\">No Consultants found.</td>\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n    </p-table>\\r\\n {{rowData|field:col}}\\r\\n  -->\\r\\n\\r\\n<p-table #dt [columns]=\\\"scrollableCols\\\" [autoLayout]=\\\"true\\\"  [value]=\\\"timeSheets\\\" [scrollable]=\\\"true\\\"\\r\\n  autoLayout=\\\"true\\\"  dataKey=\\\"reportId\\\"  [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [showCurrentPageReport]=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,25,50]\\\"  [loading]=\\\"loading\\\" >\\r\\n\\t<ng-template pTemplate=\\\"emptymessage\\\">\\r\\n\\t\\t<tr>\\r\\n\\t\\t\\t<td colspan=\\\"7\\\">No Submissions found.</td>\\r\\n\\t\\t</tr>\\r\\n\\t</ng-template>\\r\\n  <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n    <colgroup>\\r\\n      <col style=\\\"width:70px\\\">\\r\\n      <col *ngFor=\\\"let col of columns\\\" style=\\\"width:200px\\\">\\r\\n      <col style=\\\"width:200px\\\">\\r\\n      <col style=\\\"width:200px\\\">\\r\\n    </colgroup>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n    <tr>\\r\\n      <th>Action</th>\\r\\n      <th *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{'width': col.width}\\\">\\r\\n        {{col.header}}\\r\\n      </th>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th></th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'user_details.name', 'startsWith')\\\"\\r\\n          placeholder=\\\"Created By\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'consultant.consultatName', 'startsWith')\\\"\\r\\n          placeholder=\\\"Name\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'vendorStatus', 'startsWith')\\\"\\r\\n          placeholder=\\\"Status\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'consultant.technology', 'startsWith')\\\"\\r\\n          placeholder=\\\"Technology\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'vendorlist.vendorCompanyName', 'startsWith')\\\"\\r\\n          placeholder=\\\"Company Name\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'vendor_detail.contactName', 'startsWith')\\\"\\r\\n          placeholder=\\\"Name\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'vendor_detail.contactEmail', 'startsWith')\\\"\\r\\n          placeholder=\\\"Vendor Email\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'vendor_detail.contactMobile', 'startsWith')\\\"\\r\\n          placeholder=\\\"Vendor Mobile\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'clients.clientName', 'startsWith')\\\"\\r\\n          placeholder=\\\"End Clinet\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'actualRate', 'startsWith')\\\"\\r\\n          placeholder=\\\"actualRate\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'submissionRate', 'startsWith')\\\"\\r\\n          placeholder=\\\"submissionRate\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n\\r\\n      </tr>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-editing=\\\"editing\\\" let-ri=\\\"rowIndex\\\">\\r\\n\\r\\n    <tr [pEditableRow]=\\\"rowData\\\" [ngStyle]=\\\"{'background-color':getColor(rowData.reportStatus,rowData.adminStatus)}\\\"  >\\r\\n      <td style=\\\"text-align:center\\\">\\r\\n\\r\\n       <a (click)=\\\"showModalDialog(rowData)\\\"  class=\\\"btn btn-warning btn-sm\\\">Edit</a>\\r\\n       <a (click)=\\\"showModalDialog1(rowData.vendorComments)\\\" tabindex=\\\"0\\\" data-toggle=\\\"popover\\\" data-trigger=\\\"focus\\\" title=\\\"\\\"\\r\\n       data-original-title=\\\"Note\\\"><img\\r\\n         src=\\\"./assets/img/sticky.png\\\"></a>\\r\\n        </td>\\r\\n\\r\\n      <td *ngFor=\\\"let col of columns\\\" >\\r\\n\\r\\n              {{rowData|field:col}}\\r\\n\\r\\n\\r\\n      </td>\\r\\n\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n\\r\\n</p-table>\\r\\n\\r\\n<p-confirmDialog key=\\\"confirm-drop-database\\\" header=\\\"Confirmation\\\" acceptLabel=\\\"Yes\\\" rejectLabel=\\\"No\\\" [(visible)]=\\\"confirmDropDatabaseDialogVisible\\\"></p-confirmDialog>\\r\\n\\r\\n  <p-dialog header=\\\"{{heading1}}\\\" [(visible)]=\\\"displayModal\\\" [modal]=\\\"true\\\"\\r\\n  [style]=\\\"{width: '50vw'}\\\" [baseZIndex]=\\\"10000\\\"  [draggable]=\\\"false\\\" [resizable]=\\\"false\\\">\\r\\n<h5> </h5>\\r\\n<form [formGroup]=\\\"registerVendor\\\" (ngSubmit)=\\\"registerUser(submissionId)\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <select class=\\\"form-control\\\"  #seleectevalue formControlName=\\\"vendorStatus\\\">\\r\\n                 <option value=\\\"\\\">--select--</option>\\r\\n                                        <option value=\\\"Placed\\\">Placed</option>\\r\\n                                        <option value=\\\"Interview scheduled\\\">Interview scheduled</option>\\r\\n                                        <option value=\\\"Submitted to Client\\\">Submitted to Client</option>\\r\\n                                        <option value=\\\"Submitted to Vendor\\\">Submitted to Vendor</option>\\r\\n                                        <option value=\\\"Disqualified\\\">Disqualified</option>\\r\\n                                        <option value=\\\"Client rejected\\\">Client rejected</option>\\r\\n                                        <option value=\\\"Vendor Rejected\\\">Vendor Rejected</option>\\r\\n                                        <option value=\\\"Vendor screening call\\\">Vendor screening call</option>\\r\\n                                        <option value=\\\"Waiting for Evaluation\\\">Waiting for Evaluation</option>\\r\\n                                        </select>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-8\\\" *ngIf=\\\"seleectevalue.value == 'Interview scheduled'\\\">\\r\\n        <div class=\\\"form-group schedulepopdiv\\\" >\\r\\n            <label for=\\\"schedulepop\\\">Schedule Date:</label>\\r\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"scheduleDate\\\"  value=\\\"2020-11-21 10:43:17\\\"><br>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-4\\\" *ngIf=\\\"seleectevalue.value == 'Interview scheduled'\\\">\\r\\n        <div class=\\\"form-group schedulepopdiv\\\">\\r\\n            <label for=\\\"timezone\\\">Time Zone:</label>\\r\\n            <select class=\\\"form-control\\\" formControlName=\\\"timezone\\\">\\r\\n              <option value=\\\"\\\">Choose Time Zone</option>\\r\\n                <option value=\\\"EST\\\" >EST</option>\\r\\n                <option value=\\\"PST\\\">PST</option>\\r\\n                <option value=\\\"CST\\\">CST</option>\\r\\n                <option value=\\\"MST\\\">MST</option>\\r\\n            </select>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"notepop\\\">Comment:</label>\\r\\n            <textarea class=\\\"form-control\\\"  formControlName=\\\"vendorComments\\\"></textarea>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n    </div>\\r\\n\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-round\\\">Update</button>\\r\\n</form>\\r\\n\\r\\n\\r\\n           <ng-template pTemplate=\\\"footer\\\">\\r\\n               <p-button icon=\\\"pi pi-check\\\" (click)=\\\"displayModal=true\\\" label=\\\"Yes\\\" class=\\\"p-button-text\\\"></p-button>\\r\\n               <p-button icon=\\\"pi pi-times\\\" (click)=\\\"displayModal=false\\\" label=\\\"No\\\"></p-button>\\r\\n           </ng-template>\\r\\n   </p-dialog>\\r\\n\\r\\n   <p-dialog header=\\\"Note\\\" [(visible)]=\\\"displayModal1\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '50vw'}\\\" [baseZIndex]=\\\"10000\\\"\\r\\n   [draggable]=\\\"false\\\" [resizable]=\\\"false\\\">\\r\\n\\r\\n   <p>{{comment}}</p>\\r\\n   <ng-template pTemplate=\\\"footer\\\">\\r\\n     <p-button icon=\\\"pi pi-check\\\" (click)=\\\"displayModal1=true\\\" label=\\\"Yes\\\" class=\\\"p-button-text\\\"></p-button>\\r\\n     <p-button icon=\\\"pi pi-times\\\" (click)=\\\"displayModal1=false\\\" label=\\\"No\\\"></p-button>\\r\\n   </ng-template>\\r\\n </p-dialog>\\r\\n\"","import { Component, OnInit, HostListener } from '@angular/core';\n\n// import * as math from 'mathjs';\n\nimport Big from 'big.js';\n\nimport { rpn } from './rpn';\nimport { yard } from './yard';\nimport { format } from './format';\nimport { Operator, isOperator } from './model';\n\n@Component({\n  selector: 'ng-calculator',\n  templateUrl: './calculator.component.html'\n})\nexport class CalculatorComponent {\n  tokens: string[] = [];\n  showResult = false;\n\n  insertChar(character: string): void {\n    const lastToken = this.lastToken;\n    const doubleMin = lastToken === '-' && isOperator(this.beforeLastToken);\n\n    if (lastToken === undefined || (isOperator(lastToken) && !doubleMin)) {\n      if (character === '.') {\n        character = '0' + character;\n      }\n\n      this.tokens.push(character);\n    } else if (this.showResult) {\n      this.tokens = [character];\n    } else {\n      this.tokens[this.tokens.length - 1] = lastToken + character;\n    }\n\n    this.showResult = false;\n  }\n\n  get lastToken(): string {\n    return this.tokens[this.tokens.length - 1];\n  }\n\n  get beforeLastToken(): string {\n    return this.tokens[this.tokens.length - 2];\n  }\n\n  get input(): string {\n    if (this.showResult) {\n      try {\n        //return format(math.eval(this.tokens.join(' ')).toString());\n        return format(rpn(yard(this.tokens)).toString());\n      } catch (e) {\n        return 'Je hebt iets verkeerd gedaan.'\n      }\n    }\n\n    return format(this.tokens\n      .slice()\n      .reverse()\n      .find(t => !isOperator(t)) || '0');\n  }\n\n  get formattedTokens(): string {\n    return this.tokens.map(format).join(' ').replace(/\\*/g, 'x') || '0';\n  }\n\n  reset(): void {\n    this.tokens = [];\n    this.showResult = false;\n  }\n\n  evaluate(): void {\n    // repeat last action\n    if (this.showResult && this.tokens.length >= 2) {\n      this.tokens = this.tokens.concat(this.tokens.slice(-2));\n    }\n\n    this.showResult = true;\n  }\n\n  execOperator(operator: Operator): void {\n    // ANS support\n    if (this.showResult) {\n      this.tokens = [rpn(yard(this.tokens)).toString()];\n    }\n\n    if (!this.lastToken && operator !== '(') {\n      this.tokens.push('0');\n    }\n\n    this.tokens.push(operator);\n    this.showResult = false;\n  }\n\n  // KEYBOARD SUPPORT\n  @HostListener('window:keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    const key = event.key.toLowerCase();\n\n   // event.preventDefault();\n\n    if (key === 'c' || key === 'backspace') {\n      this.reset();\n    } else if (key === ',' || key === '.') {\n      this.insertChar('.');\n    } else if (!isNaN(parseInt(key))) {\n      this.insertChar(key);\n    } else if (key === 'enter') {\n      this.evaluate();\n    } else if (isOperator(key)) {\n      this.execOperator(key);\n    }\n  }\n\n}\n","import { isOperator } from './model';\n\nexport function format(input: string): string {\n  if (isOperator(input)) {\n    return input;\n  } else {\n    return input.replace('.', ',');\n  }\n}","import Big from 'big.js';\n\nexport type Operator = '-' | '+' | '*' | '/' | '(' | ')';\n\nexport function isOperator(token: string): token is Operator {\n  return token === '-' || token === '+' || token === '*' || token === '/' || token === '(' || token === ')';\n}","import { isOperator } from './model';\nimport Big from 'big.js';\n\nexport function rpn(tokens: string[]): Big {\n  const stack: Big[] = [];\n\n  tokens.forEach(token => {\n    if (!isOperator(token)) {\n      stack.push(Big(token));\n    } else if (stack.length < 2) {\n      throw new Error('Syntax error.');\n    } else {\n      const val2 = stack.pop();\n      const val1 = stack.pop();\n\n      switch (token) {\n        case '+':\n          stack.push(val1.add(val2));\n          break;\n        case '*':\n          stack.push(val1.mul(val2));\n          break;\n        case '/':\n          if (val2.eq(0)) {\n            throw new Error('Division by zero.');\n          }\n\n          stack.push(val1.div(val2));\n          break;\n        case '-':\n          stack.push(val1.minus(val2));\n          break;\n      }\n    }\n  });\n\n  return stack.pop().round(10);\n}","import { isOperator } from './model';\n\nexport function yard(infix: string[]): string[] {\n  const ops = { '+': 1, '-': 1, '*': 2, '/': 2 };\n  const peek = arr => arr[arr.length - 1];\n  const stack = [];\n\n  return infix.reduce((output, token) => {\n    if (!isOperator(token)) {\n      output.push(token);\n    } else {\n      if (token in ops) {\n        while (peek(stack) && ops[token] <= ops[peek(stack)]) {\n          output.push(stack.pop());\n        }\n\n        stack.push(token);\n      }\n\n      if (token === '(') {\n        stack.push(token);\n      }\n\n      if (token === ')') {\n        while (stack.length > 0 && peek(stack) !== '(') {\n          output.push(stack.pop());\n        }\n\n        stack.pop();\n      }\n    }\n\n    return output;\n  }, []).concat(stack.reverse());\n}\n","module.exports = \".btn-length {\\n  margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcmVjcnVpdGVycy91c2VyLWNyZWF0ZS9DOlxceGFtcHBcXGh0ZG9jc1xcc2VwLWJhclxcYW5nL3NyY1xcYXBwXFxhZG1pblxccmVjcnVpdGVyc1xcdXNlci1jcmVhdGVcXHVzZXItY3JlYXRlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hZG1pbi9yZWNydWl0ZXJzL3VzZXItY3JlYXRlL3VzZXItY3JlYXRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUUsaUJBQUE7QUNBRiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlY3J1aXRlcnMvdXNlci1jcmVhdGUvdXNlci1jcmVhdGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLWxlbmd0aFxyXG57XHJcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbn1cclxuIiwiLmJ0bi1sZW5ndGgge1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbn0iXX0= */\"","import { Component, OnInit, ViewChild, ɵConsole } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserRestService } from '../user-rest.service';\nimport { SelectItem } from 'primeng/api';\nimport { SelectItemGroup } from 'primeng/api';\nimport { Calendar } from 'primeng/primeng';\nimport { FormGroup, FormControlName, Validators, FormControl } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\n\nexport class Profile {\n  constructor(public prId: string, public prName: string) {\n  }\n}\n@Component({\n  selector: 'app-user-create',\n  templateUrl: './user-create.component.html',\n  providers: [MessageService],\n  styleUrls: ['./user-create.component.scss']\n})\nexport class UserCreateComponent implements OnInit {\n  @ViewChild('dd', { static: true }) dropdown: any;\n  num1: number = 52;\n  num2: number = 20;\n  countries: any[];\n  selectedCountry: string;\n  cars: SelectItem[];\n  states: SelectItem[];\n  vendors: SelectItem[];\n  contacts: SelectItem[];\n  clients: SelectItem[];\n  selectedCar: SelectItem;\n  selectedStates: SelectItem;\n  selectedVendors: SelectItem;\n  selectedContacts: SelectItem;\n  selectedClients: SelectItem;\n  str: string;\n  counter = 0;\n  totalNumberOfCars: number;\n  formData: FormGroup;\n  crate: any;\n  cemail: any;\n  cmobile: any;\n  ctechnology: any;\n  vmobile: any;\n  vcname: any;\n  serverErrors = [];\n  imageFile: { link: string, file: any, name: string };\n  registerForm: FormGroup;\n  registerVendor: FormGroup;\n  registerContact: FormGroup;\n  registerClient:FormGroup;\n  registerForm1: FormGroup;\n  displayModal: boolean;\n  displayModalClient:boolean;\n  displayModal1: boolean;\n  calculatorModal: boolean;\n  calculatorModal1: boolean;\n  constructor(private route: ActivatedRoute, private messageService: MessageService, private userRest: UserRestService, private router: Router) { }\n\n  ngOnInit() {\n\n    this.userRest.getConsultantsList().subscribe(\n      (response) => {\n        console.log(this.states = response.submissions);\n        console.log(this.vendors = response.vendorslist);\n        console.log(this.clients = response.clients);\n      },\n      (error) => { console.log(error) }\n    );\n    this.cars = [\n      { label: \"Choose Technology\", value: \"\" },\n      { label: \"AEM(Adobe Experience manger)\", value: \"AEM(Adobe Experience manger)\" },\n      { label: 'Android Developer', value: 'Android Developer' },\n      { label: 'Business Analyst', value: 'Business Analyst' },\n      { label: 'Business Intelligence', value: 'Business Intelligence' },\n      { label: 'Data Analyst', value: 'Data Analyst' },\n      { label: 'Database Administrator', value: 'Database Administrator' },\n      { label: 'Devops Engineer', value: 'Devops Engineer' },\n      { label: 'Dot net Developer', value: 'Dot net Developer' },\n      { label: 'ETL Developer', value: \"ETL Developer\" },\n      { label: 'Hadoop', value: \"Hadoop\" },\n      { label: 'Hadoop Developer/Hadoop Admin', value: \"Hadoop Developer/Hadoop Admin\" },\n      { label: 'IOS Developer', value: \"IOS Developer\" },\n      { label: 'Java Developer', value: \"Java Developer\" },\n      { label: 'Linux Admin', value: \"Linux Admin\" },\n      { label: 'Mainframe Developer', value: \"Mainframe Developer\" },\n      { label: 'Network Engineer', value: \"Network Engineer\" },\n      { label: 'Oracle fusion developer', value: \"Oracle fusion developer\" },\n      { label: 'PEGA', value: \"PEGA\" },\n      { label: 'QA Tester/QA Analyst', value: \"QA Tester/QA Analyst\" },\n      { label: 'SAP Hana', value: \"SAP Hana\" },\n      { label: 'Salesforce', value: \"Salesforce\" },\n      { label: 'Salesforce Admin', value: \"Salesforce Admin\" },\n      { label: 'Salesforce Developer', value: \"Salesforce Developer\" },\n      { label: 'Service now developer', value: \"Service now developer\" },\n      { label: 'Tableau Developer', value: \"Tableau Developer\" },\n      { label: 'UI Developer / Frontend Developer', value: \"UI Developer / Frontend Developer\" },\n      { label: 'VOIP Engineer', value: \"VOIP Engineer\" },\n      { label: 'others', value: \"others\" },\n    ];\n    this.totalNumberOfCars = this.cars.length;\n    this.str = '';\n\n    this.registerForm = new FormGroup({\n      'actualRate': new FormControl('', [Validators.required]),\n      'state': new FormControl('', [Validators.required]),\n      'vendorStatus': new FormControl('', [Validators.required]),\n      'vendorComments': new FormControl(''),\n      'submissionRate': new FormControl('', [Validators.required]),\n      'vid': new FormControl('', [Validators.required]),\n      'vendorDetailId': new FormControl('', [Validators.required]),\n      'endClientLocation': new FormControl('', [Validators.required]),\n      'clientId': new FormControl('', [Validators.required]),\n      'scheduleDate': new FormControl(''),\n      'timezone': new FormControl(''),\n    })\n\n    this.registerContact = new FormGroup({\n      'vendorcontactName': new FormControl('', [Validators.required]),\n      'vendorcontactMobile': new FormControl('', [Validators.required]),\n      'vendorcontactEmail': new FormControl('', [Validators.required]),\n      'vendorext': new FormControl('', [Validators.required]),\n    });\n    this.registerVendor = new FormGroup({\n      'vendorCompanyName': new FormControl('', [Validators.required]),\n      'contactName': new FormControl('', [Validators.required]),\n      'contactMobile': new FormControl('', [Validators.required]),\n      'contactEmail': new FormControl('', [Validators.required]),\n      'ext': new FormControl('', [Validators.required]),\n\n    });\n    this.registerClient = new FormGroup({\n      'clientName': new FormControl('', [Validators.required]),\n    });\n  }\n  ConvertToInt(val) {\n    return parseFloat(val);\n  }\n  showModalDialogClient()\n  {\n    this.displayModalClient = true;\n  }\n  showModalDialog() {\n    this.displayModal = true;\n  }\n  showCalculator() {\n    this.calculatorModal = true;\n  }\n  showCalculator1() {\n    this.calculatorModal1 = true;\n  }\n  showModalDialog1() {\n    this.registerContact.addControl('cvid', new FormControl(this.registerForm.value.vid, Validators.required));\n    this.displayModal1 = true;\n  }\n\n  OnFocus() {\n    if (this.cars.length > this.totalNumberOfCars) {\n      this.cars.shift();\n\n    }\n  }\n\n  OnBlur() {\n    console.log(\"OnBlur\");\n  }\n\n  test(event) {\n    const charCode = event.keyCode;\n    if (event.key === 'Enter') {\n      this.selectedCar = this.cars.find(car => {\n        return car.label.toLowerCase().includes(this.str.toLowerCase());\n      });\n      this.cars.unshift(this.selectedCar)\n      this.str = '';\n    } else if (event.key === 'Backspace') {\n      this.str = this.str.replace(/.$/, \"\");\n    } else if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode === 8) {\n      this.str += event.key;\n    }\n\n  }\n\n  onChange(event) {\n    this.crate = '';\n    this.cemail = '';\n    this.cmobile = '';\n    this.ctechnology = '';\n\n    console.log(event.value);\n    this.userRest.editConsultant(event.value).subscribe(\n      (response) => {\n        this.crate = response.user.rate;\n        this.cemail = response.user.consultantEmail;\n        this.cmobile = response.user.consultatMobileNumber;\n        this.ctechnology = response.user.technology;\n\n      },\n      (error) => console.log(error)\n    );\n  }\n  ChangeClients(event) {\n\n    //   this.clients=[];\n    /* this.userRest.editVenodr(event.value).subscribe(\n       (response) => {\n         this.contacts =  response.contacts;\n       },\n       (error) => console.log(error)\n     ); */\n\n  }\n  ChangeVendor(event) {\n    this.vmobile = '';\n    this.vcname = '';\n    this.contacts = [];\n    this.userRest.editVenodr(event.value).subscribe(\n      (response) => {\n        this.contacts = response.contacts\n\n      },\n      (error) => console.log(error)\n    );\n\n  }\n  ChangeContactsInner(value) {\n    this.vmobile = '';\n    this.vcname = '';\n    const formData = new FormData();\n    formData.append(\"index\", value);\n    this.userRest.getContactDetails(formData).subscribe(\n      (response) => {\n        console.log(response);\n        this.vmobile = response.contactDetails.contactMobile\n        this.vcname = response.contactDetails.contactName\n      },\n      (error) => console.log(error)\n    );\n\n  }\n  ChangeContacts(event) {\n    this.vmobile = '';\n    this.vcname = '';\n    const formData = new FormData();\n    formData.append(\"index\", event.value);\n    this.userRest.getContactDetails(formData).subscribe(\n      (response) => {\n        console.log(response);\n        this.vmobile = response.contactDetails.contactMobile\n        this.vcname = response.contactDetails.contactName\n      },\n      (error) => console.log(error)\n    );\n\n  }\n  vendorsUi(event) {\n  }\n  statesUi(event) {\n    const charCode = event.keyCode;\n    if (event.key === 'Enter') {\n      this.selectedStates = this.states.find(car => {\n        return car.label.toLowerCase().includes(this.str.toLowerCase());\n      });\n      this.states.unshift(this.selectedStates)\n      this.str = '';\n    } else if (event.key === 'Backspace') {\n      this.str = this.str.replace(/.$/, \"\");\n    } else if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode === 8) {\n      this.str += event.key;\n    }\n\n  }\n\n  get actualRate() { return this.registerForm.get('actualRate'); }\n  get clientName() { return this.registerClient.get('clientName'); }\n  get vendorStatus() { return this.registerForm.get('vendorStatus'); }\n  get vendorComments() { return this.registerForm.get('vendorComments'); }\n  get submissionRate() { return this.registerForm.get('submissionRate'); }\n  get state() { return this.registerForm.get('state'); }\n  get vendorDetailId() { return this.registerForm.get('vendorDetailId'); }\n  get vid() { return this.registerForm.get('vid'); }\n  get clientId() { return this.registerForm.get('clientId'); }\n  get endClientLocation() { return this.registerForm.get('vid'); }\n  get vendorCompanyName() { return this.registerVendor.get('vendorCompanyName'); }\n  get contactName() { return this.registerVendor.get('contactName'); }\n  get contactMobile() { return this.registerVendor.get('contactMobile'); }\n  get contactEmail() { return this.registerVendor.get('contactEmail'); }\n  get ext() { return this.registerVendor.get('ext'); }\n  get vendorcontactName() { return this.registerContact.get('vendorcontactName'); }\n  get vendorcontactMobile() { return this.registerContact.get('vendorcontactMobile'); }\n  get vendorcontactEmail() { return this.registerContact.get('vendorcontactEmail'); }\n  get vendorext() { return this.registerContact.get('vendorext'); }\n  get scheduleDate() { return this.registerContact.get('scheduleDate'); }\n  get timezone() { return this.registerContact.get('timezone'); }\n  registerClientForm()\n  {\n    this.userRest.storeClient(this.registerClient).subscribe(\n      response => {\n        this.displayModalClient = false;\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Client Added' });\n        this.clients = response.clients;\n         this.selectedClients = response.clientId;\n        // this.ChangeContactsInner(response.contactId)\n        // this.router.navigate(['benchsales/list'])\n      },\n      error => {\n        this.serverErrors = error.error.errors\n      }\n    );\n  }\n  registerContactForm() {\n\n    this.userRest.storeContact(this.registerContact).subscribe(\n      response => {\n        this.displayModal1 = false;\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Vendor Contact Details Added' });\n        // this.selectedContacts = response.contactId;\n        this.userRest.editVenodr(this.registerForm.value.vid).subscribe(\n          (response2) => {\n            this.contacts = response2.contacts;\n            this.selectedContacts = response.contactId;\n            this.ChangeContactsInner(response.contactId)\n          },\n          (error) => console.log(error)\n        );\n        // this.ChangeContactsInner(response.contactId)\n        // this.router.navigate(['benchsales/list'])\n      },\n      error => {\n        this.serverErrors = error.error.errors\n      }\n    );\n  }\n  registerVendorCompany() {\n    console.log(this.registerVendor);\n\n    this.userRest.storeVendor(this.registerVendor).subscribe(\n      response => {\n        console.log(response),\n          console.log(response.vendorId);\n        this.displayModal = false;\n        this.selectedVendors = response.vendorId;\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Vendor Company Details Added' });\n\n        this.userRest.getConsultantsList().subscribe(\n          (response1) => {\n            // console.log(this.states = response.submissions);\n            console.log(this.vendors = response1.vendorslist);\n            // console.log( this.clients =  response1.clients);\n          },\n          (error) => { console.log(error) }\n        );\n        this.userRest.editVenodr(response.vendorId).subscribe(\n          (response2) => {\n            this.contacts = response2.contacts;\n            this.selectedContacts = response.contactId;\n            this.ChangeContactsInner(response.contactId)\n          },\n          (error) => console.log(error)\n        );\n\n\n        // this.router.navigate(['benchsales/list'])\n      },\n      error => {\n        this.serverErrors = error.error.errors\n      }\n    );\n  }\n  registerUser() {\n    console.log(this.registerForm);\n\n\n    //formData.append('myImageToSend', this.imageFile.file);\n\n\n    this.userRest.storeUser(this.registerForm).subscribe(\n      response => {\n        console.log(response),\n          this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Submission Completed' });\n        this.router.navigate(['benchsales/list'])\n      },\n      error => {\n        this.serverErrors = error.error.errors\n      }\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlY3J1aXRlcnMvdXNlci1lZGl0L3VzZXItY3JlYXRlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit,ViewChild, ɵConsole } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserRestService } from '../user-rest.service';\nimport {SelectItem} from 'primeng/api';\nimport {SelectItemGroup} from 'primeng/api';\n\nimport { FormGroup, FormControlName, Validators, FormControl } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nexport class Profile {\n  constructor(public prId:string, public prName:string) {\n  }\n}\n@Component({\n  selector: 'app-user-create',\n  templateUrl: './user-create.component.html',\n  providers: [MessageService],\n  styleUrls: ['./user-create.component.scss']\n})\nexport class UserEditComponent implements OnInit {\n  @ViewChild('dd', { static: true }) dropdown: any;\n  countries: any[];\n  selectedCountry: string;\n  cars: SelectItem[];\n  states: SelectItem[];\n  selectedCar: SelectItem;\n  selectedStates: SelectItem;\n  str: string;\n  counter = 0;\n  totalNumberOfCars : number;\n  formData: FormGroup;\n\n  serverErrors = [];\n  imageFile: {link: string, file: any, name: string};\n  registerForm: FormGroup;\n  registerForm1: FormGroup;\n  constructor(private route: ActivatedRoute,private messageService: MessageService, private userRest: UserRestService, private router: Router) { }\n\n  ngOnInit() {\n    this.states = [\n      {label: \"Choose State\", value: \"\"},\n      {label: \"Alabama\", value: \"Alabama\"},\n      {label: 'Alaska', value: 'Alaska'},\n      {label: 'Alabama', value: 'Alabama'},\n      {label: 'Arizona', value: 'Arizona'},\n      {label: 'Arkansas', value: 'Arkansas'},\n      {label: 'California', value: 'California'},\n      {label: 'Colorado', value: 'Colorado'},\n      {label: 'Connecticut', value: 'Connecticut'},\n      {label: 'Delaware', value:\"Delaware\"},\n      {label: 'District of Columbia', value:\"District of Columbia\"},\n      {label: 'Florida', value:\"Florida\"},\n      {label: 'Georgia', value:\"Georgia\"},\n      {label: 'Hawaii', value:\"Hawaii\"},\n      {label: 'Idaho', value:\"Idaho\"},\n      {label: 'Illinois', value:\"Illinois\"},\n      {label: 'Indiana', value:\"Indiana\"},\n      {label: 'Iowa', value:\"Iowa\"},\n      {label: 'Kansas', value:\"Kansas\"},\n      {label: 'Kentucky', value:\"Kentucky\"},\n      {label: 'Louisiana', value:\"Louisiana\"},\n      {label: 'Maine', value:\"Maine\"},\n      {label: 'Maryland', value:\"Maryland\"},\n      {label: 'Michigan', value:\"Michigan\"},\n      {label: 'Minnesota', value:\"Minnesota\"},\n      {label: 'Mississippi', value:\"Mississippi\"},\n      {label: 'Missouri', value:\"Missouri\"},\n      {label: 'Montana', value:\"Montana\"},\n      {label: 'Nebraska', value:\"Nebraska\"},\n  ];\n    this.cars = [\n      {label: \"Choose Technology\", value: \"\"},\n      {label: \"AEM(Adobe Experience manger)\", value: \"AEM(Adobe Experience manger)\"},\n      {label: 'Android Developer', value: 'Android Developer'},\n      {label: 'Business Analyst', value: 'Business Analyst'},\n      {label: 'Business Intelligence', value: 'Business Intelligence'},\n      {label: 'Data Analyst', value: 'Data Analyst'},\n      {label: 'Database Administrator', value: 'Database Administrator'},\n      {label: 'Devops Engineer', value: 'Devops Engineer'},\n      {label: 'Dot net Developer', value: 'Dot net Developer'},\n      {label: 'ETL Developer', value:\"ETL Developer\"},\n      {label: 'Hadoop', value:\"Hadoop\"},\n      {label: 'Hadoop Developer/Hadoop Admin', value:\"Hadoop Developer/Hadoop Admin\"},\n      {label: 'IOS Developer', value:\"IOS Developer\"},\n      {label: 'Java Developer', value:\"Java Developer\"},\n      {label: 'Linux Admin', value:\"Linux Admin\"},\n      {label: 'Mainframe Developer', value:\"Mainframe Developer\"},\n      {label: 'Network Engineer', value:\"Network Engineer\"},\n      {label: 'Oracle fusion developer', value:\"Oracle fusion developer\"},\n      {label: 'PEGA', value:\"PEGA\"},\n      {label: 'QA Tester/QA Analyst', value:\"QA Tester/QA Analyst\"},\n      {label: 'SAP Hana', value:\"SAP Hana\"},\n      {label: 'Salesforce', value:\"Salesforce\"},\n      {label: 'Salesforce Admin', value:\"Salesforce Admin\"},\n      {label: 'Salesforce Developer', value:\"Salesforce Developer\"},\n      {label: 'Service now developer', value:\"Service now developer\"},\n      {label: 'Tableau Developer', value:\"Tableau Developer\"},\n      {label: 'UI Developer / Frontend Developer', value:\"UI Developer / Frontend Developer\"},\n      {label: 'VOIP Engineer', value:\"VOIP Engineer\"},\n      {label: 'others', value:\"others\"},\n  ];\n  this.totalNumberOfCars = this.cars.length;\n  this.str ='';\n\n    this.registerForm = new FormGroup({\n      'jobTitle': new FormControl(null, [Validators.required, Validators.minLength(2)]),\n      'jobVisaType': new FormControl(null, [Validators.required]),\n      'jobLocation': new FormControl(null, [Validators.required]),\n      'jobExperience': new FormControl(null),\n      'jobTechnology': new FormControl(null),\n      'jobDescription': new FormControl(null),\n      'jobStatus': new FormControl(null),\n\n    });\n    let id = this.route.snapshot.params.id;\n    this.userRest.editUser(id).subscribe(\n     (response) => {\n       this.registerForm.patchValue({\n\n        'jobTitle': response.user.jobTitle,\n      'jobVisaType':  response.user.jobVisaType,\n      'jobLocation':  response.user.jobLocation,\n      'jobExperience': response.user.jobExperience,\n      'jobTechnology':  response.user.jobTechnology,\n      'jobDescription':  response.user.jobDescription,\n      'jobStatus':  response.user.jobStatus,\n\n       })\n     },\n     (error) => console.log(error)\n   );\n  }\n  imagesPreviewResume(event) {\n    if (event.target.files && event.target.files[0]) {\n        const reader = new FileReader();\n\n        reader.onload = (_event: any) => {\n            this.imageFile = {\n                link: _event.target.result,\n                file: event.srcElement.files[0],\n                name: event.srcElement.files[0].name\n            };\n        };\n        reader.readAsDataURL(event.target.files[0]);\n        const formData = new FormData();\n        formData.append(\"resume\", event.target.files[0]);\n\n        this.userRest.storeDocument(formData).subscribe(\n          (response) => { console.log(response)\n            this.registerForm.patchValue({\n              resume: response.path,\n              // formControlName2: myValue2 (can be omitted)\n            });\n          },\n          (error) => { console.log(error) }\n        );\n    }\n}\nimagesPreviewOtherDoc(event) {\n  if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n\n      reader.onload = (_event: any) => {\n          this.imageFile = {\n              link: _event.target.result,\n              file: event.srcElement.files[0],\n              name: event.srcElement.files[0].name\n          };\n      };\n      reader.readAsDataURL(event.target.files[0]);\n      const formData = new FormData();\n      formData.append(\"otherDocument\", event.target.files[0]);\n\n      this.userRest.storeDocument(formData).subscribe(\n        (response) => { console.log(response)\n          this.registerForm.patchValue({\n            otherDocument: response.path,\n            // formControlName2: myValue2 (can be omitted)\n          });\n        },\n        (error) => { console.log(error) }\n      );\n  }\n}\nimagesPreviewWorkAuth(event) {\n  if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n\n      reader.onload = (_event: any) => {\n          this.imageFile = {\n              link: _event.target.result,\n              file: event.srcElement.files[0],\n              name: event.srcElement.files[0].name\n          };\n      };\n      reader.readAsDataURL(event.target.files[0]);\n      const formData = new FormData();\n      formData.append(\"workAuthorization\", event.target.files[0]);\n\n      this.userRest.storeDocument(formData).subscribe(\n        (response) => { console.log(response)\n          this.registerForm.patchValue({\n            workAuthorization: response.path,\n            // formControlName2: myValue2 (can be omitted)\n          });\n        },\n        (error) => { console.log(error) }\n      );\n  }\n}\n  OnFocus() {\n    if(this.cars.length > this.totalNumberOfCars) {\n      this.cars.shift();\n    }\n  }\n\n  OnBlur() {\n    console.log(\"OnBlur\");\n  }\n\n  test(event) {\n    const charCode = event.keyCode;\n    if(event.key === 'Enter') {\n      this.selectedCar = this.cars.find(car => {\n       return car.label.toLowerCase().includes(this.str.toLowerCase());\n      });\n      this.cars.unshift(this.selectedCar)\n      this.str = '';\n    } else if (event.key === 'Backspace') {\n        this.str = this.str.replace(/.$/,\"\");\n    } else if( (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode === 8) {\n        this.str+= event.key;\n      }\n\n  }\n\n\n  statesUi(event) {\n    const charCode = event.keyCode;\n    if(event.key === 'Enter') {\n      this.selectedStates = this.states.find(car => {\n       return car.label.toLowerCase().includes(this.str.toLowerCase());\n      });\n      this.states.unshift(this.selectedStates)\n      this.str = '';\n    } else if (event.key === 'Backspace') {\n        this.str = this.str.replace(/.$/,\"\");\n    } else if( (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode === 8) {\n        this.str+= event.key;\n      }\n  }\n\n  get jobTitle() { return this.registerForm.get('jobTitle'); }\n  get jobDescription() { return this.registerForm.get('jobDescription'); }\n  get jobTechnology() { return this.registerForm.get('jobTechnology'); }\n  get jobExperience() { return this.registerForm.get('jobExperience'); }\n  get jobLocation() { return this.registerForm.get('jobLocation'); }\n  get jobVisaType() { return this.registerForm.get('jobVisaType'); }\n  get jobStatus() { return this.registerForm.get('jobStatus'); }\n\n\n  registerUser(){\n     console.log(this.registerForm);\n\n\n //formData.append('myImageToSend', this.imageFile.file);\n\n\n      this.userRest.storeUser(this.registerForm).subscribe(\n        response => {\n          console.log(response),\n          this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Consultant is added' });\n          this.router.navigate(['jobs/list'])\n        },\n        error =>{\n          this.serverErrors = error.error.errors\n        }\n      );\n  }\n\n  updateUserDetails(){\n    let id = this.route.snapshot.params.id;\n    this.userRest.updateUser(this.registerForm,id).subscribe(\n      (response) => {\n        console.log(response),\n        this.router.navigate(['jobs/list'])\n      },\n      error =>{\n        this.serverErrors = error.error.errors\n      },\n      () => console.log('completed')\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlY3J1aXRlcnMvdXNlci1pbmRleC91c2VyLWluZGV4LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SortEvent } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-user-index',\r\n  templateUrl: './user-index.component.html',\r\n  styleUrls: ['./user-index.component.scss']\r\n})\r\nexport class UserIndexComponent implements OnInit {\r\n  userList: Array<object> = [];\r\n  timeSheets: Array<object> = [];\r\n    statuses: any[];\r\n    loading: boolean = true;\r\n  constructor(private route: ActivatedRoute,  private router: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \":host ::ng-deep .p-cell-editing {\\n  padding-top: 0 !important;\\n  padding-bottom: 0 !important;\\n}\\n\\n.disable-td {\\n  pointer-events: none;\\n}\\n\\n.ui-button {\\n  margin-left: 0.25rem;\\n  margin-right: 0.25rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcmVjcnVpdGVycy91c2VyLWxpc3QvQzpcXHhhbXBwXFxodGRvY3NcXHNlcC1iYXJcXGFuZy9zcmNcXGFwcFxcYWRtaW5cXHJlY3J1aXRlcnNcXHVzZXItbGlzdFxcdXNlci1saXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hZG1pbi9yZWNydWl0ZXJzL3VzZXItbGlzdC91c2VyLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBQTtFQUNBLDRCQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxvQkFBQTtBQ0VGOztBREFBO0VBQ0Usb0JBQUE7RUFDQSxxQkFBQTtBQ0dGIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vcmVjcnVpdGVycy91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIC5wLWNlbGwtZWRpdGluZyB7XHJcbiAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDtcclxuICBwYWRkaW5nLWJvdHRvbTogMCAhaW1wb3J0YW50O1xyXG59XHJcbi5kaXNhYmxlLXRke1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG59XHJcbi51aS1idXR0b24ge1xyXG4gIG1hcmdpbi1sZWZ0OiAwLjI1cmVtO1xyXG4gIG1hcmdpbi1yaWdodDogMC4yNXJlbTtcclxufVxyXG4iLCI6aG9zdCA6Om5nLWRlZXAgLnAtY2VsbC1lZGl0aW5nIHtcbiAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDtcbiAgcGFkZGluZy1ib3R0b206IDAgIWltcG9ydGFudDtcbn1cblxuLmRpc2FibGUtdGQge1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cblxuLnVpLWJ1dHRvbiB7XG4gIG1hcmdpbi1sZWZ0OiAwLjI1cmVtO1xuICBtYXJnaW4tcmlnaHQ6IDAuMjVyZW07XG59Il19 */\"","import { Component, TemplateRef, OnInit, ViewChild, Output, EventEmitter, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserRestService } from '../user-rest.service';\r\nimport { Representative } from '../../../customer';\r\nimport { Table } from 'primeng/table';\r\nimport { FormGroup, FormControlName,FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { Product } from '../../consultants/product';\r\n\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3',\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF',\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-user-list',\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [MessageService, ConfirmationService],\r\n\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  @ViewChild('dt', { static: true }) table: Table;\r\n  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\r\n  timeSheets: Array<object> = [];\r\n  displayModal: boolean;\r\n  displayModal1: boolean;\r\n  comment:any;\r\n  representatives: Representative[];\r\n  confirmDropDatabaseDialogVisible = false;\r\n  frozenCols: any[];\r\n  statuses: any[];\r\n  loading: boolean = true;\r\n  registerVendor: FormGroup;\r\n  submissionId:number;\r\n  scrollableCols: any[];\r\n  serverErrors = [];\r\n  heading1:string;\r\n  clonedProducts: { [s: string]: any; } = {};\r\n  constructor(private confirmation: ConfirmationService, private fb: FormBuilder, private messageService: MessageService, private route: ActivatedRoute, private userRest: UserRestService,\r\n    private router: Router) { }\r\n\r\n  showModalDialog(data: any) {\r\n    console.log(data)\r\n    this.displayModal = true;\r\n    this.heading1 = data.consultant.consultatName+\" \"+data.consultant.consultantLastName+\" submiting to \"+data.vendorCompanyName;\r\nthis.submissionId =data.vendorId;\r\n\r\nthis.registerVendor.patchValue({\r\n  vendorComments: data.vendorComments,\r\n  vendorStatus: data.vendorStatus,\r\n  timezone: data.timezone,\r\n  scheduleDate: this.formatDate(data.scheduleDate),\r\n  // formControlName2: myValue2 (can be omitted)\r\n});\r\n  }\r\n\r\n  showModalDialog1(data: any)\r\n  {\r\n    this.displayModal1 = true;\r\n    this.comment=data;\r\n  }\r\n  ngOnInit() {\r\n    this.registerVendor = new FormGroup({\r\n      'vendorStatus':  new FormControl(''),\r\n      'vendorComments' :new FormControl(''),\r\n      'scheduleDate' :new FormControl(''),\r\n      'timezone' :new FormControl(''),\r\n\r\n\r\n    });\r\n    this.userRest.getConsultants().subscribe(\r\n      (response) => { console.log(this.timeSheets = response.submissions); this.loading = false; },\r\n      (error) => { console.log(error) }\r\n    );\r\n    this.frozenCols = [\r\n      { field: 'consultatName', header: 'Name' },\r\n    ];\r\n    this.scrollableCols = [\r\n      { field: 'user_details.name', header: 'Created By', width: '20%', editable: false },\r\n      { field: 'consultant.consultatName', header: 'Consultant Name', width: '20%', editable: false },\r\n      { field: 'vendorStatus', header: 'Status', width: '40%', editable: true },\r\n      { field: 'consultant.technology', header: 'Technology', width: '20%', editable: false },\r\n      { field: 'vendorCompanyName', header: 'Company Name', width: '20%', editable: false },\r\n      { field: 'vendorName', header: 'Vendor Name', width: '20%', editable: false },\r\n      { field: 'vendorEmail', header: 'Vendor Email', width: '20%', editable: false },\r\n      { field: 'vendorMobileNumber', header: 'Vendor Mobile', width: '20%', editable: false },\r\n      { field: 'endClientName', header: 'End Client Name', width: '20%', editable: false },\r\n      { field: 'actualRate', header: 'Actual Rate', width: '20%', editable: true },\r\n\r\n      { field: 'submissionRate', header: 'Submissio Rate', width: '20%', editable: true },\r\n\r\n      //{ field: 'vendorComments', header: 'Comments', width: '40%',editable: true },\r\n\r\n    ];\r\n\r\n    this.representatives = [\r\n      { name: \"Dot net Developer\" },\r\n      { name: \"Java Developer\" },\r\n      { name: \"QA Tester/QA Analyst\" },\r\n      { name: \"Devops Engineer\" }\r\n\r\n    ];\r\n\r\n\r\n    this.statuses = [\r\n      { label: 'Unqualified', value: 'unqualified' },\r\n      { label: 'Qualified', value: 'qualified' },\r\n      { label: 'New', value: 'new' },\r\n      { label: 'Negotiation', value: 'negotiation' },\r\n      { label: 'Renewal', value: 'renewal' },\r\n      { label: 'Proposal', value: 'proposal' }\r\n    ]\r\n  }\r\n  onActivityChange(event) {\r\n    const value = event.target.value;\r\n    if (value && value.trim().length) {\r\n      const activity = parseInt(value);\r\n\r\n      if (!isNaN(activity)) {\r\n        this.table.filter(activity, 'activity', 'gte');\r\n      }\r\n    }\r\n  }\r\n  onRowEditInit(product: any) {\r\n    console.log(product)\r\n    this.clonedProducts[product.reportId] = { ...product };\r\n  }\r\n  onRowEditSave(product: any, index: number) {\r\n    //alert(product.timeSheetId)\r\n    /*this.loading = true;\r\n    if (product.duration < 16) {\r\n      let updateUser: FormGroup;\r\n      updateUser = new FormGroup({\r\n        'duration': new FormControl(product.duration),\r\n        'fromDate': new FormControl(product.fromDate),\r\n        'assignment': new FormControl(product.assignment),\r\n        'serviceCode': new FormControl(product.serviceCode),\r\n      });\r\n      this.userRest.updateTimeSheet(updateUser, product.timeSheetId).subscribe(\r\n        (response) => {\r\n          this.loading = false;\r\n          this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Timesheet is updated' });\r\n        },\r\n        (error) => {\r\n          console.log(error)\r\n          this.loading = false;\r\n          this.timeSheets[index] = this.clonedProducts[product.timeSheetId];\r\n          delete this.timeSheets[product.timeSheetId];\r\n          this.messageService.add({ severity: 'error', summary: 'Error', detail: error.error.message });\r\n        },\r\n        () => console.log('completed')\r\n      );\r\n\r\n    }\r\n    else {\r\n      this.loading = false;\r\n      this.timeSheets[index] = this.clonedProducts[product.timeSheetId];\r\n      delete this.timeSheets[product.timeSheetId];\r\n      this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Invalid Duration only 15 hours accepted' });\r\n    } */\r\n  }\r\n\r\n  onRowEditCancel(product: any, index: number) {\r\n    this.timeSheets[index] = this.clonedProducts[product.reportId];\r\n    delete this.timeSheets[product.reportId];\r\n  }\r\n\r\n\r\n\r\n\r\n  onDateSelect(value) {\r\n    this.table.filter(this.formatDate(value), 'created_at', 'equals')\r\n  }\r\n\r\n  formatDate(date) {\r\n    if(date)\r\n    {\r\n    const d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    const year = d.getFullYear();\r\n    if (month.length < 2) month = '0' + month;\r\n    if (day.length < 2) day = '0' + day;\r\n    return [year, month, day].join('-');\r\n    }else{\r\n      const d = new Date();\r\n      let month = '' + (d.getMonth() + 1);\r\n      let day = '' + d.getDate();\r\n      const year = d.getFullYear();\r\n      if (month.length < 2) month = '0' + month;\r\n      if (day.length < 2) day = '0' + day;\r\n      return [year, month, day].join('-');\r\n    }\r\n  }\r\n\r\n  onRepresentativeChange(event) {\r\n    if (event.value) {\r\n      console.log(event.value)\r\n      this.table.filter(event.value, 'technology', 'in')\r\n    }\r\n\r\n  }\r\n\r\n  dropDatabase(event: Event, index: number) {\r\n    if (event.defaultPrevented) return;\r\n    event.preventDefault();\r\n\r\n    this.confirmation.confirm({\r\n      key: 'confirm-drop-database',\r\n      message: 'Are you sure to Aprove for Hotlist',\r\n      accept: () => { this._dropDatabase(index); },\r\n    });\r\n  }\r\n\r\n  private _dropDatabase(index) {\r\n    const formData = new FormData();\r\n    formData.append(\"index\", index);\r\n    console.log(formData);\r\n    this.userRest.statusChangeConsultant(formData).subscribe(\r\n      (response) => {\r\n        console.log(response); this.loading = false;\r\n        this.timeSheets = response.timesheet;\r\n      },\r\n      (error) => { console.log(error) }\r\n    );\r\n\r\n  }\r\n  download(event: Event, url: any) {\r\n\r\n    window.open('http://localhost:8000/storage/' + url);\r\n\r\n  }\r\n  editUser(id: number) {\r\n    this.router.navigate(['jobs/edit', id]);\r\n  }\r\n  getColor(status: string, adminStatus: string) {\r\n    if (adminStatus == \"A\") {\r\n      return \"#d4edda\"\r\n    } else if (status == \"not interested\") {\r\n      return \"#f8d7da\"\r\n    }\r\n  }\r\n\r\n\r\n  get vendorStatus() { return this.registerVendor.get('vendorStatus'); }\r\n  get vendorComments() { return this.registerVendor.get('vendorComments'); }\r\n  get scheduleDate() { return this.registerVendor.get('scheduleDate'); }\r\n  get timezone() { return this.registerVendor.get('timezone'); }\r\n  registerUser(submissionId:number){\r\n    console.log(this.registerVendor);\r\n\r\n  this.userRest.updateSubmission(this.registerVendor,submissionId).subscribe(\r\n       response => {\r\n        this.displayModal = false;\r\n         console.log(response),\r\n         this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Submision Updated' });\r\n         this.timeSheets = response.submissions;\r\n       },\r\n       error =>{\r\n         this.serverErrors = error.error.errors\r\n       }\r\n     );\r\n }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRestService {\n  users: Array<{id: number, name: string, email: string}> = [];\n  constructor(private http: HttpClient) { }\n\n\n  getConsultants(): Observable<any> {\n    return this.http.get('https://portal.webmobilez.com/public/api/submissions/');\n  }\n  storeUser(form): Observable<any> {\n    return this.http.post('https://portal.webmobilez.com/public/api/submissions',form.value);\n  }\n\n\nupdateSubmission(form,id): Observable<any> {\n  return this.http.put('https://portal.webmobilez.com/public/api/submissions/' + id, form.value);\n}\n  storeVendor(form): Observable<any> {\n    return this.http.post('https://portal.webmobilez.com/public/api/vendorlist',form.value);\n  }\n  storeContact(form): Observable<any> {\n    return this.http.post('https://portal.webmobilez.com/public/api/contactslist',form.value);\n  }\n  storeClient(form): Observable<any> {\n    return this.http.post('https://portal.webmobilez.com/public/api/clients',form.value);\n  }\n statusChangeConsultant(index): Observable<any> {\n\n    return this.http.post('https://portal.webmobilez.com/public/api/status-consultant',index);\n  }\n  getConsultantsList(): Observable<any> {\n    return this.http.get('https://portal.webmobilez.com/public/api/getConsultantsList/');\n  }\n  editUser(id): Observable<any> {\n    return this.http.get('https://portal.webmobilez.com/public/api/jobs/' + id);\n  }\n  editVenodr(id): Observable<any> {\n    return this.http.get('https://portal.webmobilez.com/public/api/contacts/' + id);\n  }\n  editConsultant(id): Observable<any> {\n    return this.http.get('https://portal.webmobilez.com/public/api/store-consultant/' + id);\n  }\n  updateUser(form,id): Observable<any> {\n    return this.http.put('https://portal.webmobilez.com/public/api/jobs/' + id, form.value);\n  }\n  storeDocument(document): Observable<any> {\n\n    return this.http.post('https://portal.webmobilez.com/public/api/saveDocument', document);\n  }\n  getContactDetails(index): Observable<any> {\n\n    return this.http.post('https://portal.webmobilez.com/public/api/contactsDetails',index);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserIndexComponent } from './user-index/user-index.component';\n\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserCreateComponent } from './user-create/user-create.component';\nimport { UserEditComponent } from './user-edit/user-edit.component';\nconst routes: Routes = [\n // { path: 'list', component: UserListComponent, outlet: 'users' },\n  {\n    path: '',\n    component: UserIndexComponent,\n    children: [\n\n      {path: 'list', component: UserListComponent},\n      {path: 'create', component: UserCreateComponent},\n      {path: 'edit/:id', component: UserEditComponent},\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserIndexComponent } from './user-index/user-index.component';\n\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserCreateComponent } from './user-create/user-create.component';\nimport { UserEditComponent } from './user-edit/user-edit.component';\nimport { UserRestService } from './user-rest.service';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { TableModule } from 'primeng/table';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { ToastModule } from 'primeng/toast';\nimport { SliderModule } from 'primeng/slider';\nimport { FormsModule } from '@angular/forms';\nimport { ContextMenuModule } from 'primeng/contextmenu';\nimport { DialogModule } from 'primeng/dialog';\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { TabMenuModule } from 'primeng/tabmenu';\nimport { MenuItem } from 'primeng/api';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport { DropdownModule } from 'primeng/dropdown';\nimport {InplaceModule} from 'primeng/inplace';\nimport { FieldPipe } from '../../field10.pipe';\nimport { ConfirmDialogModule} from 'primeng/confirmdialog';\nimport { CalculatorComponent } from './calculator/calculator.component';\n\n@NgModule({\n  declarations: [UserIndexComponent, UserListComponent,UserCreateComponent,UserEditComponent,CalculatorComponent,FieldPipe],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    ReactiveFormsModule, TableModule, MultiSelectModule,\n    SliderModule,\n    DialogModule,\n    MultiSelectModule,\n    ContextMenuModule,\n    ButtonModule,\n    ToastModule,\n    InputTextModule,ConfirmDialogModule,\n\n    ProgressBarModule, TabMenuModule, TooltipModule, FileUploadModule, NgxDropzoneModule, DropdownModule, FormsModule,InplaceModule\n  ],\n  providers: [\n    UserRestService\n  ]\n})\nexport class UserModule { }\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DatePipe, CurrencyPipe, DecimalPipe } from \"@angular/common\";\r\n@Pipe({\r\n  name: \"field\"\r\n})\r\nexport class FieldPipe implements PipeTransform {\r\n  /**\r\n   *\r\n   */\r\n  constructor() {}\r\n  transform(value: any, ...args: any[]): any {\r\n    const column: any = args[0];\r\n    let result = value;\r\n    // addressModel.City.Name\r\n    column.field.split(\".\").forEach(f => (result = result[f]));\r\n    return result?result:'-';\r\n  }\r\n}\r\n"],"sourceRoot":""}