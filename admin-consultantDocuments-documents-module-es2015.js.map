{"version":3,"sources":["webpack:///./node_modules/primeng/dynamicdialog.js","webpack:///./src/app/admin/consultantDocuments/user-create/user-create.component.html","webpack:///./src/app/admin/consultantDocuments/user-index/user-index.component.html","webpack:///./src/app/admin/consultantDocuments/user-list/user-list.component.html","webpack:///./src/app/admin/consultantDocuments/documents.module.ts","webpack:///./src/app/admin/consultantDocuments/user-create/user-create.component.scss","webpack:///./src/app/admin/consultantDocuments/user-create/user-create.component.ts","webpack:///./src/app/admin/consultantDocuments/user-index/user-index.component.scss","webpack:///./src/app/admin/consultantDocuments/user-index/user-index.component.ts","webpack:///./src/app/admin/consultantDocuments/user-list/user-list.component.scss","webpack:///./src/app/admin/consultantDocuments/user-list/user-list.component.ts","webpack:///./src/app/admin/consultantDocuments/user-rest.service.ts","webpack:///./src/app/admin/consultantDocuments/user-routing.module.ts","webpack:///./src/app/field1.pipe.ts"],"names":[],"mappings":"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","file":"admin-consultantDocuments-documents-module-es2015.js","sourcesContent":["/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/dynamicdialog/dynamicdialog\"));","module.exports = \"<p-toast position=\\\"bottom-right\\\"></p-toast>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h4 class=\\\"remove-margin\\\">Add Consultant </h4>\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <!-- <h5 class=\\\"card-title\\\">Edit Profile</h5> -->\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"registerUser()\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Consultant First Name:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"consultatName\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\" required>\\n                <div *ngIf=\\\"consultatName.invalid && (consultatName.dirty || consultatName.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"consultatName.errors?.required\\\">\\n                    First Name is required.\\n                  </div>\\n                  <div *ngIf=\\\"consultatName.errors?.minlength\\\">\\n                    First Name must be at least 2 characters long.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.consultatName }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Consultant Last Name:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"consultantLastName\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name\\\" required>\\n                <div *ngIf=\\\"consultantLastName.invalid && (consultantLastName.dirty || consultantLastName.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"consultantLastName.errors?.required\\\">\\n                    Last Name is required.\\n                  </div>\\n                  <div *ngIf=\\\"consultantLastName.errors?.minlength\\\">\\n                    Last Name must be at least 2 characters long.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.consultantLastName }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleInputEmail1\\\">Consultant Email</label>\\n                <input type=\\\"email\\\" formControlName=\\\"consultantEmail\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" required>\\n\\n                <div *ngIf=\\\"consultantEmail.invalid && (consultantEmail.dirty || consultantEmail.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"consultantEmail.errors?.required\\\">\\n                    Email is required.\\n                  </div>\\n                  <div *ngIf=\\\"consultantEmail.errors?.email\\\">\\n                    Invalid email address.\\n                  </div>\\n                </div>\\n\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.consultantEmail }}</small>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Consultant Mobile Number:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"consultatMobileNumber\\\" class=\\\"form-control\\\" placeholder=\\\"Mobile Number\\\" required>\\n                <div *ngIf=\\\"consultatMobileNumber.invalid && (consultatMobileNumber.dirty || consultatMobileNumber.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"consultatMobileNumber.errors?.required\\\">\\n                    Mobile is required.\\n                  </div>\\n                  <div *ngIf=\\\"consultatMobileNumber.errors?.minlength\\\">\\n                    Mobile must be at least 10 number long.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.consultatMobileNumber }}</small>\\n\\n              </div>\\n            </div>\\n\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Technology</label>\\n\\n                <select  class=\\\"form-control\\\" formControlName=\\\"technology\\\">\\n                  <option [ngValue]=\\\"null\\\" disabled>Choose your profile</option>\\n                  <option *ngFor=\\\"let prf of allProfiles\\\" [ngValue]=\\\"prf\\\">\\n                   {{ prf.prName }}\\n                  </option>\\n                </select>\\n                <div *ngIf=\\\"technology.invalid && (technology.dirty || technology.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"technology.errors?.required\\\">\\n                    Technology is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.technology }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Other Technology:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"otherTechnologies\\\" class=\\\"form-control\\\" placeholder=\\\"Other Technology\\\" required>\\n                <div *ngIf=\\\"otherTechnologies.invalid && (otherTechnologies.dirty || otherTechnologies.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"otherTechnologies.errors?.required\\\">\\n                    Other Technology is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.otherTechnologies }}</small>\\n\\n              </div>\\n            </div>\\n\\n\\n            <div class=\\\"col-md-1\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Expected Rate:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"rate\\\" class=\\\"form-control\\\" placeholder=\\\"Rate\\\" required>\\n                <div *ngIf=\\\"rate.invalid && (rate.dirty || rate.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"rate.errors?.required\\\">\\n                    Rate is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.rate }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-1\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Experience:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"experience\\\" class=\\\"form-control\\\" placeholder=\\\"exp\\\" required>\\n                <div *ngIf=\\\"experience.invalid && (experience.dirty || experience.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"experience.errors?.required\\\">\\n                    Experience is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.experience }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>City:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"city\\\" class=\\\"form-control\\\" placeholder=\\\"City\\\" required>\\n                <div *ngIf=\\\"city.invalid && (city.dirty || city.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"city.errors?.required\\\">\\n                    City is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.city }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>State:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\" placeholder=\\\"State\\\" required>\\n                <div *ngIf=\\\"state.invalid && (state.dirty || state.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"state.errors?.required\\\">\\n                    State is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.state }}</small>\\n\\n              </div>\\n            </div>\\n\\n\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Willing to Reloacate:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"willingLocation\\\" class=\\\"form-control\\\" placeholder=\\\"Relocate\\\" required>\\n                <div *ngIf=\\\"willingLocation.invalid && (willingLocation.dirty || willingLocation.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"willingLocation.errors?.required\\\">\\n                    First Name is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.willingLocation }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Documents collected:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"documentsCollected\\\" class=\\\"form-control\\\"  required>\\n                <div *ngIf=\\\"documentsCollected.invalid && (documentsCollected.dirty || documentsCollected.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"documentsCollected.errors?.required\\\">\\n                    Documents is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.documentsCollected }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleInputEmail1\\\">Resource:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"resource\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" required>\\n\\n                <div *ngIf=\\\"resource.invalid && (resource.dirty || resource.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"resource.errors?.required\\\">\\n                    Resource is required.\\n                  </div>\\n\\n                </div>\\n\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.resource }}</small>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Status</label>\\n                <input type=\\\"text\\\" formControlName=\\\"reportStatus\\\" class=\\\"form-control\\\" placeholder=\\\"Status\\\" required>\\n                <div *ngIf=\\\"reportStatus.invalid && (reportStatus.dirty || reportStatus.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"reportStatus.errors?.required\\\">\\n                    Mobile is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.reportStatus }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Last 4 digits of SSN :</label>\\n                <input type=\\\"text\\\" formControlName=\\\"ssn\\\" class=\\\"form-control\\\" placeholder=\\\"SSN\\\" required>\\n                <div *ngIf=\\\"ssn.invalid && (ssn.dirty || ssn.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"ssn.errors?.required\\\">\\n                    Mobile is required.\\n                  </div>\\n                  <div *ngIf=\\\"ssn.errors?.minlength\\\">\\n                    Mobile must be at least 4 number long.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.ssn }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Best Contact Number</label>\\n                <input type=\\\"text\\\" formControlName=\\\"bestContactNumber\\\" class=\\\"form-control\\\" placeholder=\\\"Best Contact Number\\\"\\n                  required>\\n                <div *ngIf=\\\"bestContactNumber.invalid && (bestContactNumber.dirty || bestContactNumber.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"bestContactNumber.errors?.required\\\">\\n                    Best ContactNumber is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.bestContactNumber }}</small>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Skype ID:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"skypeId\\\" class=\\\"form-control\\\" placeholder=\\\"SkypeId\\\" required>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>linked In Url:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"linkedInUrl\\\" class=\\\"form-control\\\" placeholder=\\\"Linkedin Url\\\" required>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleInputEmail1\\\">Availability:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"availability\\\" class=\\\"form-control\\\" placeholder=\\\"availability\\\" required>\\n\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Priority</label>\\n                <input type=\\\"text\\\" formControlName=\\\"priority\\\" class=\\\"form-control\\\" placeholder=\\\"Priority\\\" required>\\n                <div *ngIf=\\\"priority.invalid && (priority.dirty || priority.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"priority.errors?.required\\\">\\n                    priority is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.priority }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-1\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Visa Type:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"visaType\\\" class=\\\"form-control\\\" placeholder=\\\"Visa Type\\\" required>\\n                <div *ngIf=\\\"visaType.invalid && (visaType.dirty || visaType.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"visaType.errors?.required\\\">\\n                    Visa Type is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.visaType }}</small>\\n\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"update ml-auto mr-auto\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-round\\\" [disabled]=\\\"!registerForm.valid\\\">Submit\\n                Consultant</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n\"","module.exports = \"<h4 class=\\\"remove-margin\\\"> Documents </h4>\\r\\n\\r\\n<!--\\r\\n<p-table #dt [responsive]=\\\"true\\\" [value]=\\\"timeSheets\\\" [frozenColumns]=\\\"frozenCols\\\" [scrollable]=\\\"true\\\"\\r\\n  scrollHeight=\\\"200px\\\" appendTo=\\\"body\\\" filterMatchMode=\\\"equals\\\" columnResizeMode=\\\"expand\\\" dataKey=\\\"id\\\" [rows]=\\\"10\\\"\\r\\n  [showCurrentPageReport]=\\\"true\\\" tableStyleClass=\\\"fixtable\\\" [rowsPerPageOptions]=\\\"[5,10,20,30]\\\" [loading]=\\\"loading\\\"\\r\\n  styleClass=\\\"p-datatable-customers\\\" [paginator]=\\\"true\\\" [filterDelay]=\\\"0\\\"\\r\\n  [globalFilterFields]=\\\"['created_at','consultatName','consultantEmail','consultatMobileNumber','experience','rate','reportStatus']\\\">\\r\\n\\r\\n  <ng-template pTemplate=\\\"header\\\">\\r\\n    <tr>\\r\\n\\r\\n      <th>Consultant Name</th>\\r\\n      <th>Created At</th>\\r\\n      <th>Email</th>\\r\\n      <th>Phone number</th>\\r\\n\\r\\n      <th>Exp </th>\\r\\n      <th>Rate</th>\\r\\n      <th>Status</th>\\r\\n      <th>Action</th>\\r\\n\\r\\n    </tr>\\r\\n    <tr>\\r\\n\\r\\n\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'consultatName', 'startsWith')\\\"\\r\\n          placeholder=\\\"Name\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <p-calendar (onSelect)=\\\"onDateSelect($event)\\\" (onClearClick)=\\\"dt.filter('', 'created_at', 'equals')\\\"\\r\\n          [showButtonBar]=\\\"true\\\" [style]=\\\"{'width':'300px'}\\\" styleClass=\\\"p-column-filter\\\" placeholder=\\\"Date\\\"\\r\\n          [readonlyInput]=\\\"true\\\" dateFormat=\\\"yy-mm-dd\\\"></p-calendar>\\r\\n      </th>\\r\\n      <th> <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'consultantEmail', 'startsWith')\\\"\\r\\n          placeholder=\\\"Email\\\" class=\\\"p-column-filter\\\"></th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'consultatMobileNumber', 'startsWith')\\\"\\r\\n          placeholder=\\\"Phone\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'experience', 'startsWith')\\\"\\r\\n          placeholder=\\\"exp\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'rate', 'startsWith')\\\" placeholder=\\\"Rate\\\"\\r\\n          class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'reportStatus', 'startsWith')\\\"\\r\\n          placeholder=\\\"Status\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"body\\\" let-customer>\\r\\n    <tr>\\r\\n\\r\\n\\r\\n      <td>\\r\\n        {{customer.consultatName}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{customer.created_at | date}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{customer.consultantEmail}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{customer.consultatMobileNumber}}\\r\\n      </td>\\r\\n\\r\\n      <td>\\r\\n        {{customer.experience}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{customer.rate}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{customer.reportStatus}}\\r\\n      </td>\\r\\n      <td>\\r\\n        -\\r\\n      </td>\\r\\n\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n    <tr>\\r\\n      <td colspan=\\\"6\\\">No Consultants found.</td>\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n</p-table> -->\\r\\n<!--\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n          <h4 class=\\\"remove-margin\\\"> Timesheet List </h4>\\r\\n    <div class=\\\"card\\\">\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <p-table #dt [value]=\\\"timeSheets\\\" dataKey=\\\"id\\\"\\r\\n        [rows]=\\\"10\\\" [showCurrentPageReport]=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20]\\\" [loading]=\\\"loading\\\" styleClass=\\\"p-datatable-customers\\\"\\r\\n        [paginator]=\\\"false\\\"\\r\\n        [filterDelay]=\\\"0\\\" [globalFilterFields]=\\\"['fromDate','duration','assignment','serviceCode']\\\">\\r\\n\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n            <tr>\\r\\n                <th>Employee</th>\\r\\n                <th>Date</th>\\r\\n                <th>Duration</th>\\r\\n                <th>Assignment</th>\\r\\n                <th>Service Code</th>\\r\\n            </tr>\\r\\n\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-customer>\\r\\n            <tr>\\r\\n              <td>\\r\\n                {{customer.user_details.name}}\\r\\n              </td>\\r\\n                <td>\\r\\n                    {{customer.fromDate | date}}\\r\\n                </td>\\r\\n                <td>\\r\\n                   {{customer.duration}}\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{customer.assignment}}\\r\\n               </td>\\r\\n               <td>\\r\\n                {{customer.serviceCode}}\\r\\n             </td>\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n            <tr>\\r\\n                <td colspan=\\\"6\\\">No Users found.</td>\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n    </p-table>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<p-inplace>\\r\\n  <ng-template pTemplate=\\\"display\\\">\\r\\n    Click to Edit\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"content\\\">\\r\\n    <input type=\\\"text\\\" value=\\\"PrimeNG\\\" pInputText>\\r\\n  </ng-template>\\r\\n</p-inplace>\\r\\n\\r\\n<p-table #dt [value]=\\\"timeSheets\\\" dataKey=\\\"id\\\"\\r\\n        [rows]=\\\"10\\\" [showCurrentPageReport]=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,25,50]\\\" [loading]=\\\"loading\\\" styleClass=\\\"p-datatable-customers\\\"\\r\\n        [paginator]=\\\"true\\\" currentPageReportTemplate=\\\"Showing {first} to {last} of {totalRecords} entries\\\"\\r\\n        [filterDelay]=\\\"0\\\" [globalFilterFields]=\\\"['consultatName']\\\">\\r\\n        <ng-template pTemplate=\\\"caption\\\">\\r\\n            <div class=\\\"table-header\\\">\\r\\n                List of Consultants\\r\\n                <span class=\\\"p-input-icon-left\\\">\\r\\n                    <i class=\\\"pi pi-search\\\"></i>\\r\\n                    <input pInputText type=\\\"text\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Search\\\" />\\r\\n                </span>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n            <tr>\\r\\n                <th>Name</th>\\r\\n\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <th>\\r\\n                    <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'consultatName', 'startsWith')\\\" placeholder=\\\"Search by Name\\\" class=\\\"p-column-filter\\\">\\r\\n                </th>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-customer>\\r\\n            <tr>\\r\\n                <td>\\r\\n                    {{customer.consultatName}}\\r\\n                </td>\\r\\n\\r\\n\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n            <tr>\\r\\n                <td colspan=\\\"6\\\">No Consultants found.</td>\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n    </p-table>\\r\\n {{rowData|field:col}}\\r\\n <p-table #dt [columns]=\\\"scrollableCols\\\" [frozenColumns]=\\\"frozenCols\\\"\\r\\nfrozenWidth=\\\"200px\\\" [value]=\\\"timeSheets\\\" [scrollable]=\\\"true\\\"\\r\\n  scrollHeight=\\\"350px\\\"  [filterDelay]=\\\"0\\\" [globalFilterFields]=\\\"['consultatName']\\\" [resizableColumns]=\\\"true\\\" columnResizeMode=\\\"expand\\\" [reorderableColumns]=\\\"true\\\"\\r\\n  autoLayout=\\\"true\\\"  dataKey=\\\"reportId\\\" editMode=\\\"row\\\">  -->\\r\\n  <p-table #dt [columns]=\\\"scrollableCols\\\"  [value]=\\\"timeSheets\\\" [scrollable]=\\\"true\\\"\\r\\n   [filterDelay]=\\\"0\\\" [globalFilterFields]=\\\"['consultatName']\\\" [resizableColumns]=\\\"true\\\" columnResizeMode=\\\"expand\\\" [reorderableColumns]=\\\"true\\\"\\r\\n  autoLayout=\\\"true\\\" (onRowSelect)=\\\"onRowSelected($event)\\\"  dataKey=\\\"reportId\\\" editMode=\\\"row\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [showCurrentPageReport]=\\\"true\\\"\\r\\n  currentPageReportTemplate=\\\"Showing {first} to {last} of {totalRecords} entries\\\" [rowsPerPageOptions]=\\\"[10,25,50]\\\">\\r\\n  <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n    <colgroup>\\r\\n\\r\\n      <col *ngFor=\\\"let col of columns\\\" style=\\\"width:200px\\\">\\r\\n\\r\\n      <col style=\\\"width:200px\\\">\\r\\n      <col style=\\\"width:200px\\\">\\r\\n    </colgroup>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n    <tr>\\r\\n      <th>Submissions</th>\\r\\n      <th *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{'width': col.width}\\\">\\r\\n        {{col.header}}\\r\\n      </th>\\r\\n\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th>\\r\\n\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'consultatName', 'startsWith')\\\"\\r\\n          placeholder=\\\"Name\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n<th>\\r\\n  <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'user_details.name', 'startsWith')\\\"\\r\\n  placeholder=\\\"Created By\\\" class=\\\"p-column-filter\\\">\\r\\n</th>\\r\\n<!--  <th> <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'user_details.name', 'startsWith')\\\"\\r\\n        placeholder=\\\"Created By\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n\\r\\n\\r\\n   <th>\\r\\n        <p-calendar (onSelect)=\\\"onDateSelect($event)\\\" (onClearClick)=\\\"dt.filter('', 'created_at', 'equals')\\\"\\r\\n          [showButtonBar]=\\\"true\\\" [style]=\\\"{'width':'300px'}\\\" styleClass=\\\"p-column-filter\\\" placeholder=\\\"Date\\\"\\r\\n          [readonlyInput]=\\\"true\\\" dateFormat=\\\"yy-mm-dd\\\"></p-calendar>\\r\\n      </th> -->\\r\\n\\r\\n      <th> <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'consultantEmail', 'startsWith')\\\"\\r\\n          placeholder=\\\"Email\\\" class=\\\"p-column-filter\\\"></th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'consultatMobileNumber', 'startsWith')\\\"\\r\\n          placeholder=\\\"Phone\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'experience', 'startsWith')\\\"\\r\\n          placeholder=\\\"exp\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n\\r\\n     <!--   <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'rate', 'startsWith')\\\" placeholder=\\\"Rate\\\"\\r\\n          class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n  <th>\\r\\n        <p-multiSelect [options]=\\\"statusOptions\\\" placeholder=\\\"All\\\" (onChange)=\\\"onRepresentativeChange($event)\\\" styleClass=\\\"p-column-filter\\\" >\\r\\n            <ng-template let-option pTemplate=\\\"item\\\">\\r\\n                <div class=\\\"p-multiselect-representative-option\\\">\\r\\n                     <span class=\\\"p-ml-1\\\">{{option.label}}</span>\\r\\n                </div>\\r\\n            </ng-template>\\r\\n        </p-multiSelect>\\r\\n    </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'visaType', 'startsWith')\\\"\\r\\n          placeholder=\\\"visaType\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'city', 'startsWith')\\\"\\r\\n          placeholder=\\\"city\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'state', 'startsWith')\\\"\\r\\n          placeholder=\\\"state\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'willingLocation', 'startsWith')\\\"\\r\\n          placeholder=\\\"willingLocation\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'documentsCollected', 'startsWith')\\\"\\r\\n          placeholder=\\\"documentsCollected\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'resource', 'startsWith')\\\"\\r\\n          placeholder=\\\"resource\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'ssn', 'startsWith')\\\"\\r\\n          placeholder=\\\"SSN\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'bestContactNumber', 'startsWith')\\\"\\r\\n          placeholder=\\\"bestContactNumber\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'linkedInUrl', 'startsWith')\\\"\\r\\n          placeholder=\\\"linkedInUrl\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'skypeId', 'startsWith')\\\"\\r\\n          placeholder=\\\"skypeId\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'priority', 'startsWith')\\\"\\r\\n          placeholder=\\\"priority\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'reportStatus', 'startsWith')\\\"\\r\\n          placeholder=\\\"Status\\\" class=\\\"p-column-filter\\\">\\r\\n      </th> -->\\r\\n\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-editing=\\\"editing\\\" let-ri=\\\"rowIndex\\\">\\r\\n    <tr [pEditableRow]=\\\"rowData\\\">\\r\\n\\r\\n      <td class=\\\"text-center\\\">\\r\\n\\r\\n        <button pButton pRipple type=\\\"button\\\" icon=\\\"pi pi-star\\\" class=\\\"p-button-rounded p-button-warning\\\" style=\\\"color:Green;background:#fff;border: none;\\\"></button>\\r\\n        <button pButton pRipple type=\\\"button\\\" icon=\\\"pi pi-bookmark\\\" class=\\\"p-button-outlined p-button-secondary\\\" style=\\\"color:#007bff;background:#fff;border: none;\\\"></button>\\r\\n        <button pButton pRipple type=\\\"button\\\" icon=\\\"pi  pi-tag  \\\" class=\\\"p-button-outlined p-button-secondary\\\" style=\\\"color:#007bff;background:#fff;border: none;\\\"></button><br>\\r\\n        <button data-toggle=\\\"tooltip\\\" title=\\\"0 Submissions\\\" style=\\\"color:white;background:#007bff;border:none\\\">0</button>\\r\\n        <button data-toggle=\\\"tooltip\\\" title=\\\"0 Submitted to Client\\\" style=\\\"color:white;background:purple;border:none\\\">0</button>\\r\\n        <button data-toggle=\\\"tooltip\\\" title=\\\"0 Interview Schedule\\\" style=\\\"color:white;background:green;border:none\\\">0</button>\\r\\n      </td>\\r\\n      <td *ngFor=\\\"let col of columns\\\" >\\r\\n            <div *ngIf=\\\"!col.editable\\\">\\r\\n              {{rowData|field:col}}\\r\\n            </div>\\r\\n\\r\\n            <p-cellEditor *ngIf=\\\"col.editable\\\">\\r\\n                    <ng-template pTemplate=\\\"input\\\" >\\r\\n                      <div *ngIf=\\\"rowData|field:col as variable\\\">\\r\\n                         <input pInputText type=\\\"text\\\"  [(ngModel)]=\\\"variable\\\" required>\\r\\n                                                </div>\\r\\n                    </ng-template>\\r\\n                    <ng-template pTemplate=\\\"output\\\">\\r\\n\\r\\n                        {{rowData|field:col}}\\r\\n                    </ng-template>\\r\\n            </p-cellEditor>\\r\\n      </td>\\r\\n\\r\\n      <!-- <td>\\r\\n        <a href=\\\"#\\\" class=\\\"btn btn-circle btn-sm btn-primary updateStatus\\\" (click)=\\\"dropDatabase($event,rowData.reportId);\\\"  data-toggle=\\\"tooltip\\\" title=\\\"Publish\\\">\\r\\n          <i\\r\\n          class=\\\"fa fa-thumbs-up\\\"></i>\\r\\n        </a>\\r\\n\\r\\n          <button  *ngIf=\\\"!editing\\\" pButton pRipple type=\\\"button\\\" pInitEditableRow icon=\\\"pi pi-pencil\\\" (click)=\\\"onRowEditInit(custom)\\\" class=\\\"p-button-rounded p-button-text \\\"></button>\\r\\n          <button   *ngIf=\\\"editing\\\" pButton pRipple type=\\\"button\\\" pSaveEditableRow icon=\\\"pi pi-check\\\" (click)=\\\"onRowEditSave(custom,ri)\\\" class=\\\"p-button-rounded p-button-text p-button-success p-mr-2\\\"></button>\\r\\n          <button   *ngIf=\\\"editing\\\" pButton pRipple type=\\\"button\\\" pCancelEditableRow icon=\\\"pi pi-times\\\" (click)=\\\"onRowEditCancel(custom, ri)\\\" class=\\\"p-button-rounded p-button-text p-button-danger\\\"></button>\\r\\n\\r\\n      </td>\\r\\n\\r\\n    </tr>\\r\\n   <tr [pEditableRow]=\\\"rowData\\\">\\r\\n\\r\\n      <td>\\r\\n        <p-cellEditor>\\r\\n            <ng-template pTemplate=\\\"input\\\">\\r\\n                <input pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.consultatName\\\">\\r\\n            </ng-template>\\r\\n            <ng-template pTemplate=\\\"output\\\">\\r\\n                {{rowData.consultatName}}\\r\\n            </ng-template>\\r\\n        </p-cellEditor>\\r\\n     </td>\\r\\n     <td>\\r\\n      <p-cellEditor>\\r\\n          <ng-template pTemplate=\\\"input\\\">\\r\\n              <input pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.consultantEmail\\\">\\r\\n          </ng-template>\\r\\n          <ng-template pTemplate=\\\"output\\\">\\r\\n              {{rowData.consultantEmail}}\\r\\n          </ng-template>\\r\\n      </p-cellEditor>\\r\\n   </td>\\r\\n\\r\\n   <td>\\r\\n    <p-cellEditor>\\r\\n        <ng-template pTemplate=\\\"input\\\">\\r\\n            <input pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.consultantEmail\\\">\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"output\\\">\\r\\n            {{rowData.consultantEmail}}\\r\\n        </ng-template>\\r\\n    </p-cellEditor>\\r\\n </td>\\r\\n <td>\\r\\n  <p-cellEditor>\\r\\n      <ng-template pTemplate=\\\"input\\\">\\r\\n          <input pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.experience\\\">\\r\\n      </ng-template>\\r\\n      <ng-template pTemplate=\\\"output\\\">\\r\\n          {{rowData.experience}}\\r\\n      </ng-template>\\r\\n  </p-cellEditor>\\r\\n</td> -->\\r\\n\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n</p-table>\\r\\n<p-confirmDialog key=\\\"confirm-drop-database\\\" header=\\\"Confirmation\\\" acceptLabel=\\\"Yes\\\" rejectLabel=\\\"No\\\" [(visible)]=\\\"confirmDropDatabaseDialogVisible\\\"></p-confirmDialog>\\r\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserIndexComponent } from './user-index/user-index.component';\n\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserCreateComponent } from './user-create/user-create.component';\nimport { UserRestService } from './user-rest.service';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { TableModule } from 'primeng/table';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MultiSelectModule } from 'primeng/primeng';\nimport { ToastModule } from 'primeng/toast';\nimport { SliderModule } from 'primeng/slider';\nimport { FormsModule } from '@angular/forms';\nimport { ContextMenuModule } from 'primeng/contextmenu';\nimport { DialogModule } from 'primeng/dialog';\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { TabMenuModule } from 'primeng/tabmenu';\nimport { MenuItem } from 'primeng/api';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { FileUploadModule } from 'primeng/fileupload';\n\nimport { CalendarModule } from 'primeng/primeng';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport { DropdownModule } from 'primeng/dropdown';\nimport {InplaceModule} from 'primeng/inplace';\nimport { FieldPipe1 } from '../../field1.pipe';\nimport { ConfirmDialogModule} from 'primeng/confirmdialog';\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\n\n@NgModule({\n  declarations: [UserIndexComponent, UserListComponent,UserCreateComponent,FieldPipe1],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    ReactiveFormsModule, TableModule, MultiSelectModule, CalendarModule,\n    SliderModule,\n    DialogModule,\n    MultiSelectModule,\n    ContextMenuModule,\n    ButtonModule,\n    ToastModule,\n    InputTextModule,ConfirmDialogModule,  DynamicDialogModule,\n\n    ProgressBarModule, TabMenuModule, TooltipModule, FileUploadModule, NgxDropzoneModule, DropdownModule, FormsModule,InplaceModule\n  ],\n  providers: [\n    UserRestService\n  ]\n})\nexport class DocumentsModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbnN1bHRhbnREb2N1bWVudHMvdXNlci1jcmVhdGUvdXNlci1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserRestService } from '../user-rest.service';\nimport { FormGroup, FormControlName, Validators, FormControl } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nexport class Profile {\n  constructor(public prId:string, public prName:string) {\n  }\n}\n@Component({\n  selector: 'app-user-create',\n  templateUrl: './user-create.component.html',\n  providers: [MessageService],\n  styleUrls: ['./user-create.component.scss']\n})\nexport class UserCreateComponent implements OnInit {\n  allProfiles = [\n    new Profile('dev', 'AEM(Adobe Experience manger)'),\n    new Profile('man', 'Manager'),\n    new Profile('dir', 'Director')\n];\n  serverErrors = [];\n  registerForm: FormGroup\n  constructor(private route: ActivatedRoute,private messageService: MessageService, private userRest: UserRestService, private router: Router) { }\n\n  ngOnInit() {\n    this.registerForm = new FormGroup({\n      'consultatName': new FormControl(null, [Validators.required, Validators.minLength(2)]),\n      'consultantLastName': new FormControl(null, [Validators.required, Validators.minLength(2)]),\n      'consultantEmail': new FormControl(null, [Validators.required, Validators.email]),\n      'consultatMobileNumber': new FormControl(null, [Validators.required, Validators.minLength(10)]),\n      'technology': new FormControl(null, [Validators.required]),\n      'otherTechnologies': new FormControl(null, [Validators.required]),\n      'rate': new FormControl(null, [Validators.required]),\n      'visaType': new FormControl(null, [Validators.required]),\n      'city': new FormControl(null, [Validators.required]),\n      'state': new FormControl(null, [Validators.required]),\n      'willingLocation': new FormControl(null, [Validators.required]),\n      'documentsCollected': new FormControl(null, [Validators.required]),\n      'resource': new FormControl(null, [Validators.required]),\n      'ssn': new FormControl(null, [Validators.required]),\n      'bestContactNumber': new FormControl(null, [Validators.required]),\n      'linkedInUrl': new FormControl(null, [Validators.required]),\n      'skypeId': new FormControl(null, [Validators.required]),\n   //   'comments': new FormControl(null, [Validators.required]),\n   //   'note': new FormControl(null, [Validators.required]),\n      'reportStatus': new FormControl(null, [Validators.required]),\n      'experience': new FormControl(null, [Validators.required]),\n      'availability': new FormControl(null, [Validators.required]),\n      'priority': new FormControl(null, [Validators.required]),\n\n    })\n  }\n\n  get consultatName() { return this.registerForm.get('consultatName'); }\n  get consultantEmail() { return this.registerForm.get('consultantEmail'); }\n  get visaType() { return this.registerForm.get('visaType'); }\n  get consultantLastName() { return this.registerForm.get('consultantLastName'); }\n  get consultatMobileNumber() { return this.registerForm.get('consultatMobileNumber'); }\n  get technology() { return this.registerForm.get('technology'); }\n  get otherTechnologies() { return this.registerForm.get('otherTechnologies'); }\n  get rate() { return this.registerForm.get('rate'); }\n  get ravisaTypete() { return this.registerForm.get('visaType'); }\n  get city() { return this.registerForm.get('city'); }\n  get state() { return this.registerForm.get('state'); }\n  get willingLocation() { return this.registerForm.get('willingLocation'); }\n  get documentsCollected() { return this.registerForm.get('documentsCollected'); }\n  get resource() { return this.registerForm.get('resource'); }\n  get ssn() { return this.registerForm.get('ssn'); }\n  get bestContactNumber() { return this.registerForm.get('bestContactNumber'); }\n  get linkedInUrl() { return this.registerForm.get('linkedInUrl'); }\n  get skypeId() { return this.registerForm.get('skypeId'); }\n  get comments() { return this.registerForm.get('comments'); }\n  get note() { return this.registerForm.get('note'); }\n  get reportStatus() { return this.registerForm.get('reportStatus'); }\n  get experience() { return this.registerForm.get('experience'); }\n  get availability() { return this.registerForm.get('availability'); }\n  get priority() { return this.registerForm.get('priority'); }\n\n  registerUser(){\n     console.log(this.registerForm);\n      this.userRest.storeUser(this.registerForm).subscribe(\n        response => {\n          console.log(response),\n          this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Consultant is added' });\n          this.router.navigate(['consultants/list'])\n        },\n        error =>{\n          this.serverErrors = error.error.errors\n        }\n      );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbnN1bHRhbnREb2N1bWVudHMvdXNlci1pbmRleC91c2VyLWluZGV4LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SortEvent } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-user-index',\r\n  templateUrl: './user-index.component.html',\r\n  styleUrls: ['./user-index.component.scss']\r\n})\r\nexport class UserIndexComponent implements OnInit {\r\n  userList: Array<object> = [];\r\n  timeSheets: Array<object> = [];\r\n    statuses: any[];\r\n    loading: boolean = true;\r\n  constructor(private route: ActivatedRoute,  private router: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \":host ::ng-deep .p-cell-editing {\\n  padding-top: 0 !important;\\n  padding-bottom: 0 !important;\\n}\\n\\n.disable-td {\\n  pointer-events: none;\\n}\\n\\n.ui-button {\\n  margin-left: 0.1rem;\\n  margin-right: 0.1rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vY29uc3VsdGFudERvY3VtZW50cy91c2VyLWxpc3QvQzpcXHhhbXBwXFxodGRvY3NcXHNlcC1iYXJcXGFuZ3VsYXIvc3JjXFxhcHBcXGFkbWluXFxjb25zdWx0YW50RG9jdW1lbnRzXFx1c2VyLWxpc3RcXHVzZXItbGlzdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYWRtaW4vY29uc3VsdGFudERvY3VtZW50cy91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7RUFDQSw0QkFBQTtBQ0NGOztBRENBO0VBQ0Usb0JBQUE7QUNFRjs7QURBQTtFQUNFLG1CQUFBO0VBQ0Esb0JBQUE7QUNHRiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbnN1bHRhbnREb2N1bWVudHMvdXNlci1saXN0L3VzZXItbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IDo6bmctZGVlcCAucC1jZWxsLWVkaXRpbmcge1xyXG4gIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7XHJcbiAgcGFkZGluZy1ib3R0b206IDAgIWltcG9ydGFudDtcclxufVxyXG4uZGlzYWJsZS10ZHtcclxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxufVxyXG4udWktYnV0dG9uIHtcclxuICBtYXJnaW4tbGVmdDogMC4xMHJlbTtcclxuICBtYXJnaW4tcmlnaHQ6IDAuMTByZW07XHJcbn1cclxuIiwiOmhvc3QgOjpuZy1kZWVwIC5wLWNlbGwtZWRpdGluZyB7XG4gIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG5cbi5kaXNhYmxlLXRkIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5cbi51aS1idXR0b24ge1xuICBtYXJnaW4tbGVmdDogMC4xcmVtO1xuICBtYXJnaW4tcmlnaHQ6IDAuMXJlbTtcbn0iXX0= */\"","import { Component,  TemplateRef, OnInit, ViewChild, Output, EventEmitter,Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserRestService } from '../user-rest.service';\r\nimport { Representative } from '../../../customer';\r\nimport { Table } from 'primeng/table';\r\n\r\nimport { FormBuilder,FormGroup,FormControl } from '@angular/forms';\r\n\r\nimport { MessageService } from 'primeng/api';\r\n\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { Product } from '../../consultants/product';\r\n\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3',\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF',\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-user-list',\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [MessageService,ConfirmationService],\r\n\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  @ViewChild('dt', { static: true }) table: Table;\r\n  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\r\n  timeSheets: Array<object> = [];\r\n  representatives: Representative[];\r\n  confirmDropDatabaseDialogVisible = false;\r\nstatusOptions = [\r\n   // {label: \"Dot net Developer\",value: 'Dot net Developer'},\r\n    {label: \"Java Developer\",value: 'Java Developer'},\r\n    {label: \"QA Tester/QA Analyst\",value: 'QA Tester/QA Analyst'},\r\n  //  {label: \"Devops Engineer\",value: 'Devops Engineer'}\r\n];;\r\n  frozenCols: any[];\r\n  statuses: any[];\r\n  loading: boolean = true;\r\n  scrollableCols: any[];\r\n  clonedProducts: { [s: string]: any; } = {};\r\n  constructor( private confirmation: ConfirmationService,private fb: FormBuilder,private messageService: MessageService, private route: ActivatedRoute, private userRest: UserRestService,\r\n     private router: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.userRest.getConsultants().subscribe(\r\n      (response) => { console.log(this.timeSheets = response.timesheet); this.loading = false; },\r\n      (error) => { console.log(error) }\r\n    );\r\n    this.frozenCols = [\r\n      { field: 'consultatName', header: 'Name' },\r\n  ];\r\n  this.scrollableCols = [\r\n    { field: 'consultatName', header: 'Consultant Name', width: '20%',editable: true},\r\n   { field: 'user_details.name', header: 'Created By', width: '20%',editable: false},\r\n   // { field: 'created_at', header: 'Created At' , width: '20%',editable: false},\r\n    { field: 'consultantEmail', header: 'Email', width: '40%',editable: true },\r\n    { field: 'consultatMobileNumber', header: 'Phone number', width: '20%',editable: true },\r\n    { field: 'experience', header: 'Exp' , width: '20%',editable: true},\r\n   { field: 'rate', header: 'Rate', width: '20%' ,editable: false},\r\n    { field: 'technology', header: 'Technology', width: '20%',editable: false },\r\n    { field: 'visaType', header: 'visa Type', width: '20%',editable: false },\r\n    { field: 'city', header: 'City', width: '20%',editable: false },\r\n    { field: 'state', header: 'State', width: '20%',editable: false },\r\n    { field: 'willingLocation', header: 'Relocate', width: '20%',editable: false },\r\n    { field: 'documentsCollected', header: 'Documents Collected', width: '20%' ,editable: false},\r\n    { field: 'resource', header: 'Resource', width: '20%' ,editable: false},\r\n    { field: 'ssn', header: 'Last 4 SSN', width: '20%' ,editable: false},\r\n    { field: 'bestContactNumber', header: 'Best Contact Number', width: '20%',editable: false},\r\n    { field: 'linkedInUrl', header: 'LinkedIn', width: '20%' ,editable: false},\r\n    { field: 'skypeId', header: 'skypeId', width: '20%',editable: false },\r\n    { field: 'priority', header: 'priority', width: '20%' ,editable: false},\r\n    { field: 'reportStatus', header: 'Status', width: '20%',editable: false }\r\n];\r\n\r\n    this.representatives = [\r\n      {name: \"Dot net Developer\"},\r\n      {name: \"Java Developer\"},\r\n      {name: \"QA Tester/QA Analyst\"},\r\n      {name: \"Devops Engineer\"}\r\n\r\n  ];\r\n\r\n\r\n  this.statuses = [\r\n      {label: 'Unqualified', value: 'unqualified'},\r\n      {label: 'Qualified', value: 'qualified'},\r\n      {label: 'New', value: 'new'},\r\n      {label: 'Negotiation', value: 'negotiation'},\r\n      {label: 'Renewal', value: 'renewal'},\r\n      {label: 'Proposal', value: 'proposal'}\r\n  ]\r\n  }\r\n  onActivityChange(event) {\r\n    const value = event.target.value;\r\n    if (value && value.trim().length) {\r\n        const activity = parseInt(value);\r\n\r\n        if (!isNaN(activity)) {\r\n            this.table.filter(activity, 'activity', 'gte');\r\n        }\r\n    }\r\n}\r\nonRowEditInit(product: any) {\r\nconsole.log(product)\r\n  this.clonedProducts[product.reportId] = { ...product };\r\n}\r\nonRowEditSave(product: any, index: number) {\r\n  //alert(product.timeSheetId)\r\n  /*this.loading = true;\r\n  if (product.duration < 16) {\r\n    let updateUser: FormGroup;\r\n    updateUser = new FormGroup({\r\n      'duration': new FormControl(product.duration),\r\n      'fromDate': new FormControl(product.fromDate),\r\n      'assignment': new FormControl(product.assignment),\r\n      'serviceCode': new FormControl(product.serviceCode),\r\n    });\r\n    this.userRest.updateTimeSheet(updateUser, product.timeSheetId).subscribe(\r\n      (response) => {\r\n        this.loading = false;\r\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Timesheet is updated' });\r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n        this.loading = false;\r\n        this.timeSheets[index] = this.clonedProducts[product.timeSheetId];\r\n        delete this.timeSheets[product.timeSheetId];\r\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: error.error.message });\r\n      },\r\n      () => console.log('completed')\r\n    );\r\n\r\n  }\r\n  else {\r\n    this.loading = false;\r\n    this.timeSheets[index] = this.clonedProducts[product.timeSheetId];\r\n    delete this.timeSheets[product.timeSheetId];\r\n    this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Invalid Duration only 15 hours accepted' });\r\n  } */\r\n}\r\n\r\nonRowEditCancel(product: any, index: number) {\r\n  this.timeSheets[index] = this.clonedProducts[product.reportId];\r\n  delete this.timeSheets[product.reportId];\r\n}\r\n\r\nonRowSelected(evt: any){\r\n\r\n  console.log(\"Content of the selected row...\", evt.data ) ;\r\n}\r\n\r\n\r\nonDateSelect(value) {\r\n    this.table.filter(this.formatDate(value), 'created_at', 'equals')\r\n}\r\n\r\nformatDate(date) {\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n\r\n    if (month < 10) {\r\n        month = '0' + month;\r\n    }\r\n\r\n    if (day < 10) {\r\n        day = '0' + day;\r\n    }\r\n\r\n    return date.getFullYear() + '-' + month + '-' + day;\r\n}\r\n\r\nonRepresentativeChange(event) {\r\n  if(event.value)\r\n  {\r\n    console.log(event.value)\r\n    this.table.filter(event.value, 'technology', 'in')\r\n  }\r\n\r\n}\r\n\r\ndropDatabase(event: Event,index:number) {\r\n  if (event.defaultPrevented) return;\r\n  event.preventDefault();\r\n\r\n  this.confirmation.confirm({\r\n    key: 'confirm-drop-database',\r\n    message: 'Are you sure to Aprove for Hotlist',\r\n    accept: () => { this._dropDatabase(index); },\r\n  });\r\n}\r\n\r\nprivate _dropDatabase(index) {\r\n\r\n  this.userRest.statusChangeConsultant(index).subscribe(\r\n    (response) => { console.log(response); this.loading = false;\r\n    alert(\"Aproved\")\r\n    },\r\n    (error) => { console.log(error) }\r\n  );\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRestService {\n  users: Array<{id: number, name: string, email: string}> = [];\n  constructor(private http: HttpClient) { }\n\n  getTimeSheet(): Observable<any> {\n    return this.http.get('http://localhost:8000/api/getAllTimesheets');\n  }\n  getConsultants(): Observable<any> {\n    return this.http.get('http://localhost:8000/api/getAllConsultants/');\n  }\n  storeUser(form): Observable<any> {\n    return this.http.post('http://localhost:8000/api/store-consultant',form.value);\n  }\n statusChangeConsultant(index): Observable<any> {\n  var body = 'index='+index;\n    return this.http.post('http://localhost:8000/api/status-consultant',JSON.stringify({\n      cmd: \"sa\",\n      data: \"sd\"}));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserIndexComponent } from './user-index/user-index.component';\n\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserCreateComponent } from './user-create/user-create.component';\nconst routes: Routes = [\n // { path: 'list', component: UserListComponent, outlet: 'users' },\n  {\n    path: '',\n    component: UserIndexComponent,\n    children: [\n\n      {path: 'list', component: UserListComponent,data: {\n        expectedRole: 'Admin'\n      }},\n      {path: 'inactivelist', component: UserListComponent,data: {\n        expectedRole: 'Admin'\n      }},\n      {path: 'create', component: UserCreateComponent,data: {\n        expectedRole: 'Admin'\n      }}\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DatePipe, CurrencyPipe, DecimalPipe } from \"@angular/common\";\r\n@Pipe({\r\n  name: \"field\"\r\n})\r\nexport class FieldPipe1 implements PipeTransform {\r\n  /**\r\n   *\r\n   */\r\n  constructor() {}\r\n  transform(value: any, ...args: any[]): any {\r\n    const column: any = args[0];\r\n    let result = value;\r\n    // addressModel.City.Name\r\n    column.field.split(\".\").forEach(f => (result = result[f]));\r\n    return result?result:'-';\r\n  }\r\n}\r\n"],"sourceRoot":""}