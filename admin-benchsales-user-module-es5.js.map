{"version":3,"sources":["webpack:///./src/app/admin/benchsales/contacts/user-list/user-list.component.html","webpack:///./src/app/admin/benchsales/documents/user-list/user-list.component.html","webpack:///./src/app/admin/benchsales/hotlist/user-list/user-list.component.html","webpack:///./src/app/admin/benchsales/interviews/user-list/user-list.component.html","webpack:///./src/app/admin/benchsales/user-create/user-create.component.html","webpack:///./src/app/admin/benchsales/user-edit/user-create.component.html","webpack:///./src/app/admin/benchsales/user-index/user-index.component.html","webpack:///./src/app/admin/benchsales/user-list/user-list.component.html","webpack:///./src/app/admin/benchsales/contacts/user-list/user-list.component.scss","webpack:///./src/app/admin/benchsales/contacts/user-list/user-list.component.ts","webpack:///./src/app/admin/benchsales/contacts/user-rest.service.ts","webpack:///./src/app/admin/benchsales/documents/user-list/user-list.component.scss","webpack:///./src/app/admin/benchsales/documents/user-list/user-list.component.ts","webpack:///./src/app/admin/benchsales/documents/user-rest.service.ts","webpack:///./src/app/admin/benchsales/hotlist/user-list/user-list.component.scss","webpack:///./src/app/admin/benchsales/hotlist/user-list/user-list.component.ts","webpack:///./src/app/admin/benchsales/hotlist/user-rest.service.ts","webpack:///./src/app/admin/benchsales/interviews/user-list/user-list.component.scss","webpack:///./src/app/admin/benchsales/interviews/user-list/user-list.component.ts","webpack:///./src/app/admin/benchsales/interviews/user-rest.service.ts","webpack:///./src/app/admin/benchsales/user-create/user-create.component.scss","webpack:///./src/app/admin/benchsales/user-create/user-create.component.ts","webpack:///./src/app/admin/benchsales/user-edit/user-create.component.scss","webpack:///./src/app/admin/benchsales/user-edit/user-edit.component.ts","webpack:///./src/app/admin/benchsales/user-index/user-index.component.scss","webpack:///./src/app/admin/benchsales/user-index/user-index.component.ts","webpack:///./src/app/admin/benchsales/user-list/user-list.component.scss","webpack:///./src/app/admin/benchsales/user-list/user-list.component.ts","webpack:///./src/app/admin/benchsales/user-rest.service.ts","webpack:///./src/app/admin/benchsales/user-routing.module.ts","webpack:///./src/app/admin/benchsales/user.module.ts","webpack:///./src/app/field1.pipe.ts"],"names":[],"mappings":";;;;;;;;;AAAA,63BAA63B,mBAAmB,oRAAoR,mBAAmB,iBAAiB,YAAY,qOAAqO,oBAAoB,uE;;;;;;;;;;;ACA78C,8rCAA8rC,mBAAmB,iBAAiB,YAAY,klLAAklL,kBAAkB,yIAAyI,gBAAgB,aAAa,8JAA8J,kBAAkB,2IAA2I,gBAAgB,aAAa,2JAA2J,kBAAkB,uIAAuI,gBAAgB,aAAa,qjBAAqjB,2BAA2B,qEAAqE,mBAAmB,gBAAgB,2BAA2B,mEAAmE,kBAAkB,6EAA6E,kBAAkB,gBAAgB,kBAAkB,+DAA+D,oBAAoB,uDAAuD,iBAAiB,gBAAgB,oBAAoB,iSAAiS,gBAAgB,aAAa,8QAA8Q,gBAAgB,aAAa,uEAAuE,iBAAiB,mCAAmC,mIAAmI,gBAAgB,qLAAqL,uBAAuB,kMAAkM,2BAA2B,oJAAoJ,4BAA4B,2CAA2C,wBAAwB,2CAA2C,6BAA6B,oHAAoH,mBAAmB,+XAA+X,mBAAmB,+YAA+Y,cAAc,o2CAAo2C,MAAM,mgBAAmgB,cAAc,0FAA0F,MAAM,0YAA0Y,cAAc,iaAAia,cAAc,yxBAAyxB,0BAA0B,gCAAgC,0BAA0B,yBAAyB,mBAAmB,yBAAyB,sBAAsB,yBAAyB,uBAAuB,yBAAyB,qBAAqB,yGAAyG,aAAa,iN;;;;;;;;;;;ACAxte,82BAA82B,mBAAmB,oRAAoR,mBAAmB,iBAAiB,YAAY,qhDAAqhD,oBAAoB,4G;;;;;;;;;;;ACA9uF,k/BAAk/B,mBAAmB,iBAAiB,YAAY,klEAAklE,sEAAsE,mBAAmB,8BAA8B,GAAG,kBAAkB,gBAAgB,mCAAmC,GAAG,wCAAwC,eAAe,2BAA2B,MAAM,2BAA2B,0EAA0E,mBAAmB,oQ;;;;;;;;;;;ACAtgH,gtBAAgtB,eAAe,otBAAotB,sBAAsB,gPAAgP,OAAO,iQAAiQ,QAAQ,4OAA4O,SAAS,iRAAiR,aAAa,oXAAoX,eAAe,yqBAAyqB,eAAe,qmBAAqmB,+BAA+B,2YAA2Y,QAAQ,sRAAsR,SAAS,+XAA+X,eAAe,whBAAwhB,yBAAyB,w3BAAw3B,kCAAkC,80CAA80C,+BAA+B,24CAA24C,6BAA6B,s9CAAs9C,gCAAgC,4fAA4f,cAAc,+hCAA+hC,mCAAmC,wjCAAwjC,cAAc,yxBAAyxB,kCAAkC,82BAA82B,6BAA6B,knBAAknB,8BAA8B,uyBAAuyB,cAAc,ytBAAytB,2BAA2B,mxBAAmxB,YAAY,kMAAkM,mBAAmB,6GAA6G,cAAc,6C;;;;;;;;;;;ACAjjlB,suCAAsuC,yBAAyB,itBAAitB,8BAA8B,gRAAgR,eAAe,+iBAA+iB,8BAA8B,k1CAAk1C,4BAA4B,yXAAyX,eAAe,yrBAAyrB,4BAA4B,g0BAAg0B,0BAA0B,ytB;;;;;;;;;;;ACA/nM,wI;;;;;;;;;;;ACAA,wiBAAwiB,cAAc,4DAA4D,4CAA4C,+IAA+I,cAAc,koBAAkoB,mBAAmB,iBAAiB,YAAY,mqIAAmqI,sEAAsE,yZAAyZ,yBAAyB,2CAA2C,kCAAkC,GAAG,uCAAuC,yEAAyE,mBAAmB,4VAA4V,cAAc,wFAAwF,UAAU,2yFAA2yF,cAAc,0FAA0F,SAAS,0S;;;;;;;;;;;ACAnsT,mDAAmD,8BAA8B,iCAAiC,GAAG,iBAAiB,yBAAyB,GAAG,6CAA6C,29B;;;;;;;;;;;;;;;;;;;;;;ACAxG;AAC9C;AACF;AAEY;AACtB;AACK;AAUlD;IAME,8BAAqB,YAAiC,EAAS,EAAe,EAAS,cAA8B,EAAU,KAAqB,EAAU,QAAyB,EAC7K,MAAc;QADH,iBAAY,GAAZ,YAAY,CAAqB;QAAS,OAAE,GAAF,EAAE,CAAa;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAC7K,WAAM,GAAN,MAAM,CAAQ;QAIxB,YAAO,GAAY,IAAI,CAAC;IAJI,CAAC;IAO7B,uCAAQ,GAAR;QAAA,iBAmBC;QAlBC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,SAAS,CACzC,UAAC,QAAQ,IAAO,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAI,CAAC,OAAO,GAAC,KAAK,CAAC,CAAE,CAAC,EACtF,UAAC,KAAK,IAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC,CAClC,CAAC;QAGA,IAAI,CAAC,IAAI,GAAG;YAER,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE;YACxC,EAAE,KAAK,EAAE,eAAe,EAAE,MAAM,EAAE,eAAe,EAAE;YACtD,gEAAgE;YAC/D,kDAAkD;YAChD,EAAE,KAAK,EAAE,cAAc,EAAE,MAAM,EAAE,OAAO,EAAE;SAG7C,CAAC;QAEF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAG,IAAI,QAAC,EAAC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAC,KAAK,EAAC,CAAC,EAAzC,CAAyC,CAAC,CAAC;IACzF,CAAC;IAjCU,oBAAoB;QARhC,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,mDAAmD;YACnD,SAAS,EAAE,CAAC,0DAAc,EAAC,+DAAmB,CAAC;YAE/C,uLAAyC;;SAE1C,CAAC;+EAOmC,+DAAmB,EAAa,0DAAW,EAAyB,0DAAc,EAAiB,8DAAc,EAAoB,kEAAe;YACrK,sDAAM;OAPb,oBAAoB,CA0DhC;IAAD,2BAAC;CAAA;AA1DgC;;;;;;;;;;;;;;;;;;;;AChBU;AACO;AAEe;AAIjE;IAEE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,UAAK,GAAqD,EAAE,CAAC;IACrB,CAAC;IAGzC,wCAAc,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,4BAAyB,CAAC,CAAC;IACpE,CAAC;IACD,2CAAiB,GAAjB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,eAAY,CAAC,CAAC;IACvD,CAAC;IACF,gDAAsB,GAAtB,UAAuB,KAAK;QAC3B,IAAI,IAAI,GAAG,QAAQ,GAAC,KAAK,CAAC;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,GAAG,uBAAoB,EAAC,IAAI,CAAC,SAAS,CAAC;YAC1E,GAAG,EAAE,IAAI;YACT,IAAI,EAAE,IAAI;SAAC,CAAC,CAAC,CAAC;IAClB,CAAC;IAhBU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,eAAe,CAiB3B;IAAD,sBAAC;CAAA;AAjB2B;;;;;;;;;;;;ACP5B,mDAAmD,8BAA8B,iCAAiC,GAAG,iBAAiB,yBAAyB,GAAG,gBAAgB,wBAAwB,yBAAyB,GAAG,iBAAiB,sBAAsB,wBAAwB,GAAG,6CAA6C,m7C;;;;;;;;;;;;;;;;;;;;;;;;ACA9O;AAC9C;AACF;AACjB;AAC+B;AAExB;AAEK;AAIlD,IAAM,MAAM,GAAQ;IAClB,GAAG,EAAE;QACH,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;IACD,IAAI,EAAE;QACJ,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;IACD,MAAM,EAAE;QACN,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;CACF,CAAC;AASF;IAyBE,oCAAoB,YAAiC,EAAU,EAAe,EAAU,cAA8B,EAAU,KAAqB,EAAU,QAAyB,EAC9K,MAAc;QADJ,iBAAY,GAAZ,YAAY,CAAqB;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAC9K,WAAM,GAAN,MAAM,CAAQ;QAvBxB,eAAU,GAAkB,EAAE,CAAC;QAO/B,qCAAgC,GAAG,KAAK,CAAC;QACzC,kBAAa,GAAG;YACd,2DAA2D;YAC3D,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,gBAAgB,EAAE;YACpD,EAAE,KAAK,EAAE,sBAAsB,EAAE,KAAK,EAAE,sBAAsB,EAAE;SAEjE,CAAC;QAGF,YAAO,GAAY,IAAI,CAAC;QAExB,mBAAc,GAA0B,EAAE,CAAC;QAGpC,SAAI,GAAG,EAAE,CAAC;IAEW,CAAC;IAV3B,CAAC;IAWH,oDAAe,GAAf,UAAgB,IAAS,EAAE,QAAa,EAAE,MAAW;QACnD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IACD,qDAAgB,GAAhB,UAAiB,KAAU;QACzB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;IACD,0DAAqB,GAArB,UAAsB,QAAa;QAAnC,iBAQC;QAPC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC5C,UAAC,QAAQ,IAAO,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,EACtF,UAAC,KAAK,IAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC,CAClC,CAAC;QAEF,mCAAmC;IACrC,CAAC;IACD,kDAAa,GAAb,UAAc,QAAQ;QACpB,IAAI,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAC7B,QAAQ,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE9B,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,WAAW,EAAE,EAAE,WAAW,CAAC,QAAQ,EAAE,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,QAAQ,CAAC,QAAQ,EAAE,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IAC9M,CAAC;IACD,iDAAY,GAAZ,UAAa,KAAK;QAAlB,iBAaC;QAZC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC1D,UAAC,QAAQ;YACP,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAAC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YAC5C,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAC;QAC9B,CAAC,EACD,UAAC,KAAK,IAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC,CAClC,CAAC;QACF,OAAO,KAAK,CAAC;IACf,CAAC;IACD,6CAAQ,GAAR;QAAA,iBA2CC;QAzCC,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,SAAS,CACtC,UAAC,QAAQ,IAAO,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,EAC1F,UAAC,KAAK,IAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC,CAClC,CAAC;QACF,IAAI,CAAC,UAAU,GAAG;YAChB,EAAE,KAAK,EAAE,eAAe,EAAE,MAAM,EAAE,MAAM,EAAE;SAC3C,CAAC;QAEF,IAAI,CAAC,cAAc,GAAG;YACpB,qFAAqF;YACrF,qFAAqF;YACrF,+EAA+E;YAC/E,EAAE,KAAK,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;YAC3E,EAAE,KAAK,EAAE,uBAAuB,EAAE,MAAM,EAAE,cAAc,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;YACxF,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;YACpE,EAAE,KAAK,EAAE,cAAc,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YAC1E,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YAClE,EAAE,KAAK,EAAE,iBAAiB,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YAC/E,EAAE,KAAK,EAAE,oBAAoB,EAAE,MAAM,EAAE,qBAAqB,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YAC7F,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YACxE,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YACvE,iGAAiG;YAC/F,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YAC3E,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YACtE,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YAChE,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YAC5E,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YACzE,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YAChE,4EAA4E;SAE7E,CAAC;QAGF,IAAI,CAAC,QAAQ,GAAG;YACd,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,aAAa,EAAE;YAC9C,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE;YAC1C,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;YAC9B,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,aAAa,EAAE;YAC9C,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;YACtC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;SACzC;IACH,CAAC;IACD,qDAAgB,GAAhB,UAAiB,KAAK;QACpB,IAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACjC,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE;YAChC,IAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;YAEjC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;gBACpB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;aAChD;SACF;IACH,CAAC;IACD,iDAAY,GAAZ,UAAa,EAAE;QACb,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,kBAAkB;IAChC,CAAC;IACD,kDAAa,GAAb,UAAc,OAAY;QACxB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,mDAAK,OAAO,CAAE,CAAC;IACzD,CAAC;IACD,kDAAa,GAAb,UAAc,OAAY,EAAE,KAAa;QACvC,4BAA4B;QAC5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YA8BI;IACN,CAAC;IAED,oDAAe,GAAf,UAAgB,OAAY,EAAE,KAAa;QACzC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC/D,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAED,kDAAa,GAAb,UAAc,GAAQ;QAEpB,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1D,CAAC;IAGD,iDAAY,GAAZ,UAAa,KAAK;QAChB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,YAAY,EAAE,QAAQ,CAAC;IACnE,CAAC;IAED,+CAAU,GAAV,UAAW,IAAI;QACb,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAChC,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAEzB,IAAI,KAAK,GAAG,EAAE,EAAE;YACd,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC;SACrB;QAED,IAAI,GAAG,GAAG,EAAE,EAAE;YACZ,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SACjB;QAED,OAAO,IAAI,CAAC,WAAW,EAAE,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;IACtD,CAAC;IAED,2DAAsB,GAAtB,UAAuB,KAAK;QAC1B,IAAI,KAAK,CAAC,KAAK,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC;SACnD;IAEH,CAAC;IAED,iDAAY,GAAZ,UAAa,KAAY,EAAE,KAAa;QAAxC,iBASC;QARC,IAAI,KAAK,CAAC,gBAAgB;YAAE,OAAO;QACnC,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;YACxB,GAAG,EAAE,uBAAuB;YAC5B,OAAO,EAAE,oCAAoC;YAC7C,MAAM,EAAE,cAAQ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SAC7C,CAAC,CAAC;IACL,CAAC;IAEO,kDAAa,GAArB,UAAsB,KAAK;QAA3B,iBASC;QAPC,IAAI,CAAC,QAAQ,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,SAAS,CACnD,UAAC,QAAQ;YACP,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAAC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YAC5C,KAAK,CAAC,SAAS,CAAC;QAClB,CAAC,EACD,UAAC,KAAK,IAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC,CAClC,CAAC;IACJ,CAAC;IA5NkC;QAAlC,+DAAS,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAQ,mDAAK;6DAAC;IACH;QAA5C,+DAAS,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAe,yDAAW;oEAAM;IAFjE,0BAA0B;QARtC,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,mDAAmD;YACnD,SAAS,EAAE,CAAC,0DAAc,EAAE,+DAAmB,CAAC;YAEhD,wLAAyC;;SAE1C,CAAC;+EA0BkC,+DAAmB,EAAc,0DAAW,EAA0B,0DAAc,EAAiB,8DAAc,EAAoB,kEAAe;YACtK,sDAAM;OA1Bb,0BAA0B,CA8NtC;IAAD,iCAAC;CAAA;AA9NsC;;;;;;;;;;;;;;;;;;;;AClCI;AACO;AAEe;AAIjE;IAEE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,UAAK,GAAqD,EAAE,CAAC;IACrB,CAAC;IACzC,sCAAY,GAAZ,UAAa,EAAE;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,kBAAe,GAAE,EAAE,CAAC,CAAC;IAC9D,CAAC;IACD,oDAA0B,GAA1B,UAA2B,KAAK;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,GAAG,gCAA6B,EAAC,KAAK,CAAC,CAAC;IAC/E,CAAC;IAEH,wCAAc,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,wBAAqB,CAAC,CAAC;IAChE,CAAC;IACD,mCAAS,GAAT,UAAU,IAAI;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,GAAG,sBAAmB,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1E,CAAC;IACF,gDAAsB,GAAtB,UAAuB,KAAK;QAC3B,IAAI,IAAI,GAAG,QAAQ,GAAC,KAAK,CAAC;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,GAAG,uBAAoB,EAAC,IAAI,CAAC,SAAS,CAAC;YAC1E,GAAG,EAAE,IAAI;YACT,IAAI,EAAE,IAAI;SAAC,CAAC,CAAC,CAAC;IAClB,CAAC;IArBU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,eAAe,CAsB3B;IAAD,sBAAC;CAAA;AAtB2B;;;;;;;;;;;;ACP5B,mDAAmD,8BAA8B,iCAAiC,GAAG,iBAAiB,yBAAyB,GAAG,6CAA6C,u9B;;;;;;;;;;;;;;;;;;;;;;ACAxG;AAC9C;AACF;AAGY;AAEtB;AAEK;AAIlD,IAAM,MAAM,GAAQ;IAClB,GAAG,EAAE;QACH,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;IACD,IAAI,EAAE;QACJ,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;IACD,MAAM,EAAE;QACN,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;CACF,CAAC;AASF;IAME,+BAAqB,YAAiC,EAAS,EAAe,EAAS,cAA8B,EAAU,KAAqB,EAAU,QAAyB,EAC7K,MAAc;QADH,iBAAY,GAAZ,YAAY,CAAqB;QAAS,OAAE,GAAF,EAAE,CAAa;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAC7K,WAAM,GAAN,MAAM,CAAQ;QAFxB,YAAO,GAAY,IAAI,CAAC;IAEI,CAAC;IAM7B,wCAAQ,GAAR;QAAA,iBAqBC;QApBC,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,SAAS,CACtC,UAAC,QAAQ,IAAO,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,KAAI,CAAC,OAAO,GAAC,KAAK,CAAC,CAAC,CAAC,EACtF,UAAC,KAAK,IAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC,CAClC,CAAC;QAGA,IAAI,CAAC,IAAI,GAAG;YAER,EAAE,KAAK,EAAE,eAAe,EAAE,MAAM,EAAE,MAAM,EAAE;YAC1C,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,YAAY,EAAE;YAChD,gEAAgE;YAC/D,kDAAkD;YAChD,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,YAAY,EAAE;YAC7C,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE;YACnC,EAAE,KAAK,EAAE,iBAAiB,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAC,QAAQ,EAAE,KAAK,EAAE;YAC9E,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,EAAC,QAAQ,EAAE,KAAK,EAAE;SAE3E,CAAC;QAEF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAG,IAAI,QAAC,EAAC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAC,KAAK,EAAC,CAAC,EAAzC,CAAyC,CAAC,CAAC;IACzF,CAAC;IAlCU,qBAAqB;QARjC,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,mDAAmD;YACnD,SAAS,EAAE,CAAC,0DAAc,EAAC,+DAAmB,CAAC;YAE/C,sLAAyC;;SAE1C,CAAC;+EAOmC,+DAAmB,EAAa,0DAAW,EAAyB,0DAAc,EAAiB,8DAAc,EAAoB,kEAAe;YACrK,sDAAM;OAPb,qBAAqB,CA2DjC;IAAD,4BAAC;CAAA;AA3DiC;;;;;;;;;;;;;;;;;;;;ACnCS;AACO;AAEe;AAIjE;IAEE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,UAAK,GAAqD,EAAE,CAAC;IACrB,CAAC;IAGzC,wCAAc,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,4BAAyB,CAAC,CAAC;IACpE,CAAC;IAEF,gDAAsB,GAAtB,UAAuB,KAAK;QAC3B,IAAI,IAAI,GAAG,QAAQ,GAAC,KAAK,CAAC;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,GAAG,uBAAoB,EAAC,IAAI,CAAC,SAAS,CAAC;YAC1E,GAAG,EAAE,IAAI;YACT,IAAI,EAAE,IAAI;SAAC,CAAC,CAAC,CAAC;IAClB,CAAC;IAdU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,eAAe,CAe3B;IAAD,sBAAC;CAAA;AAf2B;;;;;;;;;;;;ACP5B,mDAAmD,8BAA8B,iCAAiC,GAAG,iBAAiB,yBAAyB,GAAG,gBAAgB,yBAAyB,0BAA0B,GAAG,6CAA6C,mtC;;;;;;;;;;;;;;;;;;;;;;;;ACA9K;AAC9C;AACF;AACjB;AAC6B;AACtB;AACK;AAElD,IAAM,MAAM,GAAQ;IAClB,GAAG,EAAE;QACH,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;IACD,IAAI,EAAE;QACJ,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;IACD,MAAM,EAAE;QACN,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;CACF,CAAC;AASF;IAgBE,iCAAqB,YAAiC,EAAS,EAAe,EAAS,cAA8B,EAAU,KAAqB,EAAU,QAAyB,EAC5K,MAAc;QADJ,iBAAY,GAAZ,YAAY,CAAqB;QAAS,OAAE,GAAF,EAAE,CAAa;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAC5K,WAAM,GAAN,MAAM,CAAQ;QAdzB,eAAU,GAAkB,EAAE,CAAC;QAC/B,qCAAgC,GAAG,KAAK,CAAC;QAC3C,kBAAa,GAAG;YACb,2DAA2D;YAC1D,EAAC,KAAK,EAAE,gBAAgB,EAAC,KAAK,EAAE,gBAAgB,EAAC;YACjD,EAAC,KAAK,EAAE,sBAAsB,EAAC,KAAK,EAAE,sBAAsB,EAAC;SAEhE,CAAC;QAGA,YAAO,GAAY,IAAI,CAAC;QAExB,mBAAc,GAA0B,EAAE,CAAC;IAEd,CAAC;IAP9B,CAAC;IASD,0CAAQ,GAAR;QAAA,iBAoCC;QAhCC,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,SAAS,CACtC,UAAC,QAAQ,IAAO,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,EAC5F,UAAC,KAAK,IAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC,CAClC,CAAC;QACF,IAAI,CAAC,UAAU,GAAG;YAChB,EAAE,KAAK,EAAE,eAAe,EAAE,MAAM,EAAE,MAAM,EAAE;SAC7C,CAAC;QACF,IAAI,CAAC,cAAc,GAAG;YACrB,qFAAqF;YACrF,iGAAiG;YACjG,kFAAkF;YAClF,EAAE,KAAK,EAAE,mBAAmB,EAAE,MAAM,EAAE,cAAc,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YACrF,EAAE,KAAK,EAAE,eAAe,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YAC/E,EAAE,KAAK,EAAE,uBAAuB,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YACvF,EAAE,KAAK,EAAE,mBAAmB,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YACnF,EAAE,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE,gBAAgB,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;YACnF,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;YAC5E,EAAE,KAAK,EAAE,cAAc,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;SAG3E,CAAC;QAIA,IAAI,CAAC,QAAQ,GAAG;YACZ,EAAC,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,aAAa,EAAC;YAC5C,EAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAC;YACxC,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAC;YAC5B,EAAC,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,aAAa,EAAC;YAC5C,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAC;YACpC,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAC;SACzC;IACD,CAAC;IACD,kDAAgB,GAAhB,UAAiB,KAAK;QACpB,IAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACjC,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE;YAC9B,IAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;YAEjC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;gBAClB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;aAClD;SACJ;IACL,CAAC;IACD,+CAAa,GAAb,UAAc,OAAY;QAC1B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QAClB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,mDAAK,OAAO,CAAE,CAAC;IACzD,CAAC;IACD,+CAAa,GAAb,UAAc,OAAY,EAAE,KAAa;QACvC,4BAA4B;QAC5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YA8BI;IACN,CAAC;IAED,iDAAe,GAAf,UAAgB,OAAY,EAAE,KAAa;QACzC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC/D,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAKD,8CAAY,GAAZ,UAAa,KAAK;QACd,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,YAAY,EAAE,QAAQ,CAAC;IACrE,CAAC;IAED,4CAAU,GAAV,UAAW,IAAI;QACX,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAChC,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAEzB,IAAI,KAAK,GAAG,EAAE,EAAE;YACZ,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC;SACvB;QAED,IAAI,GAAG,GAAG,EAAE,EAAE;YACV,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SACnB;QAED,OAAO,IAAI,CAAC,WAAW,EAAE,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;IACxD,CAAC;IAED,wDAAsB,GAAtB,UAAuB,KAAK;QAC1B,IAAG,KAAK,CAAC,KAAK,EACd;YACE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC;SACnD;IAEH,CAAC;IAED,8CAAY,GAAZ,UAAa,KAAY,EAAC,KAAY;QAAtC,iBASC;QARC,IAAI,KAAK,CAAC,gBAAgB;YAAE,OAAO;QACnC,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;YACxB,GAAG,EAAE,uBAAuB;YAC5B,OAAO,EAAE,oCAAoC;YAC7C,MAAM,EAAE,cAAQ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SAC7C,CAAC,CAAC;IACL,CAAC;IAEO,+CAAa,GAArB,UAAsB,KAAK;QAA3B,iBAWC;QAVC,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAC,KAAK,CAAE,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC,SAAS,CACtD,UAAC,QAAQ;YAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAAC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YAC1D,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,SAAS,CAAC;QACvC,CAAC,EACD,UAAC,KAAK,IAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC,CAClC,CAAC;IAEJ,CAAC;IACD,0CAAQ,GAAR,UAAS,KAAY,EAAC,GAAO;QAG7B,MAAM,CAAC,IAAI,CAAC,+CAA+C,GAAC,GAAG,CAAC,CAAC;IAEjE,CAAC;IAED,0CAAQ,GAAR,UAAU,MAAa,EAAC,WAAkB;QAExC,IAAG,WAAW,IAAE,GAAG,EACnB;YACE,OAAO,SAAS;SACjB;aAAK,IAAG,MAAM,IAAE,gBAAgB,EACjC;YACE,OAAO,SAAS;SACjB;IACH,CAAC;IAnLoC;QAAlC,+DAAS,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAQ,mDAAK;0DAAC;IACH;QAA5C,+DAAS,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAe,yDAAW;iEAAM;IAFjE,uBAAuB;QARnC,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,mDAAmD;YACnD,SAAS,EAAE,CAAC,0DAAc,EAAC,+DAAmB,CAAC;YAE/C,yLAAyC;;SAE1C,CAAC;+EAiBmC,+DAAmB,EAAa,0DAAW,EAAyB,0DAAc,EAAiB,8DAAc,EAAoB,kEAAe;YACpK,sDAAM;OAjBd,uBAAuB,CAqLnC;IAAD,8BAAC;CAAA;AArLmC;;;;;;;;;;;;;;;;;;;;AC9BO;AACO;AAEe;AAIjE;IAEE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,UAAK,GAAqD,EAAE,CAAC;IACrB,CAAC;IAGzC,wCAAc,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,2BAAwB,CAAC,CAAC;IACnE,CAAC;IACD,mCAAS,GAAT,UAAU,IAAI;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,GAAG,iBAAc,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrE,CAAC;IACF,gDAAsB,GAAtB,UAAuB,KAAK;QAEzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,GAAG,uBAAoB,EAAC,KAAK,CAAC,CAAC;IACtE,CAAC;IACD,4CAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,yBAAsB,CAAC,CAAC;IACjE,CAAC;IACD,kCAAQ,GAAR,UAAS,EAAE;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,WAAQ,GAAG,EAAE,CAAC,CAAC;IACxD,CAAC;IACD,oCAAU,GAAV,UAAW,EAAE;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,eAAY,GAAG,EAAE,CAAC,CAAC;IAC5D,CAAC;IACD,wCAAc,GAAd,UAAe,EAAE;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,uBAAoB,GAAG,EAAE,CAAC,CAAC;IACpE,CAAC;IACD,oCAAU,GAAV,UAAW,IAAI,EAAC,EAAE;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,WAAQ,GAAG,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACpE,CAAC;IACD,uCAAa,GAAb,UAAc,QAAQ;QAEpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,GAAG,kBAAe,EAAE,QAAQ,CAAC,CAAC;IACrE,CAAC;IACD,2CAAiB,GAAjB,UAAkB,KAAK;QAErB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,GAAG,qBAAkB,EAAC,KAAK,CAAC,CAAC;IACpE,CAAC;IArCU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,eAAe,CAuC3B;IAAD,sBAAC;CAAA;AAvC2B;;;;;;;;;;;;ACP5B,+BAA+B,sBAAsB,GAAG,6CAA6C,mnB;;;;;;;;;;;;;;;;;;;;;;;ACA9B;AACd;AACF;AAI8B;AACxC;AAE7C;IACE,iBAAmB,IAAY,EAAS,MAAc;QAAnC,SAAI,GAAJ,IAAI,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAQ;IACtD,CAAC;IACH,cAAC;AAAD,CAAC;;AAOD;IAyCE,6BAAoB,KAAqB,EAAU,cAA8B,EAAU,QAAyB,EAAU,MAAc;QAAxH,UAAK,GAAL,KAAK,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAzB5I,YAAO,GAAG,CAAC,CAAC;QASZ,iBAAY,GAAG,EAAE,CAAC;IAgB8H,CAAC;IAEjJ,sCAAQ,GAAR;QAAA,iBAyFC;QAxFD,IAAI,CAAC,IAAI,GAAG;YACV,EAAE,KAAK,EAAE,mBAAmB,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YACnF,EAAE,KAAK,EAAE,0BAA0B,EAAE,MAAM,EAAE,iBAAiB,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YAC/F,EAAE,KAAK,EAAE,uBAAuB,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YACvF,EAAE,KAAK,EAAE,mBAAmB,EAAE,MAAM,EAAE,cAAc,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YACrF,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YAC7E,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,cAAc,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YAC/E,EAAE,KAAK,EAAE,oBAAoB,EAAE,MAAM,EAAE,eAAe,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YACvF,EAAE,KAAK,EAAE,eAAe,EAAE,MAAM,EAAE,iBAAiB,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YACpF,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;YAC5E,EAAE,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE,gBAAgB,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;YACnF,EAAE,KAAK,EAAE,cAAc,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;SACpE,CAAC;QAEN,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAC1C,UAAC,QAAQ;YACR,KAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,WAAW,CAAC;YAClC,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,WAAW,CAAC;YACpC,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;YAChC,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC5B,CAAC,EACD,UAAC,KAAK,IAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC,CAClC,CAAC;QACF,IAAI,CAAC,IAAI,GAAG;YACV,EAAE,KAAK,EAAE,mBAAmB,EAAE,KAAK,EAAE,EAAE,EAAE;YACzC,EAAE,KAAK,EAAE,8BAA8B,EAAE,KAAK,EAAE,8BAA8B,EAAE;YAChF,EAAE,KAAK,EAAE,mBAAmB,EAAE,KAAK,EAAE,mBAAmB,EAAE;YAC1D,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,kBAAkB,EAAE;YACxD,EAAE,KAAK,EAAE,uBAAuB,EAAE,KAAK,EAAE,uBAAuB,EAAE;YAClE,EAAE,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,cAAc,EAAE;YAChD,EAAE,KAAK,EAAE,wBAAwB,EAAE,KAAK,EAAE,wBAAwB,EAAE;YACpE,EAAE,KAAK,EAAE,iBAAiB,EAAE,KAAK,EAAE,iBAAiB,EAAE;YACtD,EAAE,KAAK,EAAE,mBAAmB,EAAE,KAAK,EAAE,mBAAmB,EAAE;YAC1D,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,eAAe,EAAE;YAClD,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;YACpC,EAAE,KAAK,EAAE,+BAA+B,EAAE,KAAK,EAAE,+BAA+B,EAAE;YAClF,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,eAAe,EAAE;YAClD,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,gBAAgB,EAAE;YACpD,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,aAAa,EAAE;YAC9C,EAAE,KAAK,EAAE,qBAAqB,EAAE,KAAK,EAAE,qBAAqB,EAAE;YAC9D,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,kBAAkB,EAAE;YACxD,EAAE,KAAK,EAAE,yBAAyB,EAAE,KAAK,EAAE,yBAAyB,EAAE;YACtE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;YAChC,EAAE,KAAK,EAAE,sBAAsB,EAAE,KAAK,EAAE,sBAAsB,EAAE;YAChE,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;YACxC,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,EAAE;YAC5C,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,kBAAkB,EAAE;YACxD,EAAE,KAAK,EAAE,sBAAsB,EAAE,KAAK,EAAE,sBAAsB,EAAE;YAChE,EAAE,KAAK,EAAE,uBAAuB,EAAE,KAAK,EAAE,uBAAuB,EAAE;YAClE,EAAE,KAAK,EAAE,mBAAmB,EAAE,KAAK,EAAE,mBAAmB,EAAE;YAC1D,EAAE,KAAK,EAAE,mCAAmC,EAAE,KAAK,EAAE,mCAAmC,EAAE;YAC1F,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,eAAe,EAAE;YAClD,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;SACrC,CAAC;QACF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QAEd,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAS,CAAC;YAChC,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxD,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnD,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1D,gBAAgB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACrC,gBAAgB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC5D,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,gBAAgB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC5D,mBAAmB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC/D,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACtD,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACnC,UAAU,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;SACnC,CAAC;QAEF,IAAI,CAAC,eAAe,GAAG,IAAI,wDAAS,CAAC;YACnC,mBAAmB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC/D,qBAAqB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjE,oBAAoB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YAClF,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACxD,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,GAAG,IAAI,wDAAS,CAAC;YAClC,mBAAmB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC/D,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACzD,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3D,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YAC5E,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAElD,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,GAAG,IAAI,wDAAS,CAAC;YAClC,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACzD,CAAC,CAAC;IACL,CAAC;IAED,6CAAe,GAAf;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IACD,mDAAqB,GAArB;QACE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACjC,CAAC;IAED,8CAAgB,GAAhB;QACE,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC3G,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,qCAAO,GAAP;QACE,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,EAAE;YAC7C,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;SAEnB;IACH,CAAC;IAED,oCAAM,GAAN;QACE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC;IAED,kCAAI,GAAJ,UAAK,KAAK;QAAV,iBAcC;QAbC,IAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;QAC/B,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,EAAE;YACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAG;gBACnC,OAAO,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC;YACnC,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;SACf;aAAM,IAAI,KAAK,CAAC,GAAG,KAAK,WAAW,EAAE;YACpC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;SACvC;aAAM,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,QAAQ,KAAK,CAAC,EAAE;YAClG,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC;SACvB;IAEH,CAAC;IAED,sCAAQ,GAAR,UAAS,KAAK;QAAd,iBAiBC;QAhBC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QAEtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,SAAS,CACjD,UAAC,QAAQ;YACP,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;YAChC,KAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC;YAC5C,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC;YACnD,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;QAE9C,CAAC,EACD,UAAC,KAAK,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC9B,CAAC;IACJ,CAAC;IACD,2CAAa,GAAb,UAAc,KAAK;QAEjB,qBAAqB;QACrB;;;;;cAKM;IAER,CAAC;IACD,0CAAY,GAAZ,UAAa,KAAK;QAAlB,iBAYC;QAXC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,SAAS,CAC7C,UAAC,QAAQ;YACP,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ;QAEnC,CAAC,EACD,UAAC,KAAK,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC9B,CAAC;IAEJ,CAAC;IACD,iDAAmB,GAAnB,UAAoB,KAAK;QAAzB,iBAcC;QAbC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,SAAS,CACjD,UAAC,QAAQ;YACP,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa;YACpD,KAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW;QACnD,CAAC,EACD,UAAC,KAAK,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC9B,CAAC;IAEJ,CAAC;IACD,4CAAc,GAAd,UAAe,KAAK;QAApB,iBAcC;QAbC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,SAAS,CACjD,UAAC,QAAQ;YACP,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa;YACpD,KAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW;QACnD,CAAC,EACD,UAAC,KAAK,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC9B,CAAC;IAEJ,CAAC;IACD,uCAAS,GAAT,UAAU,KAAK;IACf,CAAC;IACD,sCAAQ,GAAR,UAAS,KAAK;QAAd,iBAcC;QAbC,IAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;QAC/B,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,EAAE;YACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAG;gBACxC,OAAO,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC;YACxC,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;SACf;aAAM,IAAI,KAAK,CAAC,GAAG,KAAK,WAAW,EAAE;YACpC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;SACvC;aAAM,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,QAAQ,KAAK,CAAC,EAAE;YAClG,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC;SACvB;IAEH,CAAC;IACD,sBAAI,2CAAU;aAAd,cAAmB,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAClE,sBAAI,2CAAU;aAAd,cAAmB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAChE,sBAAI,6CAAY;aAAhB,cAAqB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACpE,sBAAI,+CAAc;aAAlB,cAAuB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACxE,sBAAI,+CAAc;aAAlB,cAAuB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACxE,sBAAI,sCAAK;aAAT,cAAc,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACtD,sBAAI,+CAAc;aAAlB,cAAuB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACxE,sBAAI,oCAAG;aAAP,cAAY,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAClD,sBAAI,yCAAQ;aAAZ,cAAiB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAC5D,sBAAI,kDAAiB;aAArB,cAA0B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAChE,sBAAI,kDAAiB;aAArB,cAA0B,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAChF,sBAAI,4CAAW;aAAf,cAAoB,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACpE,sBAAI,8CAAa;aAAjB,cAAsB,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACxE,sBAAI,6CAAY;aAAhB,cAAqB,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACtE,sBAAI,oCAAG;aAAP,cAAY,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACpD,sBAAI,kDAAiB;aAArB,cAA0B,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACjF,sBAAI,oDAAmB;aAAvB,cAA4B,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACrF,sBAAI,mDAAkB;aAAtB,cAA2B,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACnF,sBAAI,0CAAS;aAAb,cAAkB,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACjE,sBAAI,6CAAY;aAAhB,cAAqB,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACvE,sBAAI,yCAAQ;aAAZ,cAAiB,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAC/D,gDAAkB,GAAlB;QAAA,iBAcC;QAbC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CACtD,kBAAQ;YACN,KAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC;YAC7F,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;YAChC,KAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,QAAQ,CAAC;YACzC,+CAA+C;YAC/C,4CAA4C;QAC9C,CAAC,EACD,eAAK;YACH,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM;QACxC,CAAC,CACF,CAAC;IACJ,CAAC;IACD,iDAAmB,GAAnB;QAAA,iBAsBC;QApBC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CACxD,kBAAQ;YACN,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,8BAA8B,EAAE,CAAC,CAAC;YAC7G,8CAA8C;YAC9C,KAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,CAC7D,UAAC,SAAS;gBACR,KAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;gBACnC,KAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,SAAS,CAAC;gBAC3C,KAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,SAAS,CAAC;YAC9C,CAAC,EACD,UAAC,KAAK,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC9B,CAAC;YACF,+CAA+C;YAC/C,4CAA4C;QAC9C,CAAC,EACD,eAAK;YACH,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM;QACxC,CAAC,CACF,CAAC;IACJ,CAAC;IACD,mDAAqB,GAArB;QAAA,iBAmCC;QAlCC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAEjC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CACtD,kBAAQ;YACN,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACnB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACjC,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,KAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,QAAQ,CAAC;YACzC,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,8BAA8B,EAAE,CAAC,CAAC;YAE7G,KAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAC1C,UAAC,SAAS;gBACR,mDAAmD;gBACnD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;gBAClD,mDAAmD;YACrD,CAAC,EACD,UAAC,KAAK,IAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC,CAClC,CAAC;YACF,KAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,SAAS,CACnD,UAAC,SAAS;gBACR,KAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;gBACnC,KAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,SAAS,CAAC;gBAC3C,KAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,SAAS,CAAC;YAC9C,CAAC,EACD,UAAC,KAAK,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC9B,CAAC;YAGF,4CAA4C;QAC9C,CAAC,EACD,eAAK;YACH,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM;QACxC,CAAC,CACF,CAAC;IACJ,CAAC;IACD,0CAAY,GAAZ;QAAA,iBAyBC;QAxBC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAI/B,wDAAwD;QAGxD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAClD,kBAAQ;YACN,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YACxB,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,sBAAsB,EAAE,CAAC,CAAC;YACrG,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC1B,KAAI,CAAC,KAAK,GAAC,EAAE,CAAC;YACd,KAAI,CAAC,MAAM,GAAC,EAAE,CAAC;YACf,KAAI,CAAC,OAAO,GAAC,EAAE,CAAC;YAChB,KAAI,CAAC,WAAW,GAAC,EAAE,CAAC;YACpB,KAAI,CAAC,OAAO,GAAC,EAAE,CAAC;YAChB,KAAI,CAAC,MAAM,GAAC,EAAE,CAAC;YACf,4CAA4C;QAChD,CAAC,EACD,eAAK;YACH,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM;QACxC,CAAC,CACF,CAAC;IACJ,CAAC;IA7XkC;QAAlC,+DAAS,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;;yDAAe;IADtC,mBAAmB;QAN/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,oLAA2C;YAC3C,SAAS,EAAE,CAAC,0DAAc,CAAC;;SAE5B,CAAC;+EA0C2B,8DAAc,EAA0B,0DAAc,EAAoB,kEAAe,EAAkB,sDAAM;OAzCjI,mBAAmB,CAgY/B;IAAD,0BAAC;CAAA;AAhY+B;;;;;;;;;;;;ACnBhC,+DAA+D,+K;;;;;;;;;;;;;;;;;;;;;;;ACAO;AACb;AACF;AAI8B;AACxC;AAC7C;IACE,iBAAmB,IAAW,EAAS,MAAa;QAAjC,SAAI,GAAJ,IAAI,CAAO;QAAS,WAAM,GAAN,MAAM,CAAO;IACpD,CAAC;IACH,cAAC;AAAD,CAAC;;AAOD;IAiBE,2BAAoB,KAAqB,EAAS,cAA8B,EAAU,QAAyB,EAAU,MAAc;QAAvH,UAAK,GAAL,KAAK,CAAgB;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAR3I,YAAO,GAAG,CAAC,CAAC;QAIZ,iBAAY,GAAG,EAAE,CAAC;IAI6H,CAAC;IAEhJ,oCAAQ,GAAR;QAAA,iBA6FC;QA5FC,IAAI,CAAC,MAAM,GAAG;YACZ,EAAC,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,EAAC;YAClC,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAC;YACpC,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;YAClC,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAC;YACpC,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAC;YACpC,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAC;YACtC,EAAC,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,EAAC;YAC1C,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAC;YACtC,EAAC,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,aAAa,EAAC;YAC5C,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAC,UAAU,EAAC;YACrC,EAAC,KAAK,EAAE,sBAAsB,EAAE,KAAK,EAAC,sBAAsB,EAAC;YAC7D,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAC,SAAS,EAAC;YACnC,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAC,SAAS,EAAC;YACnC,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAC,QAAQ,EAAC;YACjC,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAC,OAAO,EAAC;YAC/B,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAC,UAAU,EAAC;YACrC,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAC,SAAS,EAAC;YACnC,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAC,MAAM,EAAC;YAC7B,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAC,QAAQ,EAAC;YACjC,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAC,UAAU,EAAC;YACrC,EAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAC,WAAW,EAAC;YACvC,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAC,OAAO,EAAC;YAC/B,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAC,UAAU,EAAC;YACrC,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAC,UAAU,EAAC;YACrC,EAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAC,WAAW,EAAC;YACvC,EAAC,KAAK,EAAE,aAAa,EAAE,KAAK,EAAC,aAAa,EAAC;YAC3C,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAC,UAAU,EAAC;YACrC,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAC,SAAS,EAAC;YACnC,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAC,UAAU,EAAC;SACxC,CAAC;QACA,IAAI,CAAC,IAAI,GAAG;YACV,EAAC,KAAK,EAAE,mBAAmB,EAAE,KAAK,EAAE,EAAE,EAAC;YACvC,EAAC,KAAK,EAAE,8BAA8B,EAAE,KAAK,EAAE,8BAA8B,EAAC;YAC9E,EAAC,KAAK,EAAE,mBAAmB,EAAE,KAAK,EAAE,mBAAmB,EAAC;YACxD,EAAC,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,kBAAkB,EAAC;YACtD,EAAC,KAAK,EAAE,uBAAuB,EAAE,KAAK,EAAE,uBAAuB,EAAC;YAChE,EAAC,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,cAAc,EAAC;YAC9C,EAAC,KAAK,EAAE,wBAAwB,EAAE,KAAK,EAAE,wBAAwB,EAAC;YAClE,EAAC,KAAK,EAAE,iBAAiB,EAAE,KAAK,EAAE,iBAAiB,EAAC;YACpD,EAAC,KAAK,EAAE,mBAAmB,EAAE,KAAK,EAAE,mBAAmB,EAAC;YACxD,EAAC,KAAK,EAAE,eAAe,EAAE,KAAK,EAAC,eAAe,EAAC;YAC/C,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAC,QAAQ,EAAC;YACjC,EAAC,KAAK,EAAE,+BAA+B,EAAE,KAAK,EAAC,+BAA+B,EAAC;YAC/E,EAAC,KAAK,EAAE,eAAe,EAAE,KAAK,EAAC,eAAe,EAAC;YAC/C,EAAC,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAC,gBAAgB,EAAC;YACjD,EAAC,KAAK,EAAE,aAAa,EAAE,KAAK,EAAC,aAAa,EAAC;YAC3C,EAAC,KAAK,EAAE,qBAAqB,EAAE,KAAK,EAAC,qBAAqB,EAAC;YAC3D,EAAC,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAC,kBAAkB,EAAC;YACrD,EAAC,KAAK,EAAE,yBAAyB,EAAE,KAAK,EAAC,yBAAyB,EAAC;YACnE,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAC,MAAM,EAAC;YAC7B,EAAC,KAAK,EAAE,sBAAsB,EAAE,KAAK,EAAC,sBAAsB,EAAC;YAC7D,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAC,UAAU,EAAC;YACrC,EAAC,KAAK,EAAE,YAAY,EAAE,KAAK,EAAC,YAAY,EAAC;YACzC,EAAC,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAC,kBAAkB,EAAC;YACrD,EAAC,KAAK,EAAE,sBAAsB,EAAE,KAAK,EAAC,sBAAsB,EAAC;YAC7D,EAAC,KAAK,EAAE,uBAAuB,EAAE,KAAK,EAAC,uBAAuB,EAAC;YAC/D,EAAC,KAAK,EAAE,mBAAmB,EAAE,KAAK,EAAC,mBAAmB,EAAC;YACvD,EAAC,KAAK,EAAE,mCAAmC,EAAE,KAAK,EAAC,mCAAmC,EAAC;YACvF,EAAC,KAAK,EAAE,eAAe,EAAE,KAAK,EAAC,eAAe,EAAC;YAC/C,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAC,QAAQ,EAAC;SACpC,CAAC;QACF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAE,EAAE,CAAC;QAEX,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAS,CAAC;YAChC,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACjF,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3D,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3D,eAAe,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACtC,eAAe,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACtC,gBAAgB,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACvC,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;SAEnC,CAAC,CAAC;QACH,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CACnC,UAAC,QAAQ;YACP,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC;gBAE5B,UAAU,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ;gBACpC,aAAa,EAAG,QAAQ,CAAC,IAAI,CAAC,WAAW;gBACzC,aAAa,EAAG,QAAQ,CAAC,IAAI,CAAC,WAAW;gBACzC,eAAe,EAAE,QAAQ,CAAC,IAAI,CAAC,aAAa;gBAC5C,eAAe,EAAG,QAAQ,CAAC,IAAI,CAAC,aAAa;gBAC7C,gBAAgB,EAAG,QAAQ,CAAC,IAAI,CAAC,cAAc;gBAC/C,WAAW,EAAG,QAAQ,CAAC,IAAI,CAAC,SAAS;aAEnC,CAAC;QACJ,CAAC,EACD,UAAC,KAAK,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC9B,CAAC;IACH,CAAC;IACD,+CAAmB,GAAnB,UAAoB,KAAK;QAAzB,iBAyBD;QAxBG,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YAC7C,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAEhC,MAAM,CAAC,MAAM,GAAG,UAAC,MAAW;gBACxB,KAAI,CAAC,SAAS,GAAG;oBACb,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM;oBAC1B,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC/B,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;iBACvC,CAAC;YACN,CAAC,CAAC;YACF,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAChC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAEjD,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC7C,UAAC,QAAQ;gBAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACnC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC;oBAC3B,MAAM,EAAE,QAAQ,CAAC,IAAI;iBAEtB,CAAC,CAAC;YACL,CAAC,EACD,UAAC,KAAK,IAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC,CAClC,CAAC;SACL;IACL,CAAC;IACD,iDAAqB,GAArB,UAAsB,KAAK;QAA3B,iBAyBC;QAxBC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YAC7C,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAEhC,MAAM,CAAC,MAAM,GAAG,UAAC,MAAW;gBACxB,KAAI,CAAC,SAAS,GAAG;oBACb,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM;oBAC1B,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC/B,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;iBACvC,CAAC;YACN,CAAC,CAAC;YACF,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAChC,QAAQ,CAAC,MAAM,CAAC,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAExD,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC7C,UAAC,QAAQ;gBAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACnC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC;oBAC3B,aAAa,EAAE,QAAQ,CAAC,IAAI;iBAE7B,CAAC,CAAC;YACL,CAAC,EACD,UAAC,KAAK,IAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC,CAClC,CAAC;SACL;IACH,CAAC;IACD,iDAAqB,GAArB,UAAsB,KAAK;QAA3B,iBAyBC;QAxBC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YAC7C,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAEhC,MAAM,CAAC,MAAM,GAAG,UAAC,MAAW;gBACxB,KAAI,CAAC,SAAS,GAAG;oBACb,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM;oBAC1B,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC/B,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;iBACvC,CAAC;YACN,CAAC,CAAC;YACF,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAChC,QAAQ,CAAC,MAAM,CAAC,mBAAmB,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAE5D,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC7C,UAAC,QAAQ;gBAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACnC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC;oBAC3B,iBAAiB,EAAE,QAAQ,CAAC,IAAI;iBAEjC,CAAC,CAAC;YACL,CAAC,EACD,UAAC,KAAK,IAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC,CAClC,CAAC;SACL;IACH,CAAC;IACC,mCAAO,GAAP;QACE,IAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,EAAE;YAC5C,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;SACnB;IACH,CAAC;IAED,kCAAM,GAAN;QACE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC;IAED,gCAAI,GAAJ,UAAK,KAAK;QAAV,iBAcC;QAbC,IAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;QAC/B,IAAG,KAAK,CAAC,GAAG,KAAK,OAAO,EAAE;YACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAG;gBACpC,OAAO,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;YACjE,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC;YACnC,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;SACf;aAAM,IAAI,KAAK,CAAC,GAAG,KAAK,WAAW,EAAE;YAClC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAC,EAAE,CAAC,CAAC;SACxC;aAAM,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,QAAQ,KAAK,CAAC,EAAE;YAChG,IAAI,CAAC,GAAG,IAAG,KAAK,CAAC,GAAG,CAAC;SACtB;IAEL,CAAC;IAGD,oCAAQ,GAAR,UAAS,KAAK;QAAd,iBAaC;QAZC,IAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;QAC/B,IAAG,KAAK,CAAC,GAAG,KAAK,OAAO,EAAE;YACxB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAG;gBACzC,OAAO,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;YACjE,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC;YACxC,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;SACf;aAAM,IAAI,KAAK,CAAC,GAAG,KAAK,WAAW,EAAE;YAClC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAC,EAAE,CAAC,CAAC;SACxC;aAAM,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,QAAQ,KAAK,CAAC,EAAE;YAChG,IAAI,CAAC,GAAG,IAAG,KAAK,CAAC,GAAG,CAAC;SACtB;IACL,CAAC;IAED,sBAAI,uCAAQ;aAAZ,cAAiB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAC5D,sBAAI,6CAAc;aAAlB,cAAuB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACxE,sBAAI,4CAAa;aAAjB,cAAsB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACtE,sBAAI,4CAAa;aAAjB,cAAsB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACtE,sBAAI,0CAAW;aAAf,cAAoB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAClE,sBAAI,0CAAW;aAAf,cAAoB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAClE,sBAAI,wCAAS;aAAb,cAAkB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAG9D,wCAAY,GAAZ;QAAA,iBAiBC;QAhBE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAGnC,wDAAwD;QAGnD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAClD,kBAAQ;YACN,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,qBAAqB,EAAE,CAAC,CAAC;YACpG,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;QACrC,CAAC,EACD,eAAK;YACH,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM;QACxC,CAAC,CACF,CAAC;IACN,CAAC;IAED,6CAAiB,GAAjB;QAAA,iBAYC;QAXC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAC,EAAE,CAAC,CAAC,SAAS,CACtD,UAAC,QAAQ;YACP,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;QACrC,CAAC,EACD,eAAK;YACH,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM;QACxC,CAAC,EACD,cAAM,cAAO,CAAC,GAAG,CAAC,WAAW,CAAC,EAAxB,CAAwB,CAC/B,CAAC;IACJ,CAAC;IAhRkC;QAAlC,+DAAS,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;;uDAAe;IADtC,iBAAiB;QAN7B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,kLAA2C;YAC3C,SAAS,EAAE,CAAC,0DAAc,CAAC;;SAE5B,CAAC;+EAkB2B,8DAAc,EAAyB,0DAAc,EAAoB,kEAAe,EAAkB,sDAAM;OAjBhI,iBAAiB,CAmR7B;IAAD,wBAAC;CAAA;AAnR6B;;;;;;;;;;;;AClB9B,+DAA+D,+K;;;;;;;;;;;;;;;;;;ACAH;AACH;AAQzD;IAKE,4BAAoB,KAAqB,EAAW,MAAc;QAA9C,UAAK,GAAL,KAAK,CAAgB;QAAW,WAAM,GAAN,MAAM,CAAQ;QAJlE,aAAQ,GAAkB,EAAE,CAAC;QAC7B,eAAU,GAAkB,EAAE,CAAC;QAE7B,YAAO,GAAY,IAAI,CAAC;IAC4C,CAAC;IAEvE,qCAAQ,GAAR;IAGA,CAAC;IAVU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,iLAA0C;;SAE3C,CAAC;+EAM2B,8DAAc,EAAmB,sDAAM;OALvD,kBAAkB,CAY9B;IAAD,yBAAC;CAAA;AAZ8B;;;;;;;;;;;;ACT/B,mDAAmD,8BAA8B,iCAAiC,GAAG,iBAAiB,yBAAyB,GAAG,gBAAgB,yBAAyB,0BAA0B,GAAG,6CAA6C,upC;;;;;;;;;;;;;;;;;;;;;;;;ACA9K;AAC9C;AACF;AAEjB;AAC4D;AACrD;AACK;AAIlD,IAAM,MAAM,GAAQ;IAClB,GAAG,EAAE;QACH,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;IACD,IAAI,EAAE;QACJ,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;IACD,MAAM,EAAE;QACN,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;CACF,CAAC;AASF;IA+BE,2BAAoB,YAAiC,EAAU,EAAe,EAAU,cAA8B,EAAU,KAAqB,EAAU,QAAyB,EAC9K,MAAc;QADJ,iBAAY,GAAZ,YAAY,CAAqB;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAC9K,WAAM,GAAN,MAAM,CAAQ;QA7BxB,eAAU,GAAkB,EAAE,CAAC;QAU/B,qCAAgC,GAAG,KAAK,CAAC;QACzC,kBAAa,GAAG;YACd,2DAA2D;YAC3D,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,gBAAgB,EAAE;YACpD,EAAE,KAAK,EAAE,sBAAsB,EAAE,KAAK,EAAE,sBAAsB,EAAE;SAEjE,CAAC;QAKF,YAAO,GAAY,IAAI,CAAC;QAIxB,iBAAY,GAAG,EAAE,CAAC;QAElB,mBAAc,GAA0B,EAAE,CAAC;IAEf,CAAC;IAb3B,CAAC;IAcH,wCAAY,GAAZ,UAAa,EAAE;QACb,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,kBAAkB;QAC9B,IAAI,CAAC,YAAY,GAAC,EAAE,CAAC;QACrB,IAAI,CAAC,cAAc,GAAC,EAAE,CAAC;IACzB,CAAC;IAED,wCAAY,GAAZ,UAAa,KAAoB;QAAjC,iBAwBC;QAvBC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QAElB,2FAA2F;QAC3F,gCAAgC;QAChC,sCAAsC;QACtC,2CAA2C;QAC3C,kEAAkE;QAClE,gGAAgG;QAEhG,sCAAsC;QACtC,UAAU,CAAC;YACT,KAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAC7C,UAAC,QAAQ;gBACP,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBACzD,KAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC;gBAC/C,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC,EACD,UAAC,KAAK,IAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC,CAClC,CAAC;QAGJ,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IACD,oCAAQ,GAAR;QAAA,iBAiEC;QA/DC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,GAAG,CAAE,EAAC,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,IAAI,EAAE;YAC9D,EAAC,KAAK,EAAE,qBAAqB,EAAE,KAAK,EAAE,qBAAqB,EAAE;YAC7D,EAAC,KAAK,EAAE,qBAAqB,EAAE,KAAK,EAAE,qBAAqB,EAAE;YAC7D,EAAC,KAAK,EAAE,qBAAqB,EAAE,KAAK,EAAE,qBAAqB,EAAE;YAC9D,EAAC,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,cAAc,EAAE;YAChD,EAAC,KAAK,EAAE,iBAAiB,EAAE,KAAK,EAAE,iBAAiB,EAAE;YACrD,EAAC,KAAK,EAAE,iBAAiB,EAAE,KAAK,EAAE,iBAAiB,EAAE;YACrD,EAAC,KAAK,EAAE,uBAAuB,EAAE,KAAK,EAAE,uBAAuB,EAAE;YACjE,EAAC,KAAK,EAAE,wBAAwB,EAAE,KAAK,EAAE,wBAAwB,EAAE;SACnE,CAAC;QACC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAC1C,UAAC,QAAQ;YACR,KAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,WAAW,CAAC;QACpC,CAAC,EACD,UAAC,KAAK,IAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC,CAClC,CAAC;QACF,IAAI,CAAC,cAAc,GAAG,IAAI,wDAAS,CAAC;YAClC,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACnC,gBAAgB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACrC,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACnC,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAGhC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,EAEjB,CAAC;QACF,IAAI,CAAC,cAAc,GAAG;YACpB,uFAAuF;YACzF,+FAA+F;YACjG,qGAAqG;YACjG,EAAE,KAAK,EAAE,cAAc,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;YACzE,EAAE,KAAK,EAAE,uBAAuB,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YACvF,EAAE,KAAK,EAAE,mBAAmB,EAAE,MAAM,EAAE,cAAc,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YACrF,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YAC7E,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,cAAc,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YAC/E,EAAE,KAAK,EAAE,oBAAoB,EAAE,MAAM,EAAE,eAAe,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YACvF,EAAE,KAAK,EAAE,eAAe,EAAE,MAAM,EAAE,iBAAiB,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YACpF,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;YAC5E,EAAE,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE,gBAAgB,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;SAIpF,CAAC;QAEF,IAAI,CAAC,eAAe,GAAG;YACrB,EAAE,IAAI,EAAE,mBAAmB,EAAE;YAC7B,EAAE,IAAI,EAAE,gBAAgB,EAAE;YAC1B,EAAE,IAAI,EAAE,sBAAsB,EAAE;YAChC,EAAE,IAAI,EAAE,iBAAiB,EAAE;SAE5B,CAAC;QAGF,IAAI,CAAC,QAAQ,GAAG;YACd,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,aAAa,EAAE;YAC9C,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE;YAC1C,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;YAC9B,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,aAAa,EAAE;YAC9C,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;YACtC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;SACzC;IACH,CAAC;IAED,2CAAe,GAAf,UAAgB,IAAS;QACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAC1F,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;QAElC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;YAC7B,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC;SAEjD,CAAC,CAAC;IACL,CAAC;IAED,4CAAgB,GAAhB,UAAiB,IAAS;QACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAKD,sCAAU,GAAV,UAAW,IAAI;QACb,IAAI,IAAI,EAAE;YACR,IAAM,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,IAAI,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;YACpC,IAAI,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;YAC3B,IAAM,IAAI,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;YAC7B,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC;gBAAE,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC;YAC1C,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC;gBAAE,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YACpC,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACrC;aAAM;YACL,IAAM,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;YACrB,IAAI,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;YACpC,IAAI,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;YAC3B,IAAM,IAAI,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;YAC7B,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC;gBAAE,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC;YAC1C,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC;gBAAE,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YACpC,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACrC;IACH,CAAC;IAED,kDAAsB,GAAtB,UAAuB,KAAK;QAC1B,IAAI,KAAK,CAAC,KAAK,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC;SACnD;IAEH,CAAC;IAED,wCAAY,GAAZ,UAAa,KAAY,EAAE,KAAa;QAAxC,iBASC;QARC,IAAI,KAAK,CAAC,gBAAgB;YAAE,OAAO;QACnC,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;YACxB,GAAG,EAAE,uBAAuB;YAC5B,OAAO,EAAE,oCAAoC;YAC7C,MAAM,EAAE,cAAQ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SAC7C,CAAC,CAAC;IACL,CAAC;IAEO,yCAAa,GAArB,UAAsB,KAAK;QAA3B,iBAYC;QAXC,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC,SAAS,CACtD,UAAC,QAAQ;YACP,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAAC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YAC5C,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,SAAS,CAAC;QACvC,CAAC,EACD,UAAC,KAAK,IAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC,CAClC,CAAC;IAEJ,CAAC;IAGD,oCAAQ,GAAR,UAAS,MAAc,EAAE,WAAmB;QAC1C,IAAI,WAAW,IAAI,GAAG,EAAE;YACtB,OAAO,SAAS;SACjB;aAAM,IAAI,MAAM,IAAI,gBAAgB,EAAE;YACrC,OAAO,SAAS;SACjB;IACH,CAAC;IACD,wCAAY,GAAZ,UAAa,KAAK;QAChB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,YAAY,EAAE,QAAQ,CAAC;IAClD,CAAC;IACD,yCAAa,GAAb,UAAc,IAAI;QAChB,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAChC,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAEzB,IAAI,KAAK,GAAG,EAAE,EAAE;YACd,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC;SACrB;QAED,IAAI,GAAG,GAAG,EAAE,EAAE;YACZ,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SACjB;QAED,OAAO,IAAI,CAAC,WAAW,EAAE,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;IACtD,CAAC;IAGD,sBAAI,2CAAY;aAAhB,cAAqB,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACtE,sBAAI,6CAAc;aAAlB,cAAuB,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAC1E,sBAAI,2CAAY;aAAhB,cAAqB,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACtE,sBAAI,uCAAQ;aAAZ,cAAiB,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAE9D,wCAAY,GAAZ,UAAa,YAAoB;QAAjC,iBAcC;QAbC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAEjC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC,SAAS,CACzE,kBAAQ;YACN,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACnB,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,mBAAmB,EAAE,CAAC,CAAC;YACpG,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC;QAC9C,CAAC,EACD,eAAK;YACH,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM;QACxC,CAAC,CACF,CAAC;IACJ,CAAC;IA7PkC;QAAlC,+DAAS,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAQ,mDAAK;oDAAC;IACH;QAA5C,+DAAS,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAe,yDAAW;2DAAM;IAFjE,iBAAiB;QAR7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,mDAAmD;YACnD,SAAS,EAAE,CAAC,0DAAc,EAAE,+DAAmB,CAAC;YAEhD,8KAAyC;;SAE1C,CAAC;+EAgCkC,+DAAmB,EAAc,0DAAW,EAA0B,0DAAc,EAAiB,8DAAc,EAAoB,kEAAe;YACtK,sDAAM;OAhCb,iBAAiB,CA+P7B;IAAD,wBAAC;CAAA;AA/P6B;;;;;;;;;;;;;;;;;;;;ACjCa;AACO;AAEY;AACZ;AAIlD;IAEE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,UAAK,GAAqD,EAAE,CAAC;IACrB,CAAC;IAEzC,wCAAc,GAAd,UAAe,IAAQ;QACrB,IAAM,UAAU,GAAM,IAAI,CAAC,KAAK,GAAC,EAAE,CAAC;QACpC,IAAI,GAAO,CAAC;QACZ,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;QAE7B,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;QAC1C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QACvC,IAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,EAChC;YACC;;;;;;;;;;;;uFAY2E;YAC1E,IAAG,SAAS,CAAC,0BAA0B,CAAC;gBACxC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,SAAS,CAAC,0BAA0B,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3F,KAAK,IAAI,EAAE,IAAI,SAAS,EAAE;gBAEvB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACpD;SACF;QACH,IAAM,IAAI,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,iBAAc,EAAE,IAAI,CAAC,CAAC;QAC9D,uCAAuC;QAI1C,2DAA2D;QACzD,uFAAuF;IACvF,CAAC;IACD,mCAAS,GAAT,UAAU,IAAI;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,GAAG,iBAAc,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrE,CAAC;IAED,qCAAW,GAAX,UAAY,IAAI;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,GAAG,aAAU,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjE,CAAC;IACH,0CAAgB,GAAhB,UAAiB,IAAI,EAAC,EAAE;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,kBAAe,GAAG,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3E,CAAC;IACC,qCAAW,GAAX,UAAY,IAAI;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,GAAG,gBAAa,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpE,CAAC;IACD,sCAAY,GAAZ,UAAa,IAAI;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,GAAG,kBAAe,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtE,CAAC;IAEF,gDAAsB,GAAtB,UAAuB,KAAK;QAEzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,GAAG,uBAAoB,EAAC,KAAK,CAAC,CAAC;IACtE,CAAC;IACD,4CAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,yBAAsB,CAAC,CAAC;IACjE,CAAC;IACD,4CAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,yBAAsB,CAAC,CAAC;IACjE,CAAC;IACD,kCAAQ,GAAR,UAAS,EAAE;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,WAAQ,GAAG,EAAE,CAAC,CAAC;IACxD,CAAC;IACD,oCAAU,GAAV,UAAW,EAAE;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,eAAY,GAAG,EAAE,CAAC,CAAC;IAC5D,CAAC;IACD,wCAAc,GAAd,UAAe,EAAE;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,uBAAoB,GAAG,EAAE,CAAC,CAAC;IACpE,CAAC;IACD,oCAAU,GAAV,UAAW,IAAI,EAAC,EAAE;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,WAAQ,GAAG,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACpE,CAAC;IACD,uCAAa,GAAb,UAAc,QAAQ;QAEpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,GAAG,kBAAe,EAAE,QAAQ,CAAC,CAAC;IACrE,CAAC;IACD,2CAAiB,GAAjB,UAAkB,KAAK;QAErB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,GAAG,qBAAkB,EAAC,KAAK,CAAC,CAAC;IACpE,CAAC;IAzFU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,eAAe,CA2F3B;IAAD,sBAAC;CAAA;AA3F2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRa;AACc;AACgB;AAEH;AACM;AACN;AACmB;AAGN;AACI;AACL;AAChF,IAAM,MAAM,GAAW;IACtB,mEAAmE;IAClE;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mFAAkB;QAC7B,QAAQ,EAAE;YAER,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,gFAAiB,EAAC,IAAI,EAAE;oBAChD,YAAY,EAAE,YAAY;iBAC3B,EAAC;YAEF,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,sFAAmB,EAAC,IAAI,EAAE;oBACpD,YAAY,EAAE,YAAY;iBAC3B,EAAC;YACF,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,gFAAiB,EAAC,IAAI,EAAE;oBACpD,YAAY,EAAE,YAAY;iBAC3B,EAAC;YACF,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,mGAA0B,EAAC,IAAI,EAAE;oBACjE,YAAY,EAAE,YAAY;iBAC3B,EAAC;YACF,EAAC,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,iGAAuB,EAAC,IAAI,EAAE;oBAC5D,YAAY,EAAE,YAAY;iBAC3B,EAAC;YACF,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,6FAAqB,EAAC,IAAI,EAAE;oBACvD,YAAY,EAAE,YAAY;iBAC3B,EAAC;YACF,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,4FAAoB,EAAC,IAAI,EAAE;oBACvD,YAAY,EAAE,YAAY;iBAC3B,EAAC;SACL;KAAC;CACH,CAAC;AAMF;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAJ7B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDW;AACM;AAEW;AACa;AAEH;AACM;AACN;AACd;AACD;AAET;AAEY;AACZ;AACE;AACD;AACW;AACV;AACA;AACU;AACJ;AACJ;AAEA;AACM;AAEL;AACC;AACF;AACD;AACa;AAE2B;AACP;AACK;AACL;AAClB;AAGd;AAsBhD;IAAA;IAA0B,CAAC;IAAd,UAAU;QArBtB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,mFAAkB,EAAE,gFAAiB,EAAE,sFAAmB,EAAE,gFAAiB;gBACzF,wDAAU,EAAE,oGAA0B,EAAE,6FAAoB,EAAC,6FAAqB,EAAC,kGAAuB,CAAC;YAC9G,OAAO,EAAE;gBACP,4DAAY;gBACZ,sEAAiB;gBACjB,kEAAmB,EAAE,0DAAW,EAAE,sEAAiB,EAAC,gEAAc,EAAC,8EAAqB;gBACxF,4DAAY;gBACZ,4DAAY;gBACZ,sEAAiB;gBACjB,sEAAiB;gBACjB,4DAAY;gBACZ,0DAAW;gBACX,kEAAe,EAAE,0EAAmB;gBAEpC,sEAAiB,EAAE,8DAAa,EAAE,8DAAa,EAAE,oEAAgB,EAAE,+DAAiB,EAAE,gEAAc,EAAE,0DAAW,EAAE,8DAAa;aACjI;YACD,SAAS,EAAE;gBACT,kEAAe;aAChB;SACF,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;AC/D6B;AAKpD;IACE;;OAEG;IACH;IAAe,CAAC;IAChB,8BAAS,GAAT,UAAU,KAAU;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QAClC,IAAM,MAAM,GAAQ,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,yBAAyB;QACzB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,WAAC,IAAI,QAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,EAApB,CAAoB,CAAC,CAAC;QAC3D,OAAO,MAAM,EAAC,OAAM,EAAC,IAAG,CAAC;IAC3B,CAAC;IAXU,UAAU;QAHtB,0DAAI,CAAC;YACJ,IAAI,EAAE,OAAO;SACd,CAAC;;OACW,UAAU,CAYtB;IAAD,iBAAC;CAAA;AAZsB","file":"admin-benchsales-user-module-es5.js","sourcesContent":["module.exports = \"<h4 class=\\\"remove-margin\\\"> Submission Contact List </h4>\\r\\n<p-table #dt [columns]=\\\"cols\\\" scrollHeight=\\\"500px\\\"  [scrollable]=\\\"true\\\" [value]=\\\"products\\\" [loading]=\\\"loading\\\" [autoLayout]=\\\"true\\\" [resizableColumns]=\\\"true\\\" columnResizeMode=\\\"expand\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedProducts\\\">\\r\\n  <ng-template pTemplate=\\\"caption\\\">\\r\\n    <div class=\\\"p-d-flex\\\">\\r\\n      <button type=\\\"button\\\" pButton pRipple icon=\\\"pi pi-file-o\\\" (click)=\\\"dt.exportCSV()\\\" class=\\\"p-mr-2\\\" pTooltip=\\\"CSV\\\"\\r\\n        tooltipPosition=\\\"bottom\\\"></button>\\r\\n      <!-- <button type=\\\"button\\\" pButton pRipple icon=\\\"pi pi-file-excel\\\" (click)=\\\"exportExcel()\\\" class=\\\"p-button-success p-mr-2\\\"  pTooltip=\\\"XLS\\\" tooltipPosition=\\\"bottom\\\"></button> -->\\r\\n\\r\\n      <button type=\\\"button\\\" pButton pRipple icon=\\\"pi pi-filter\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"\\r\\n        class=\\\"p-button-info p-ml-auto\\\" pTooltip=\\\"Selection Only\\\" tooltipPosition=\\\"bottom\\\"></button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n    <tr>\\r\\n\\r\\n      <th *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{'width': col.width}\\\">\\r\\n        {{col.header}}\\r\\n      </th>\\r\\n\\r\\n    </tr>\\r\\n\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n    <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n      <td *ngFor=\\\"let col of columns\\\">\\r\\n        {{rowData[col.field]}}\\r\\n      </td>\\r\\n\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n</p-table>\\r\\n\"","module.exports = \"<h4 class=\\\"remove-margin\\\">Consultant Documents </h4>\\r\\n\\r\\n<p-table #dt [columns]=\\\"scrollableCols\\\" scrollHeight=\\\"500px\\\" [value]=\\\"timeSheets\\\" [scrollable]=\\\"true\\\" [filterDelay]=\\\"0\\\"\\r\\n  [globalFilterFields]=\\\"['consultatName']\\\" [resizableColumns]=\\\"true\\\" [loading]=\\\"loading\\\" [reorderableColumns]=\\\"true\\\"\\r\\n  autoLayout=\\\"true\\\" [loading]=\\\"loading\\\" (onRowSelect)=\\\"onRowSelected($event)\\\" dataKey=\\\"reportId\\\" editMode=\\\"row\\\"\\r\\n  [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [showCurrentPageReport]=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,25,50]\\\" [scrollable]=\\\"true\\\">\\r\\n  <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n    <colgroup>\\r\\n      <col style=\\\"width:160px\\\">\\r\\n      <col style=\\\"width:60px\\\">\\r\\n      <col style=\\\"width:120px\\\">\\r\\n      <col *ngFor=\\\"let col of columns\\\" style=\\\"width:200px\\\">\\r\\n      <col style=\\\"width:200px\\\">\\r\\n      <col style=\\\"width:200px\\\">\\r\\n    </colgroup>\\r\\n\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n    <tr>\\r\\n      <th>Submissions</th>\\r\\n      <th>Days</th>\\r\\n      <th>Docs</th>\\r\\n      <th>First Name</th>\\r\\n      <th>Last Name</th>\\r\\n      <th *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{'width': col.width}\\\">\\r\\n        {{col.header}}\\r\\n      </th>\\r\\n\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th>\\r\\n        <button (click)=\\\"clearFilters(dt)\\\">Clear Fields</button>\\r\\n      </th>\\r\\n      <th>\\r\\n\\r\\n      </th>\\r\\n      <th>\\r\\n\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\"  [value]=\\\"dt.filters['consultatName'] ? dt.filters['consultatName'].value : ''\\\" (input)=\\\"dt.filter($event.target.value, 'consultatName', 'contains')\\\"\\r\\n          placeholder=\\\"First Name\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['consultantLastName'] ? dt.filters['consultantLastName'].value : ''\\\" (input)=\\\"dt.filter($event.target.value, 'consultantLastName', 'contains')\\\"\\r\\n          placeholder=\\\"Last Name\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th> <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['consultantEmail'] ? dt.filters['consultantEmail'].value : ''\\\"  (input)=\\\"dt.filter($event.target.value, 'consultantEmail', 'startsWith')\\\"\\r\\n          placeholder=\\\"Email\\\" class=\\\"p-column-filter\\\"></th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['consultatMobileNumber'] ? dt.filters['consultatMobileNumber'].value : ''\\\" (input)=\\\"dt.filter($event.target.value, 'consultatMobileNumber', 'startsWith')\\\"\\r\\n          placeholder=\\\"Phone\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"number\\\" [value]=\\\"dt.filters['experience'] ? dt.filters['experience'].value : ''\\\" (input)=\\\"dt.filter($event.target.value, 'experience', 'startsWith')\\\"\\r\\n          placeholder=\\\"exp\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['rate'] ? dt.filters['rate'].value : ''\\\" (input)=\\\"dt.filter($event.target.value, 'rate', 'startsWith')\\\" placeholder=\\\"Rate\\\"\\r\\n          class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['technology'] ? dt.filters['technology'].value : ''\\\" (input)=\\\"dt.filter($event.target.value, 'technology', 'startsWith')\\\"\\r\\n          placeholder=\\\"Technology\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['visaType'] ? dt.filters['visaType'].value : ''\\\" (input)=\\\"dt.filter($event.target.value, 'visaType', 'startsWith')\\\"\\r\\n          placeholder=\\\"Visa Type\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['city'] ? dt.filters['city'].value : ''\\\" (input)=\\\"dt.filter($event.target.value, 'city', 'startsWith')\\\" placeholder=\\\"City\\\"\\r\\n          class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['state'] ? dt.filters['state'].value : ''\\\" (input)=\\\"dt.filter($event.target.value, 'state', 'startsWith')\\\"\\r\\n          placeholder=\\\"State\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['willingLocation'] ? dt.filters['willingLocation'].value : ''\\\" (input)=\\\"dt.filter($event.target.value, 'willingLocation', 'startsWith')\\\"\\r\\n          placeholder=\\\"Relocate\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['documentsCollected'] ? dt.filters['documentsCollected'].value : ''\\\" (input)=\\\"dt.filter($event.target.value, 'documentsCollected', 'startsWith')\\\"\\r\\n          placeholder=\\\"Document Collected\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['consultatName'] ? dt.filters['consultatName'].value : ''\\\" (input)=\\\"dt.filter($event.target.value, 'resource', 'startsWith')\\\"\\r\\n          placeholder=\\\"Resource\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['ssn'] ? dt.filters['ssn'].value : ''\\\" (input)=\\\"dt.filter($event.target.value, 'ssn', 'startsWith')\\\" placeholder=\\\"SSN\\\"\\r\\n          class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['bestContactNumber'] ? dt.filters['bestContactNumber'].value : ''\\\" (input)=\\\"dt.filter($event.target.value, 'bestContactNumber', 'startsWith')\\\"\\r\\n          placeholder=\\\"Best Contact Number\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['linkedInUrl'] ? dt.filters['linkedInUrl'].value : ''\\\" (input)=\\\"dt.filter($event.target.value, 'linkedInUrl', 'startsWith')\\\"\\r\\n          placeholder=\\\"LinkedIn\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['skypeId'] ? dt.filters['skypeId'].value : ''\\\"  (input)=\\\"dt.filter($event.target.value, 'skypeId', 'startsWith')\\\"\\r\\n          placeholder=\\\"SkypeId\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['reportStatus'] ? dt.filters['reportStatus'].value : ''\\\" (input)=\\\"dt.filter($event.target.value, 'reportStatus', 'startsWith')\\\"\\r\\n          placeholder=\\\"Status\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-editing=\\\"editing\\\" let-ri=\\\"rowIndex\\\">\\r\\n    <tr [pEditableRow]=\\\"rowData\\\">\\r\\n\\r\\n      <td class=\\\"text-center\\\">\\r\\n\\r\\n        <span *ngIf=\\\"rowData.priority=='High'\\\">\\r\\n          <button pButton pRipple data-toggle=\\\"tooltip\\\" title=\\\"{{rowData.priority}} Priority\\\" icon=\\\"pi pi-star\\\"\\r\\n            class=\\\"btn-length p-button-rounded p-button-warning\\\"\\r\\n            style=\\\"color:Green;background:#fff;border: none;\\\"></button>\\r\\n        </span>\\r\\n        <span *ngIf=\\\"rowData.priority=='Medium'\\\">\\r\\n          <button pButton pRipple data-toggle=\\\"tooltip\\\" title=\\\"{{rowData.priority}} Priority\\\" icon=\\\"pi pi-star\\\"\\r\\n            class=\\\"btn-length p-button-rounded p-button-warning\\\"\\r\\n            style=\\\"color:#ffc107;background:#fff;border: none;\\\"></button>\\r\\n        </span>\\r\\n        <span *ngIf=\\\"rowData.priority=='Low'\\\">\\r\\n          <button pButton pRipple data-toggle=\\\"tooltip\\\" title=\\\"{{rowData.priority}} Priority\\\" icon=\\\"pi pi-star\\\"\\r\\n            class=\\\"btn-length p-button-rounded p-button-warning\\\"\\r\\n            style=\\\"color:red;background:#fff;border: none;\\\"></button>\\r\\n        </span>\\r\\n        <span>\\r\\n          <a class=\\\"btn-length\\\"  (click)=\\\"showModalDialogVendor(rowData.reportId)\\\" *ngIf=\\\"rowData.vendor_add.length\\\">\\r\\n            <img src=\\\"./assets/img/eye.png\\\"></a>\\r\\n        </span>\\r\\n\\r\\n        <a (click)=\\\"showModalDialog1(rowData.note)\\\" tabindex=\\\"0\\\" data-toggle=\\\"popover\\\" data-trigger=\\\"focus\\\" title=\\\"\\\"\\r\\n          data-content=\\\"Srija note\\\" data-original-title=\\\"Note\\\"><img src=\\\"./assets/img/sticky.png\\\"></a>\\r\\n        <br>\\r\\n        <button data-toggle=\\\"tooltip\\\" title=\\\"{{rowData.vendor_add.length}} Submissions\\\" class=\\\"btn-length\\\"\\r\\n          style=\\\"color:white;background:#007bff;border:none\\\">{{rowData.vendor_add.length}}</button>\\r\\n\\r\\n        <button data-toggle=\\\"tooltip\\\" title=\\\"{{rowData.sclients}} Submitted to Client\\\" class=\\\"btn-length\\\"\\r\\n          style=\\\"color:white;background:purple;border:none\\\">{{rowData.sclients}}</button>\\r\\n        <button data-toggle=\\\"tooltip\\\" title=\\\"{{rowData.interviews}} Interview Schedule\\\"\\r\\n          style=\\\"color:white;background:green;border:none\\\">{{rowData.interviews}}</button>\\r\\n        <!-- <button pButton pRipple data-toggle=\\\"tooltip\\\" title=\\\"Status Change\\\" icon=\\\"pi  pi-tag \\\"\\r\\n          (click)=\\\"showModalDialog(rowData.note,rowData.priority,rowData.wStatus)\\\"\\r\\n          class=\\\"p-button-outlined p-button-secondary\\\" style=\\\"color:#007bff;background:#fff;border: none;\\\"></button><br> -->\\r\\n\\r\\n\\r\\n        <!-- <button pButton pRipple data-toggle=\\\"tooltip\\\" title=\\\"Note\\\" icon=\\\"pi pi-bookmark\\\"\\r\\n          (click)=\\\"showModalDialog1(rowData.note)\\\" class=\\\"p-button-outlined p-button-secondary\\\"\\r\\n          style=\\\"color:#007bff;background:#fff;border: none;\\\"></button> -->\\r\\n\\r\\n      </td>\\r\\n      <td style=\\\"color:#17a2b8;\\\">\\r\\n        {{calculateDiff(rowData.created_at)}}\\r\\n\\r\\n      </td>\\r\\n      <td>\\r\\n        <p>\\r\\n          <a href=\\\"https://portal.webmobilez.com/storage/app/uploads/resume/{{rowData.resume}}\\\" download\\r\\n            *ngIf=\\\"rowData.resume\\\"><img src=\\\"./assets/img/word.png\\\"></a>\\r\\n          <a href=\\\"https://portal.webmobilez.com/storage/app/uploads/otherDocument/{{rowData.otherDocument}}\\\" download\\r\\n            *ngIf=\\\"rowData.otherDocument\\\"><img src=\\\"./assets/img/idcard.png\\\"></a>\\r\\n          <a href=\\\"https://portal.webmobilez.com/storage/app/uploads/workauthorization/{{rowData.workAuthorization}}\\\"\\r\\n            download *ngIf=\\\"rowData.workAuthorization\\\"><img src=\\\"./assets/img/suitcase.png\\\"></a>\\r\\n        </p>\\r\\n\\r\\n\\r\\n\\r\\n        {{rowData.created_at | date }}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{rowData.consultatName }}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{rowData.consultantLastName }}\\r\\n      </td>\\r\\n      <td *ngFor=\\\"let col of columns\\\">\\r\\n        <div *ngIf=\\\"!col.editable\\\">\\r\\n          {{rowData|field:col}}\\r\\n        </div>\\r\\n\\r\\n        <p-cellEditor *ngIf=\\\"col.editable\\\">\\r\\n          <ng-template pTemplate=\\\"input\\\">\\r\\n            <div *ngIf=\\\"rowData|field:col as variable\\\">\\r\\n              <input pInputText type=\\\"text\\\" [(ngModel)]=\\\"variable\\\" required>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n          <ng-template pTemplate=\\\"output\\\">\\r\\n\\r\\n            {{rowData|field:col}}\\r\\n          </ng-template>\\r\\n        </p-cellEditor>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n</p-table>\\r\\n<p-confirmDialog key=\\\"confirm-drop-database\\\" header=\\\"Confirmation\\\" acceptLabel=\\\"Yes\\\" rejectLabel=\\\"No\\\"\\r\\n  [(visible)]=\\\"confirmDropDatabaseDialogVisible\\\"></p-confirmDialog>\\r\\n<p-dialog header=\\\"Status Change\\\" [(visible)]=\\\"displayModal\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '50vw'}\\\"\\r\\n  [baseZIndex]=\\\"10000\\\" [draggable]=\\\"false\\\" [resizable]=\\\"false\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"priority\\\">Priority:</label>\\r\\n        <input type=\\\"hidden\\\" name=\\\"reportidnote\\\" id=\\\"reportidnote\\\" value=\\\"224\\\">\\r\\n        <select class=\\\"form-control\\\" name=\\\"prioritypop\\\" [(ngModel)]=\\\"priority\\\">\\r\\n          <option value=\\\"\\\">--select--</option>\\r\\n          <option value=\\\"High\\\">High</option>\\r\\n          <option value=\\\"Medium\\\">Medium</option>\\r\\n          <option value=\\\"Low\\\">Low</option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"wStatus\\\">Status of Consultant:</label>\\r\\n        <select [(ngModel)]=\\\"wStatus\\\" class=\\\"form-control\\\" name=\\\"wStatus\\\" id=\\\"wStatus\\\">\\r\\n          <option value=\\\"\\\">--select--</option>\\r\\n          <option value=\\\"A\\\">Active</option>\\r\\n          <option value=\\\"R\\\">Removed From Webmobilez</option>\\r\\n          <option value=\\\"S\\\">selected from WebmobileZ</option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"notepop\\\">Note:</label>\\r\\n      <textarea class=\\\"form-control\\\" id=\\\"notepop\\\" name=\\\"notepop\\\">{{note}} </textarea>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"openpopupsubmit\\\">Submit</button>\\r\\n\\r\\n  <ng-template pTemplate=\\\"footer\\\">\\r\\n    <p-button icon=\\\"pi pi-check\\\" (click)=\\\"displayModal=true\\\" label=\\\"Yes\\\" class=\\\"p-button-text\\\"></p-button>\\r\\n    <p-button icon=\\\"pi pi-times\\\" (click)=\\\"displayModal=false\\\" label=\\\"No\\\"></p-button>\\r\\n  </ng-template>\\r\\n</p-dialog>\\r\\n<p-dialog header=\\\"Note\\\" [(visible)]=\\\"displayModal1\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '50vw'}\\\" [baseZIndex]=\\\"10000\\\"\\r\\n  [draggable]=\\\"false\\\" [resizable]=\\\"false\\\">\\r\\n\\r\\n  <p>{{note}}</p>\\r\\n  <ng-template pTemplate=\\\"footer\\\">\\r\\n    <p-button icon=\\\"pi pi-check\\\" (click)=\\\"displayModal1=true\\\" label=\\\"Yes\\\" class=\\\"p-button-text\\\"></p-button>\\r\\n    <p-button icon=\\\"pi pi-times\\\" (click)=\\\"displayModal1=false\\\" label=\\\"No\\\"></p-button>\\r\\n  </ng-template>\\r\\n</p-dialog>\\r\\n<p-dialog header=\\\"View Vendors\\\" [(visible)]=\\\"displayModalVendor\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '50vw'}\\\"\\r\\n  [baseZIndex]=\\\"10000\\\" [draggable]=\\\"false\\\" [resizable]=\\\"false\\\">\\r\\n\\r\\n  <p>Vendors</p>\\r\\n  <ng-template pTemplate=\\\"footer\\\">\\r\\n    <p-button icon=\\\"pi pi-check\\\" (click)=\\\"displayModal1=true\\\" label=\\\"Yes\\\" class=\\\"p-button-text\\\"></p-button>\\r\\n    <p-button icon=\\\"pi pi-times\\\" (click)=\\\"displayModal1=false\\\" label=\\\"No\\\"></p-button>\\r\\n  </ng-template>\\r\\n</p-dialog>\\r\\n\\r\\n<p-dialog [style]=\\\"{width: '75vw'}\\\" position=\\\"top\\\" [(visible)]=\\\"showDialog\\\" header=\\\"View Vendors Details\\\"\\r\\n  [closable]=\\\"true\\\" [modal]=\\\"true\\\" [resizable]=\\\"true\\\">\\r\\n  <div class=\\\"flexcolumn container\\\">\\r\\n    <p-table class=\\\"flexcolumn\\\" [value]=\\\"data\\\" [scrollable]=\\\"true\\\" [responsive]=\\\"false\\\">\\r\\n      <ng-template pTemplate=\\\"header\\\">\\r\\n        <tr>\\r\\n          <th><span>Created By</span></th>\\r\\n          <th><span>Vendor Company</span></th>\\r\\n          <th><span>Contact Name</span></th>\\r\\n          <th><span>End Client</span></th>\\r\\n          <th><span>Submission Rate</span></th>\\r\\n          <th><span>Status</span></th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template pTemplate=\\\"body\\\" let-record>\\r\\n        <tr>\\r\\n          <td><span *ngIf=\\\"record.user_details\\\">{{record.user_details.name}}</span></td>\\r\\n          <td>{{record.vendorCompanyName}}</td>\\r\\n          <td>{{record.vendorName}}</td>\\r\\n          <td>{{record.endClientName}}</td>\\r\\n          <td>{{record.submissionRate}}</td>\\r\\n          <td>{{record.vendorStatus}}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template pTemplate=\\\"summary\\\">\\r\\n        {{data.length}} Records\\r\\n      </ng-template>\\r\\n    </p-table>\\r\\n  </div>\\r\\n  <p-footer>\\r\\n    <button type=\\\"button\\\" pButton (click)=\\\"showDialog=false\\\" label=\\\"Close\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n\"","module.exports = \"<h4 class=\\\"remove-margin\\\"> Hot List </h4>\\r\\n<p-table #dt [columns]=\\\"cols\\\" scrollHeight=\\\"500px\\\"  [scrollable]=\\\"true\\\" [value]=\\\"products\\\" [loading]=\\\"loading\\\" [autoLayout]=\\\"true\\\" [resizableColumns]=\\\"true\\\" columnResizeMode=\\\"expand\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedProducts\\\">\\r\\n  <ng-template pTemplate=\\\"caption\\\">\\r\\n    <div class=\\\"p-d-flex\\\">\\r\\n      <button type=\\\"button\\\" pButton pRipple icon=\\\"pi pi-file-o\\\" (click)=\\\"dt.exportCSV()\\\" class=\\\"p-mr-2\\\" pTooltip=\\\"CSV\\\"\\r\\n        tooltipPosition=\\\"bottom\\\"></button>\\r\\n      <!-- <button type=\\\"button\\\" pButton pRipple icon=\\\"pi pi-file-excel\\\" (click)=\\\"exportExcel()\\\" class=\\\"p-button-success p-mr-2\\\"  pTooltip=\\\"XLS\\\" tooltipPosition=\\\"bottom\\\"></button> -->\\r\\n\\r\\n      <button type=\\\"button\\\" pButton pRipple icon=\\\"pi pi-filter\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"\\r\\n        class=\\\"p-button-info p-ml-auto\\\" pTooltip=\\\"Selection Only\\\" tooltipPosition=\\\"bottom\\\"></button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n    <tr>\\r\\n\\r\\n      <th *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{'width': col.width}\\\">\\r\\n        {{col.header}}\\r\\n      </th>\\r\\n      <th>Request Resume</th>\\r\\n\\r\\n    </tr>\\r\\n    <tr>\\r\\n\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'consultatName', 'startsWith')\\\"\\r\\n          placeholder=\\\"Name\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'technology', 'startsWith')\\\"\\r\\n          placeholder=\\\"Technology\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'experience', 'startsWith')\\\"\\r\\n          placeholder=\\\"Experience\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'state', 'startsWith')\\\"\\r\\n          placeholder=\\\"State\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'willingLocation', 'startsWith')\\\"\\r\\n          placeholder=\\\"Relocate\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, 'visaType', 'startsWith')\\\"\\r\\n          placeholder=\\\"Visa Type\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th></th>\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n    <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n      <td *ngFor=\\\"let col of columns\\\">\\r\\n        {{rowData[col.field]}}\\r\\n      </td>\\r\\n      <td><a >Request Resume</a></td>\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n</p-table>\\r\\n\"","module.exports = \"<h4 class=\\\"remove-margin\\\"> Schedule Interviews </h4>\\r\\n\\r\\n<p-table #dt1 [columns]=\\\"scrollableCols\\\" [autoLayout]=\\\"true\\\"  [value]=\\\"timeSheets\\\" [scrollable]=\\\"true\\\"\\r\\n[filterDelay]=\\\"0\\\" [globalFilterFields]=\\\"['consultatName']\\\" [resizableColumns]=\\\"true\\\" columnResizeMode=\\\"expand\\\" [reorderableColumns]=\\\"true\\\"\\r\\nscrollHeight=\\\"500px\\\"  dataKey=\\\"reportId\\\" editMode=\\\"row\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [showCurrentPageReport]=\\\"true\\\"\\r\\n[rowsPerPageOptions]=\\\"[10,25,50]\\\" [loading]=\\\"loading\\\">\\r\\n  <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n    <colgroup>\\r\\n\\r\\n      <col *ngFor=\\\"let col of columns\\\" style=\\\"width:200px\\\">\\r\\n      <col style=\\\"width:200px\\\">\\r\\n      <col style=\\\"width:200px\\\">\\r\\n    </colgroup>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n    <tr>\\r\\n      <th>Interview Date</th>\\r\\n      <th>Consultant Name</th>\\r\\n      <th>Created By</th>\\r\\n      <th *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{'width': col.width}\\\">\\r\\n        {{col.header}}\\r\\n      </th>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th> <input pInputText type=\\\"date\\\" (input)=\\\"dt1.filter($event.target.value, 'scheduleDate', 'startsWith')\\\"\\r\\n        placeholder=\\\"Schedule Date\\\" class=\\\"p-column-filter\\\"> </th>\\r\\n      <th>  <input pInputText type=\\\"text\\\" (input)=\\\"dt1.filter($event.target.value, 'consultant.consultatName', 'startsWith')\\\"\\r\\n        placeholder=\\\"Consultant Name\\\" class=\\\"p-column-filter\\\"></th>\\r\\n      <th>  <input pInputText type=\\\"text\\\" (input)=\\\"dt1.filter($event.target.value, 'user_details.name', 'startsWith')\\\"\\r\\n        placeholder=\\\"Created By\\\" class=\\\"p-column-filter\\\"></th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt1.filter($event.target.value, 'vendorCompanyName', 'startsWith')\\\"\\r\\n          placeholder=\\\"Company Name\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt1.filter($event.target.value, 'endClientName', 'startsWith')\\\"\\r\\n          placeholder=\\\"Name\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n\\r\\n      <th> <input pInputText type=\\\"text\\\" (input)=\\\"dt1.filter($event.target.value, 'consultant.technology', 'startsWith')\\\"\\r\\n          placeholder=\\\"Technology\\\" class=\\\"p-column-filter\\\"></th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt1.filter($event.target.value, 'endClientLocation', 'startsWith')\\\"\\r\\n          placeholder=\\\"End Client\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt1.filter($event.target.value, 'submissionRate', 'startsWith')\\\"\\r\\n          placeholder=\\\"Submission Rate\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" (input)=\\\"dt1.filter($event.target.value, 'actualRate', 'startsWith')\\\"\\r\\n          placeholder=\\\"Actual Rate\\\" class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      </tr>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-editing=\\\"editing\\\" let-ri=\\\"rowIndex\\\">\\r\\n\\r\\n    <tr [pEditableRow]=\\\"rowData\\\" [ngStyle]=\\\"{'background-color':getColor(rowData.reportStatus,rowData.adminStatus)}\\\"  >\\r\\n\\r\\n<td>{{rowData.scheduleDate | date }} {{rowData.timezone}} </td>\\r\\n<td>{{rowData.consultant.consultatName }} {{rowData.consultant.consultantLastName }}</td>\\r\\n<td>{{rowData.user_details.name}}<br>{{rowData.created_at | date}}</td>\\r\\n      <td *ngFor=\\\"let col of columns\\\" >\\r\\n\\r\\n              {{rowData|field:col}}\\r\\n\\r\\n\\r\\n      </td>\\r\\n\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n</p-table>\\r\\n<p-confirmDialog key=\\\"confirm-drop-database\\\" header=\\\"Confirmation\\\" acceptLabel=\\\"Yes\\\" rejectLabel=\\\"No\\\" [(visible)]=\\\"confirmDropDatabaseDialogVisible\\\"></p-confirmDialog>\\r\\n\"","module.exports = \"<p-toast position=\\\"bottom-right\\\"></p-toast>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h4 class=\\\"remove-margin\\\">Add Submissions </h4>\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <!-- <h5 class=\\\"card-title\\\">Edit Profile</h5> -->\\n\\n\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"registerUser()\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Choose Consultant:</label>\\n                <p-dropdown #dd [options]=\\\"states\\\" [(ngModel)]=\\\"selectedStates\\\" formControlName=\\\"state\\\"\\n                  [style]=\\\"{'width':'100%'}\\\" scrollHeight=\\\"400px\\\" filter=\\\"true\\\" filterBy=\\\"value,label\\\"\\n                  resetFilterOnHide=\\\"true\\\" (onFocus)=\\\"OnFocus()\\\" (onChange)=\\\"onChange($event)\\\"\\n                  (keydown)=\\\"statesUi($event)\\\">\\n                </p-dropdown>\\n                <!-- <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\" placeholder=\\\"State\\\" required> -->\\n                <div *ngIf=\\\"state.invalid && (state.dirty || state.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"state.errors?.required\\\">\\n                    Consultant is required.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.state }}</small>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Rate:</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{crate}}\\\" readonly>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Consultant Email:</label>\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" value=\\\"{{cemail}}\\\" readonly>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Consultant Number:</label>\\n                <input type=\\\"text\\\" value=\\\"{{cmobile}}\\\" class=\\\"form-control\\\" readonly>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Technology:</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{ctechnology}}\\\" readonly>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Choose Vendor:</label>\\n                <p-dropdown #df [options]=\\\"vendors\\\" [(ngModel)]=\\\"selectedVendors\\\" formControlName=\\\"vid\\\"\\n                  [style]=\\\"{'width':'100%'}\\\" scrollHeight=\\\"400px\\\" filter=\\\"true\\\" filterBy=\\\"value,label\\\"\\n                  resetFilterOnHide=\\\"true\\\" (onChange)=\\\"ChangeVendor($event)\\\" (keydown)=\\\"vendorsUi($event)\\\">\\n                </p-dropdown>\\n\\n              </div>\\n              <p-button (click)=\\\"showModalDialog()\\\" icon=\\\"pi pi-external-link\\\" label=\\\"Add Vendor\\\"></p-button>\\n\\n            </div>\\n            <div class=\\\"col-md-3\\\" *ngIf=\\\"df.value\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Choose Vendor Contacts:</label>\\n                <p-dropdown [options]=\\\"contacts\\\" [(ngModel)]=\\\"selectedContacts\\\" formControlName=\\\"vendorDetailId\\\"\\n                  [style]=\\\"{'width':'100%'}\\\" scrollHeight=\\\"400px\\\" filter=\\\"true\\\" filterBy=\\\"value,label\\\"\\n                  resetFilterOnHide=\\\"true\\\" (onChange)=\\\"ChangeContacts($event)\\\" (keydown)=\\\"contactsUi($event)\\\">\\n                </p-dropdown>\\n                <div *ngIf=\\\"vendorDetailId.invalid && (vendorDetailId.dirty || vendorDetailId.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"vendorDetailId.errors?.required\\\">\\n                    Contact is required.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.vendorDetailId }}</small>\\n\\n              </div>\\n              <p-button (click)=\\\"showModalDialog1()\\\" icon=\\\"pi pi-external-link\\\" label=\\\"Add Contact\\\"></p-button>\\n\\n            </div>\\n            <div class=\\\"col-md-2\\\" *ngIf=\\\"vcname\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Vendor Contact Name:</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{vcname}}\\\" readonly>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\" *ngIf=\\\"vmobile\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Vendor Mobile Number:</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{vmobile}}\\\" readonly>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Choose End CLient:</label>\\n                <p-dropdown #dfrf [options]=\\\"clients\\\" [(ngModel)]=\\\"selectedClients\\\" formControlName=\\\"clientId\\\"\\n                  [style]=\\\"{'width':'100%'}\\\" scrollHeight=\\\"400px\\\" filter=\\\"true\\\" filterBy=\\\"value,label\\\"\\n                  resetFilterOnHide=\\\"true\\\" (onChange)=\\\"ChangeClients($event)\\\" >\\n                </p-dropdown>\\n                <div *ngIf=\\\"clientId.invalid && (clientId.dirty || clientId.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"clientId.errors?.required\\\">\\n                    Client is required.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.clientId }}</small>\\n                <p-button (click)=\\\"showModalDialogClient()\\\" icon=\\\"pi pi-external-link\\\" label=\\\"Add Client\\\"></p-button>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>End CLient Location:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"endClientLocation\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"End Client Location\\\">\\n                <div *ngIf=\\\"endClientLocation.invalid && (endClientLocation.dirty || endClientLocation.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"endClientLocation.errors?.required\\\">\\n                    End ClientLocation is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.endClientLocation }}</small>\\n\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Actual Rate:</label>\\n                <input type=\\\"number\\\" formControlName=\\\"actualRate\\\" class=\\\"form-control\\\" placeholder=\\\"Actual Rate\\\">\\n                <div *ngIf=\\\"actualRate.invalid && (actualRate.dirty || actualRate.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"actualRate.errors?.required\\\">\\n                    ActualRate is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Submission Rate:</label>\\n                <input type=\\\"number\\\" formControlName=\\\"submissionRate\\\" class=\\\"form-control\\\" placeholder=\\\"Submit   Rate\\\">\\n                <div *ngIf=\\\"submissionRate.invalid && (submissionRate.dirty || submissionRate.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"submissionRate.errors?.required\\\">\\n                    submissionRate is required.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.submissionRate }}</small>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Vendor Status</label>\\n                <select #statusvalue class=\\\"form-control\\\" formControlName=\\\"vendorStatus\\\">\\n                  <option value=\\\"\\\">--select--</option>\\n                  <option value=\\\"Interview scheduled\\\">Interview scheduled</option>\\n                  <option value=\\\"Submitted to Client\\\">Submitted to Client</option>\\n                  <option value=\\\"Submitted to Vendor\\\">Submitted to Vendor</option>\\n                  <option value=\\\"Disqualified\\\">Disqualified</option>\\n                  <option value=\\\"Client rejected\\\">Client rejected</option>\\n                  <option value=\\\"Vendor Rejected\\\">Vendor Rejected</option>\\n                  <option value=\\\"Vendor screening call\\\">Vendor screening call</option>\\n                  <option value=\\\"Waiting for Evaluation\\\">Waiting for Evaluation</option>\\n                </select>\\n                <div *ngIf=\\\"vendorStatus.invalid && (vendorStatus.dirty || vendorStatus.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"vendorStatus.errors?.required\\\">\\n                    vendorStatus is required.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.vendorStatus }}</small>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\" *ngIf=\\\"(statusvalue.value=='Interview scheduled')\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Interview Schedule Date :</label>\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"scheduleDate\\\" placeholder=\\\"Interview Schedule Date\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\"  *ngIf=\\\"(statusvalue.value=='Interview scheduled')\\\">\\n              <div class=\\\"form-group\\\">\\n                <label> Time Zone :</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"timezone\\\">\\n\\n                  <option value=\\\"EST\\\">EST</option>\\n                  <option value=\\\"PST\\\">PST</option>\\n                  <option value=\\\"CST\\\">CST</option>\\n                  <option value=\\\"MST\\\">MST</option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Comments:</label>\\n                <textarea formControlName=\\\"vendorComments\\\" class=\\\"form-control\\\"></textarea>\\n                <div *ngIf=\\\"vendorComments.invalid && (vendorComments.dirty || vendorComments.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ vendorComments.jobExperience }}</small>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"update ml-auto mr-auto\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-round\\\" [disabled]=\\\"!registerForm.valid\\\">Submit\\n                Consultant</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<p-dialog header=\\\"Add New Vendor Contact\\\" [(visible)]=\\\"displayModal1\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '50vw'}\\\"\\n  [baseZIndex]=\\\"10000\\\" [draggable]=\\\"false\\\" [resizable]=\\\"false\\\">\\n  <form [formGroup]=\\\"registerContact\\\" (ngSubmit)=\\\"registerContactForm()\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Name:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"vendorcontactName\\\" placeholder=\\\"Vendor Contact Name\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label> Email:</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"vendorcontactEmail\\\"\\n            placeholder=\\\"Vendor Contact Email\\\">\\n          <div *ngIf=\\\"vendorcontactEmail.invalid && (vendorcontactEmail.dirty || vendorcontactEmail.touched)\\\"\\n            class=\\\"form-text text-muted\\\">\\n            <div *ngIf=\\\"vendorcontactEmail.errors?.required\\\">\\n              Email is required.\\n            </div>\\n          </div>\\n          <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.vendorcontactEmail }}</small>\\n\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Mobile Number:</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"vendorcontactMobile\\\" placeholder=\\\"Mobile Number\\\">\\n\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n        <div class=\\\"form-group\\\">\\n          <label> EXT:</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"vendorext\\\" placeholder=\\\"EXT\\\">\\n        </div>\\n      </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-round\\\" [disabled]=\\\"!registerContact.valid\\\">Add Vendor\\n      Contact</button>\\n  </form>\\n  <ng-template pTemplate=\\\"footer\\\">\\n    <p-button icon=\\\"pi pi-check\\\" (click)=\\\"displayModal=true\\\" label=\\\"Yes\\\" class=\\\"p-button-text\\\"></p-button>\\n    <p-button icon=\\\"pi pi-times\\\" (click)=\\\"displayModal=false\\\" label=\\\"No\\\"></p-button>\\n  </ng-template>\\n</p-dialog>\\n<p-dialog header=\\\"Add New Vendor\\\" [(visible)]=\\\"displayModal\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '50vw'}\\\"\\n  [baseZIndex]=\\\"10000\\\" [draggable]=\\\"false\\\" [resizable]=\\\"false\\\">\\n\\n  <form [formGroup]=\\\"registerVendor\\\" (ngSubmit)=\\\"registerVendorCompany()\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Company Name:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"vendorCompanyName\\\" placeholder=\\\"Vendor Company Name\\\">\\n          <div *ngIf=\\\"vendorCompanyName.invalid && (vendorCompanyName.dirty || vendorCompanyName.touched)\\\"\\n            class=\\\"form-text text-muted\\\">\\n            <div *ngIf=\\\"vendorCompanyName.errors?.required\\\">\\n              Company Name is required.\\n            </div>\\n          </div>\\n          <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.vendorCompanyName }}</small>\\n\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Vendor Name:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contactName\\\" placeholder=\\\"Vendor Contact Name\\\">\\n\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label> Email:</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"contactEmail\\\" placeholder=\\\"Vendor Contact Email\\\">\\n          <div *ngIf=\\\"contactEmail.invalid && (contactEmail.dirty || contactEmail.touched)\\\"\\n            class=\\\"form-text text-muted\\\">\\n            <div *ngIf=\\\"contactEmail.errors?.required\\\">\\n              Email is required.\\n            </div>\\n          </div>\\n          <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.contactEmail }}</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Mobile Number:</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"contactMobile\\\" placeholder=\\\"Mobile Number\\\">\\n          <div *ngIf=\\\"contactMobile.invalid && (contactEmail.dirty || contactMobile.touched)\\\"\\n            class=\\\"form-text text-muted\\\">\\n            <div *ngIf=\\\"contactMobile.errors?.required\\\">\\n              Mobile Number is required.\\n            </div>\\n          </div>\\n          <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.contactMobile }}</small>\\n\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n        <div class=\\\"form-group\\\">\\n          <label> EXT:</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"ext\\\" placeholder=\\\"EXT\\\">\\n        </div>\\n      </div>\\n\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-round\\\" [disabled]=\\\"!registerVendor.valid\\\">Add Vendor</button>\\n  </form>\\n\\n\\n\\n\\n\\n\\n  <ng-template pTemplate=\\\"footer\\\">\\n    <p-button icon=\\\"pi pi-check\\\" (click)=\\\"displayModal=true\\\" label=\\\"Yes\\\" class=\\\"p-button-text\\\"></p-button>\\n    <p-button icon=\\\"pi pi-times\\\" (click)=\\\"displayModal=false\\\" label=\\\"No\\\"></p-button>\\n  </ng-template>\\n</p-dialog>\\n\\n<p-dialog header=\\\"Add Client\\\" [(visible)]=\\\"displayModalClient\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '50vw'}\\\"\\n  [baseZIndex]=\\\"10000\\\" [draggable]=\\\"false\\\" [resizable]=\\\"false\\\">\\n  <form [formGroup]=\\\"registerClient\\\" (ngSubmit)=\\\"registerClientForm()\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Client Name:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"clientName\\\" placeholder=\\\"Client Name\\\">\\n          <div *ngIf=\\\"clientName.invalid && (clientName.dirty || clientName.touched)\\\"\\n          class=\\\"form-text text-muted\\\">\\n          <div *ngIf=\\\"clientName.errors?.required\\\">\\n            Client Name is required.\\n          </div>\\n        </div>\\n        <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.clientName }}</small>\\n        </div>\\n      </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-round\\\" [disabled]=\\\"!registerClient.valid\\\">Add Client</button>\\n  </form>\\n  <ng-template pTemplate=\\\"footer\\\">\\n    <p-button icon=\\\"pi pi-check\\\" (click)=\\\"displayModal=true\\\" label=\\\"Yes\\\" class=\\\"p-button-text\\\"></p-button>\\n    <p-button icon=\\\"pi pi-times\\\" (click)=\\\"displayModal=false\\\" label=\\\"No\\\"></p-button>\\n  </ng-template>\\n</p-dialog>\\n\\n<p-table [columns]=\\\"cols\\\" [value]=\\\"data\\\"  [scrollable]=\\\"true\\\"\\n[filterDelay]=\\\"0\\\"  [resizableColumns]=\\\"true\\\" columnResizeMode=\\\"expand\\\" [reorderableColumns]=\\\"true\\\"\\nautoLayout=\\\"true\\\">\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\n      <tr>\\n          <th *ngFor=\\\"let col of columns\\\">\\n              {{col.header}}\\n          </th>\\n      </tr>\\n  </ng-template>\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n      <tr>\\n          <td *ngFor=\\\"let col of columns\\\">\\n            {{rowData|field:col}}\\n          </td>\\n      </tr>\\n  </ng-template>\\n\\n  <ng-template pTemplate=\\\"summary\\\">\\n      There are {{data?.length}} Submissions\\n  </ng-template>\\n</p-table>\\n\"","module.exports = \"<p-toast position=\\\"bottom-right\\\"></p-toast>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h4 class=\\\"remove-margin\\\">Edit Job Requirement </h4>\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <!-- <h5 class=\\\"card-title\\\">Edit Profile</h5> -->\\n\\n\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"updateUserDetails()\\\" enctype=\\\"multipart/form-data\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n\\n                <label>Job Title:</label>\\n                <input type=\\\"text\\\" formControlName=\\\"jobTitle\\\" class=\\\"form-control\\\" placeholder=\\\"Job Title\\\">\\n                <div *ngIf=\\\"jobTitle.invalid && (jobTitle.dirty || jobTitle.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobTitle.errors?.required\\\">\\n                    Title is required.\\n                  </div>\\n                  <div *ngIf=\\\"jobTitle.errors?.minlength\\\">\\n                    Title must be at least 2 characters long.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobTitle }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Experience:</label>\\n                <input type=\\\"number\\\" formControlName=\\\"jobExperience\\\" class=\\\"form-control\\\" placeholder=\\\"Exp\\\"\\n                  required>\\n                <div *ngIf=\\\"jobExperience.invalid && (jobExperience.dirty || jobExperience.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobExperience.errors?.required\\\">\\n                    Experience is required.\\n                  </div>\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobExperience }}</small>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <label>Technology</label>\\n              <p-dropdown #dd [options]=\\\"cars\\\" [(ngModel)]=\\\"selectedCar\\\" formControlName=\\\"jobTechnology\\\"\\n                [style]=\\\"{'width':'100%'}\\\" scrollHeight=\\\"400px\\\" filter=\\\"true\\\" filterBy=\\\"value,label\\\"\\n                resetFilterOnHide=\\\"true\\\" (onFocus)=\\\"OnFocus()\\\" (keydown)=\\\"test($event)\\\">\\n              </p-dropdown>\\n              <div *ngIf=\\\"jobTechnology.invalid && (jobTechnology.dirty || jobTechnology.touched)\\\" class=\\\"form-text text-muted\\\">\\n                <div *ngIf=\\\"jobTechnology.errors?.required\\\">\\n                  Technology is required.\\n                </div>\\n\\n              </div>\\n              <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobTechnology }}</small>\\n             </div>\\n             <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Visa Type:</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"jobVisaType\\\">\\n                  <option value=\\\"null\\\" disabled>Choose visaType</option>\\n                  <option value=\\\"H4 EAD\\\">H4 EAD\\n                  </option>\\n                  <option value=\\\"H1B-Transfer\\\">H1B-Transfer\\n                  </option>\\n                  <option value=\\\"CPT\\\">CPT\\n                  </option>\\n                  <option value=\\\"OPT\\\">OPT\\n                  </option>\\n                  <option value=\\\"H1-B\\\">H1-B\\n                  </option>\\n                  <option value=\\\"GC-EAD\\\">GC-EAD\\n                  </option>\\n                  <option value=\\\"Green Card\\\">Green Card\\n                  </option>\\n                  <option value=\\\"US Citizen\\\">US Citizen\\n                  </option>\\n\\n                </select>\\n                <div *ngIf=\\\"jobVisaType.invalid && (jobVisaType.dirty || jobVisaType.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobVisaType.errors?.required\\\">\\n                    Visa Type is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobVisaType }}</small>\\n              </div>\\n            </div>\\n\\n          </div>\\n          <div class=\\\"row\\\">\\n\\n\\n\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Location:</label>\\n                <p-dropdown #dd [options]=\\\"states\\\" [(ngModel)]=\\\"selectedStates\\\" formControlName=\\\"jobLocation\\\"\\n                  [style]=\\\"{'width':'100%'}\\\" scrollHeight=\\\"400px\\\" filter=\\\"true\\\" filterBy=\\\"value,label\\\"\\n                  resetFilterOnHide=\\\"true\\\" (onFocus)=\\\"OnFocus()\\\" (keydown)=\\\"statesUi($event)\\\">\\n                </p-dropdown>\\n                <!-- <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\" placeholder=\\\"State\\\" required> -->\\n                <div *ngIf=\\\"jobLocation.invalid && (jobLocation.dirty || jobLocation.touched)\\\" class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobLocation.errors?.required\\\">\\n                    Location is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobLocation }}</small>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Status</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"jobStatus\\\">\\n                  <option value=\\\"null\\\">--select--</option>\\n                  <option value=\\\"A\\\">Active</option>\\n                  <option value=\\\"I\\\">InActive</option>\\n                </select>\\n                <div *ngIf=\\\"jobStatus.invalid && (jobStatus.dirty || jobStatus.touched)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  <div *ngIf=\\\"jobStatus.errors?.required\\\">\\n                    Status is required.\\n                  </div>\\n\\n                </div>\\n                <small class=\\\"form-text text-muted\\\" *ngIf=\\\"serverErrors\\\">{{ serverErrors.jobStatus }}</small>\\n\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Job Description</label>\\n                <textarea formControlName=\\\"jobDescription\\\" class=\\\"form-control\\\"></textarea>\\n              </div>\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"update ml-auto mr-auto\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-round\\\" [disabled]=\\\"!registerForm.valid\\\">Update\\n                Job</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n\"","module.exports = \"<p-toast position=\\\"bottom-right\\\"></p-toast>\\r\\n\\r\\n<p-table #dt [columns]=\\\"scrollableCols\\\" scrollHeight=\\\"500px\\\"  [autoLayout]=\\\"true\\\" [value]=\\\"timeSheets\\\"\\r\\n  [scrollable]=\\\"true\\\" [filterDelay]=\\\"0\\\" [globalFilterFields]=\\\"['consultatName']\\\" [resizableColumns]=\\\"true\\\"\\r\\n  columnResizeMode=\\\"expand\\\" [reorderableColumns]=\\\"true\\\" [lazy]=\\\"true\\\" (onLazyLoad)=\\\"loadCarsLazy($event)\\\"\\r\\n  [paginator]=\\\"true\\\" [rows]=\\\"20\\\" [totalRecords]=\\\"totalRecords\\\" [loading]=\\\"loading\\\"\\r\\n  currentPageReportTemplate=\\\"Total {{totalRecords}} entries\\\" [showCurrentPageReport]=\\\"true\\\"\\r\\n  [style]=\\\"{'text-align': 'center', 'font-size': '14px'}\\\"  [loading]=\\\"loading\\\">\\r\\n  <ng-template pTemplate=\\\"caption\\\" let-title>\\r\\n    <span class=\\\"text-right\\\" *ngIf=\\\"totalRecords\\\">Total {{totalRecords}} Consultant Submissions </span>\\r\\n    <a routerLink=\\\"/benchsales/create\\\" class=\\\"btn btn-primary\\\">\\r\\n      Add Submission\\r\\n    </a>\\r\\n</ng-template>\\r\\n  <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n    <colgroup>\\r\\n      <col style=\\\"width:90px\\\">\\r\\n      <col *ngFor=\\\"let col of columns\\\" style=\\\"width:200px\\\">\\r\\n      <col style=\\\"width:200px\\\">\\r\\n      <col style=\\\"width:200px\\\">\\r\\n    </colgroup>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n    <tr>\\r\\n      <th>Action</th>\\r\\n      <th></th>\\r\\n      <th>Consultant</th>\\r\\n\\r\\n      <th *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{'width': col.width}\\\">\\r\\n        {{col.header}}\\r\\n      </th>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th> <button (click)=\\\"clearFilters(dt)\\\">Clear Fields</button></th>\\r\\n      <th> <input pInputText type=\\\"date\\\" [value]=\\\"dt.filters['created_at'] ? dt.filters['created_at'].value : ''\\\"\\r\\n          (input)=\\\"dt.filter($event.target.value, 'created_at', 'startsWith')\\\" placeholder=\\\"Created At\\\"\\r\\n          class=\\\"p-column-filter\\\"></th>\\r\\n      <th>\\r\\n        <!-- <input pInputText type=\\\"text\\\"\\r\\n          [value]=\\\"dt.filters['consultant.consultatName'] ? dt.filters['consultant.consultatName'].value : ''\\\"\\r\\n          (input)=\\\"dt.filter($event.target.value, 'consultant.consultatName', 'startsWith')\\\" placeholder=\\\"First Name\\\"\\r\\n          class=\\\"p-column-filter\\\"> -->\\r\\n        <p-dropdown  appendTo=\\\"body\\\" [options]=\\\"cities\\\"  [(ngModel)]=\\\"selectedCity\\\" [filter]=\\\"true\\\" filterBy=\\\"label,value\\\"\\r\\n          [autoWidth]=\\\"false\\\" [style]=\\\"pDropdownStyle\\\"\\r\\n          (onChange)=\\\"dt.filter($event.value, 'reportId', 'startsWith')\\\" placeholder=\\\"Choose Consultant\\\"\\r\\n          class=\\\"p-column-filter\\\"></p-dropdown>\\r\\n      </th>\\r\\n\\r\\n      <th>\\r\\n        <p-multiSelect appendTo=\\\"body\\\"  [options]=\\\"statusesVendor\\\"  [(ngModel)]=\\\"selectedStatus\\\" [filter]=\\\"true\\\" filterBy=\\\"label,value\\\"\\r\\n          [style]=\\\"pDropdownStyle\\\"\\r\\n          (onChange)=\\\"dt.filter($event.value, 'vendorStatus', 'startsWith')\\\" placeholder=\\\"Choose Status\\\"\\r\\n          class=\\\"p-column-filter\\\"></p-multiSelect>\\r\\n\\r\\n\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\"\\r\\n          [value]=\\\"dt.filters['consultant.technology'] ? dt.filters['consultant.technology'].value : ''\\\"\\r\\n          (input)=\\\"dt.filter($event.target.value, 'consultant.technology', 'startsWith')\\\" placeholder=\\\"Technology\\\"\\r\\n          class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\"\\r\\n          [value]=\\\"dt.filters['vendorCompanyName'] ? dt.filters['vendorCompanyName'].value : ''\\\"\\r\\n          (input)=\\\"dt.filter($event.target.value, 'vendorCompanyName', 'startsWith')\\\" placeholder=\\\"Company Name\\\"\\r\\n          class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['vendorName'] ? dt.filters['vendorName'].value : ''\\\"\\r\\n          (input)=\\\"dt.filter($event.target.value, 'vendorName', 'startsWith')\\\" placeholder=\\\"Name\\\"\\r\\n          class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['vendorEmail'] ? dt.filters['vendorEmail'].value : ''\\\"\\r\\n          (input)=\\\"dt.filter($event.target.value, 'vendorEmail', 'startsWith')\\\" placeholder=\\\"Vendor Email\\\"\\r\\n          class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\"\\r\\n          [value]=\\\"dt.filters['vendorMobileNumber'] ? dt.filters['vendorMobileNumber'].value : ''\\\"\\r\\n          (input)=\\\"dt.filter($event.target.value, 'vendorMobileNumber', 'startsWith')\\\" placeholder=\\\"Vendor Mobile\\\"\\r\\n          class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['endClientName'] ? dt.filters['endClientName'].value : ''\\\"\\r\\n          (input)=\\\"dt.filter($event.target.value, 'endClientName', 'startsWith')\\\" placeholder=\\\"End Clinet\\\"\\r\\n          class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['actualRate'] ? dt.filters['actualRate'].value : ''\\\"\\r\\n          (input)=\\\"dt.filter($event.target.value, 'actualRate', 'startsWith')\\\" placeholder=\\\"actualRate\\\"\\r\\n          class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n      <th>\\r\\n        <input pInputText type=\\\"text\\\" [value]=\\\"dt.filters['submissionRate'] ? dt.filters['submissionRate'].value : ''\\\"\\r\\n          (input)=\\\"dt.filter($event.target.value, 'submissionRate', 'startsWith')\\\" placeholder=\\\"submissionRate\\\"\\r\\n          class=\\\"p-column-filter\\\">\\r\\n      </th>\\r\\n\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-editing=\\\"editing\\\" let-ri=\\\"rowIndex\\\">\\r\\n\\r\\n    <tr [pEditableRow]=\\\"rowData\\\" [ngStyle]=\\\"{'background-color':getColor(rowData.reportStatus,rowData.adminStatus)}\\\">\\r\\n      <td style=\\\"text-align:center\\\">\\r\\n\\r\\n        <a (click)=\\\"showModalDialog(rowData)\\\" class=\\\"btn btn-warning btn-sm\\\">Edit</a>\\r\\n        <a (click)=\\\"showModalDialog1(rowData.vendorComments)\\\" tabindex=\\\"0\\\" data-toggle=\\\"popover\\\" data-trigger=\\\"focus\\\"\\r\\n          title=\\\"\\\" data-original-title=\\\"Note\\\"><img src=\\\"./assets/img/sticky.png\\\"></a>\\r\\n      </td>\\r\\n      <td>\\r\\n        {{rowData.created_at|date}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{rowData.consultant.consultatName}} {{rowData.consultant.consultantLastName}}\\r\\n      </td>\\r\\n      <td *ngFor=\\\"let col of columns\\\">\\r\\n        {{rowData|field:col}}\\r\\n      </td>\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n</p-table>\\r\\n<p-confirmDialog key=\\\"confirm-drop-database\\\" header=\\\"Confirmation\\\" acceptLabel=\\\"Yes\\\" rejectLabel=\\\"No\\\"\\r\\n  [(visible)]=\\\"confirmDropDatabaseDialogVisible\\\"></p-confirmDialog>\\r\\n\\r\\n<p-dialog header=\\\"Status Change\\\" [(visible)]=\\\"displayModal\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '50vw'}\\\"\\r\\n  [baseZIndex]=\\\"10000\\\" [draggable]=\\\"false\\\" [resizable]=\\\"false\\\">\\r\\n  <h5> {{heading1}}</h5>\\r\\n  <form [formGroup]=\\\"registerVendor\\\" (ngSubmit)=\\\"registerUser(submissionId)\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-12\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"popstatus\\\">Status:</label>\\r\\n\\r\\n          <select class=\\\"form-control\\\" #seleectevalue formControlName=\\\"vendorStatus\\\">\\r\\n            <option value=\\\"\\\">--select--</option>\\r\\n            <option value=\\\"Placed\\\">Placed</option>\\r\\n            <option value=\\\"Interview scheduled\\\">Interview scheduled</option>\\r\\n            <option value=\\\"Submitted to Client\\\">Submitted to Client</option>\\r\\n            <option value=\\\"Submitted to Vendor\\\">Submitted to Vendor</option>\\r\\n            <option value=\\\"Disqualified\\\">Disqualified</option>\\r\\n            <option value=\\\"Client rejected\\\">Client rejected</option>\\r\\n            <option value=\\\"Vendor Rejected\\\">Vendor Rejected</option>\\r\\n            <option value=\\\"Vendor screening call\\\">Vendor screening call</option>\\r\\n            <option value=\\\"Waiting for Evaluation\\\">Waiting for Evaluation</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-8\\\" *ngIf=\\\"seleectevalue.value == 'Interview scheduled'\\\">\\r\\n        <div class=\\\"form-group schedulepopdiv\\\">\\r\\n          <label for=\\\"schedulepop\\\">Schedule Date:</label>\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"scheduleDate\\\" value=\\\"2020-11-21 10:43:17\\\"><br>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-4\\\" *ngIf=\\\"seleectevalue.value == 'Interview scheduled'\\\">\\r\\n        <div class=\\\"form-group schedulepopdiv\\\">\\r\\n          <label for=\\\"timezone\\\">Time Zone:</label>\\r\\n          <select class=\\\"form-control\\\" formControlName=\\\"timezone\\\">\\r\\n            <option value=\\\"\\\">Choose Time Zone</option>\\r\\n            <option value=\\\"EST\\\">EST</option>\\r\\n            <option value=\\\"PST\\\">PST</option>\\r\\n            <option value=\\\"CST\\\">CST</option>\\r\\n            <option value=\\\"MST\\\">MST</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-12\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"notepop\\\">Comment:</label>\\r\\n          <textarea class=\\\"form-control\\\" formControlName=\\\"vendorComments\\\"></textarea>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-round\\\">Update</button>\\r\\n  </form>\\r\\n\\r\\n\\r\\n  <ng-template pTemplate=\\\"footer\\\">\\r\\n    <p-button icon=\\\"pi pi-check\\\" (click)=\\\"displayModal=true\\\" label=\\\"Yes\\\" class=\\\"p-button-text\\\"></p-button>\\r\\n    <p-button icon=\\\"pi pi-times\\\" (click)=\\\"displayModal=false\\\" label=\\\"No\\\"></p-button>\\r\\n  </ng-template>\\r\\n</p-dialog>\\r\\n\\r\\n<p-dialog header=\\\"Note\\\" [(visible)]=\\\"displayModal1\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '50vw'}\\\" [baseZIndex]=\\\"10000\\\"\\r\\n  [draggable]=\\\"false\\\" [resizable]=\\\"false\\\">\\r\\n\\r\\n  <p>{{comment}}</p>\\r\\n  <ng-template pTemplate=\\\"footer\\\">\\r\\n    <p-button icon=\\\"pi pi-check\\\" (click)=\\\"displayModal1=true\\\" label=\\\"Yes\\\" class=\\\"p-button-text\\\"></p-button>\\r\\n    <p-button icon=\\\"pi pi-times\\\" (click)=\\\"displayModal1=false\\\" label=\\\"No\\\"></p-button>\\r\\n  </ng-template>\\r\\n</p-dialog>\\r\\n\"","module.exports = \":host ::ng-deep .p-cell-editing {\\n  padding-top: 0 !important;\\n  padding-bottom: 0 !important;\\n}\\n\\n.disable-td {\\n  pointer-events: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYmVuY2hzYWxlcy9jb250YWN0cy91c2VyLWxpc3QvQzpcXHhhbXBwXFxodGRvY3NcXHNlcC1iYXJcXGFuZy9zcmNcXGFwcFxcYWRtaW5cXGJlbmNoc2FsZXNcXGNvbnRhY3RzXFx1c2VyLWxpc3RcXHVzZXItbGlzdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYWRtaW4vYmVuY2hzYWxlcy9jb250YWN0cy91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7RUFDQSw0QkFBQTtBQ0NGOztBRENBO0VBQ0Usb0JBQUE7QUNFRiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2JlbmNoc2FsZXMvY29udGFjdHMvdXNlci1saXN0L3VzZXItbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IDo6bmctZGVlcCAucC1jZWxsLWVkaXRpbmcge1xyXG4gIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7XHJcbiAgcGFkZGluZy1ib3R0b206IDAgIWltcG9ydGFudDtcclxufVxyXG4uZGlzYWJsZS10ZHtcclxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxufVxyXG4iLCI6aG9zdCA6Om5nLWRlZXAgLnAtY2VsbC1lZGl0aW5nIHtcbiAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDtcbiAgcGFkZGluZy1ib3R0b206IDAgIWltcG9ydGFudDtcbn1cblxuLmRpc2FibGUtdGQge1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn0iXX0= */\"","import { Component,  TemplateRef, OnInit, ViewChild, Output, EventEmitter,Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserRestService } from '../user-rest.service';\r\nimport { Table } from 'primeng/table';\r\nimport { FormBuilder,FormGroup,FormControl } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { ConfirmationService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [MessageService,ConfirmationService],\r\n\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class ContactListComponent implements OnInit {\r\n\r\n  products: any[];\r\n\r\n  selectedProducts: any[];\r\n\r\n  constructor( private confirmation: ConfirmationService,private fb: FormBuilder,private messageService: MessageService, private route: ActivatedRoute, private userRest: UserRestService,\r\n    private router: Router) { }\r\n\r\n  cols: any[];\r\n\r\n  loading: boolean = true;\r\n  exportColumns: any[];\r\n\r\n  ngOnInit() {\r\n    this.userRest.getVendorContacts().subscribe(\r\n      (response) => { console.log(this.products = response.contacts); this.loading=false;  },\r\n      (error) => { console.log(error) }\r\n    );\r\n\r\n\r\n      this.cols = [\r\n\r\n          { field: 'contactName', header: 'Name' },\r\n          { field: 'contactMobile', header: 'Mobile Number' },\r\n       //   { field: 'consultatMobileNumber', header: 'MobileNumber' },\r\n        //  { field: 'consultantEmail', header: 'Email' },\r\n          { field: 'contactEmail', header: 'Email' },\r\n\r\n\r\n      ];\r\n\r\n      this.exportColumns = this.cols.map(col => ({title: col.header, dataKey: col.field}));\r\n  }\r\n\r\n\r\n/*\r\n  exportExcel() {\r\n      import(\"xlsx\").then(xlsx => {\r\n          const worksheet = xlsx.utils.json_to_sheet(this.products);\r\n          const workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n          const excelBuffer: any = xlsx.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n          this.saveAsExcelFile(excelBuffer, \"Consultants\");\r\n      });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n      import(\"file-saver\").then(FileSaver => {\r\n          let EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n          let EXCEL_EXTENSION = '.xlsx';\r\n          const data: Blob = new Blob([buffer], {\r\n              type: EXCEL_TYPE\r\n          });\r\n          FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n      }); */\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport {environment} from \"../../../../environments/environment\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRestService {\n  users: Array<{id: number, name: string, email: string}> = [];\n  constructor(private http: HttpClient) { }\n\n\n  getConsultants(): Observable<any> {\n    return this.http.get(`${environment.api}/getHotlistConsultants/`);\n  }\n  getVendorContacts(): Observable<any> {\n    return this.http.get(`${environment.api}/contacts/`);\n  }\n statusChangeConsultant(index): Observable<any> {\n  var body = 'index='+index;\n    return this.http.post(`${environment.api}/status-consultant`,JSON.stringify({\n      cmd: \"sa\",\n      data: \"sd\"}));\n  }\n}\n","module.exports = \":host ::ng-deep .p-cell-editing {\\n  padding-top: 0 !important;\\n  padding-bottom: 0 !important;\\n}\\n\\n.disable-td {\\n  pointer-events: none;\\n}\\n\\n.ui-button {\\n  margin-left: 0.1rem;\\n  margin-right: 0.1rem;\\n}\\n\\n.btn-length {\\n  margin-right: 5px;\\n  padding-right: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYmVuY2hzYWxlcy9kb2N1bWVudHMvdXNlci1saXN0L0M6XFx4YW1wcFxcaHRkb2NzXFxzZXAtYmFyXFxhbmcvc3JjXFxhcHBcXGFkbWluXFxiZW5jaHNhbGVzXFxkb2N1bWVudHNcXHVzZXItbGlzdFxcdXNlci1saXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hZG1pbi9iZW5jaHNhbGVzL2RvY3VtZW50cy91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7RUFDQSw0QkFBQTtBQ0NGOztBRENBO0VBQ0Usb0JBQUE7QUNFRjs7QURBQTtFQUNFLG1CQUFBO0VBQ0Esb0JBQUE7QUNHRjs7QUREQTtFQUVFLGlCQUFBO0VBQ0EsbUJBQUE7QUNHRiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2JlbmNoc2FsZXMvZG9jdW1lbnRzL3VzZXItbGlzdC91c2VyLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCA6Om5nLWRlZXAgLnAtY2VsbC1lZGl0aW5nIHtcclxuICBwYWRkaW5nLXRvcDogMCAhaW1wb3J0YW50O1xyXG4gIHBhZGRpbmctYm90dG9tOiAwICFpbXBvcnRhbnQ7XHJcbn1cclxuLmRpc2FibGUtdGR7XHJcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbn1cclxuLnVpLWJ1dHRvbiB7XHJcbiAgbWFyZ2luLWxlZnQ6IDAuMTByZW07XHJcbiAgbWFyZ2luLXJpZ2h0OiAwLjEwcmVtO1xyXG59XHJcbi5idG4tbGVuZ3RoXHJcbntcclxuICBtYXJnaW4tcmlnaHQ6IDVweDtcclxuICBwYWRkaW5nLXJpZ2h0OjEwcHg7XHJcbn1cclxuIiwiOmhvc3QgOjpuZy1kZWVwIC5wLWNlbGwtZWRpdGluZyB7XG4gIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG5cbi5kaXNhYmxlLXRkIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5cbi51aS1idXR0b24ge1xuICBtYXJnaW4tbGVmdDogMC4xcmVtO1xuICBtYXJnaW4tcmlnaHQ6IDAuMXJlbTtcbn1cblxuLmJ0bi1sZW5ndGgge1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgcGFkZGluZy1yaWdodDogMTBweDtcbn0iXX0= */\"","import { Component, TemplateRef, OnInit, ViewChild, Output, EventEmitter, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserRestService } from '../user-rest.service';\r\nimport { Table } from 'primeng/table';\r\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\r\n\r\nimport { MessageService } from 'primeng/api';\r\n\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { ScrollableView } from 'primeng/table';\r\n\r\n\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3',\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF',\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-user-list',\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [MessageService, ConfirmationService],\r\n\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class DocumentBenchListComponent implements OnInit {\r\n  @ViewChild('dt', { static: true }) table: Table;\r\n  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\r\n  timeSheets: Array<object> = [];\r\n  displayModal: boolean;\r\n  displayModal1: boolean;\r\n  displayModalVendor: boolean;\r\n  priority: any;\r\n  wStatus: any;\r\n  note: any;\r\n  confirmDropDatabaseDialogVisible = false;\r\n  statusOptions = [\r\n    // {label: \"Dot net Developer\",value: 'Dot net Developer'},\r\n    { label: \"Java Developer\", value: 'Java Developer' },\r\n    { label: \"QA Tester/QA Analyst\", value: 'QA Tester/QA Analyst' },\r\n    //  {label: \"Devops Engineer\",value: 'Devops Engineer'}\r\n  ];;\r\n  frozenCols: any[];\r\n  statuses: any[];\r\n  loading: boolean = true;\r\n  scrollableCols: any[];\r\n  clonedProducts: { [s: string]: any; } = {};\r\n  public showDialog: boolean\r\n\r\n  public data = [];\r\n  constructor(private confirmation: ConfirmationService, private fb: FormBuilder, private messageService: MessageService, private route: ActivatedRoute, private userRest: UserRestService,\r\n    private router: Router) { }\r\n  showModalDialog(note: any, priority: any, status: any) {\r\n    this.displayModal = true;\r\n    this.note = note;\r\n    this.priority = priority;\r\n    this.wStatus = status;\r\n  }\r\n  showModalDialog1(value: any) {\r\n    this.note = value;\r\n    console.log(value)\r\n    this.displayModal1 = true;\r\n  }\r\n  showModalDialogVendor(reportId: any) {\r\n    this.showDialog = true;\r\n    this.userRest.EditDocument(reportId).subscribe(\r\n      (response) => { console.log(this.data = response.submissions); this.loading = false; },\r\n      (error) => { console.log(error) }\r\n    );\r\n\r\n    //  this.displayModalVendor = true;\r\n  }\r\n  calculateDiff(dateSent) {\r\n    let currentDate = new Date();\r\n    dateSent = new Date(dateSent);\r\n\r\n    return Math.floor((Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate()) - Date.UTC(dateSent.getFullYear(), dateSent.getMonth(), dateSent.getDate())) / (1000 * 60 * 60 * 24));\r\n  }\r\n  getIntervIew(index) {\r\n    let count = 0;\r\n    const formData = new FormData();\r\n    formData.append(\"index\", index);\r\n    console.log(formData);\r\n    this.userRest.getTotalInterviewShecdules(formData).subscribe(\r\n      (response) => {\r\n        console.log(response); this.loading = false;\r\n        count = response.interviews;\r\n      },\r\n      (error) => { console.log(error) }\r\n    );\r\n    return count;\r\n  }\r\n  ngOnInit() {\r\n\r\n    this.userRest.getConsultants().subscribe(\r\n      (response) => { console.log(this.timeSheets = response.timesheet); this.loading = false; },\r\n      (error) => { console.log(error) }\r\n    );\r\n    this.frozenCols = [\r\n      { field: 'consultatName', header: 'Name' },\r\n    ];\r\n\r\n    this.scrollableCols = [\r\n      // { field: 'consultatName', header: 'Consultant Name', width: '20%',editable: true},\r\n      // { field: 'user_details.name', header: 'Created By', width: '20%',editable: false},\r\n      // { field: 'created_at', header: 'Created At' , width: '20%',editable: false},\r\n      { field: 'consultantEmail', header: 'Email', width: '40%', editable: true },\r\n      { field: 'consultatMobileNumber', header: 'Phone number', width: '20%', editable: true },\r\n      { field: 'experience', header: 'Exp', width: '20%', editable: true },\r\n      { field: 'reportStatus', header: 'Status', width: '20%', editable: false },\r\n      { field: 'state', header: 'State', width: '20%', editable: false },\r\n      { field: 'willingLocation', header: 'Relocate', width: '20%', editable: false },\r\n      { field: 'documentsCollected', header: 'Documents Collected', width: '20%', editable: false },\r\n      { field: 'resource', header: 'Resource', width: '20%', editable: false },\r\n      { field: 'ssn', header: 'Last 4 SSN', width: '20%', editable: false },\r\n    //  { field: 'bestContactNumber', header: 'Best Contact Number', width: '20%', editable: false },\r\n      { field: 'linkedInUrl', header: 'LinkedIn', width: '20%', editable: false },\r\n      { field: 'skypeId', header: 'skypeId', width: '20%', editable: false },\r\n      { field: 'rate', header: 'Rate', width: '20%', editable: false },\r\n      { field: 'technology', header: 'Technology', width: '20%', editable: false },\r\n      { field: 'visaType', header: 'visa Type', width: '20%', editable: false },\r\n      { field: 'city', header: 'City', width: '20%', editable: false }\r\n      //  { field: 'priority', header: 'priority', width: '20%' ,editable: false},\r\n\r\n    ];\r\n\r\n\r\n    this.statuses = [\r\n      { label: 'Unqualified', value: 'unqualified' },\r\n      { label: 'Qualified', value: 'qualified' },\r\n      { label: 'New', value: 'new' },\r\n      { label: 'Negotiation', value: 'negotiation' },\r\n      { label: 'Renewal', value: 'renewal' },\r\n      { label: 'Proposal', value: 'proposal' }\r\n    ]\r\n  }\r\n  onActivityChange(event) {\r\n    const value = event.target.value;\r\n    if (value && value.trim().length) {\r\n      const activity = parseInt(value);\r\n\r\n      if (!isNaN(activity)) {\r\n        this.table.filter(activity, 'activity', 'gte');\r\n      }\r\n    }\r\n  }\r\n  clearFilters(dt) {\r\n    dt.reset(); // reset the table\r\n  }\r\n  onRowEditInit(product: any) {\r\n    console.log(product)\r\n    this.clonedProducts[product.reportId] = { ...product };\r\n  }\r\n  onRowEditSave(product: any, index: number) {\r\n    //alert(product.timeSheetId)\r\n    /*this.loading = true;\r\n    if (product.duration < 16) {\r\n      let updateUser: FormGroup;\r\n      updateUser = new FormGroup({\r\n        'duration': new FormControl(product.duration),\r\n        'fromDate': new FormControl(product.fromDate),\r\n        'assignment': new FormControl(product.assignment),\r\n        'serviceCode': new FormControl(product.serviceCode),\r\n      });\r\n      this.userRest.updateTimeSheet(updateUser, product.timeSheetId).subscribe(\r\n        (response) => {\r\n          this.loading = false;\r\n          this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Timesheet is updated' });\r\n        },\r\n        (error) => {\r\n          console.log(error)\r\n          this.loading = false;\r\n          this.timeSheets[index] = this.clonedProducts[product.timeSheetId];\r\n          delete this.timeSheets[product.timeSheetId];\r\n          this.messageService.add({ severity: 'error', summary: 'Error', detail: error.error.message });\r\n        },\r\n        () => console.log('completed')\r\n      );\r\n\r\n    }\r\n    else {\r\n      this.loading = false;\r\n      this.timeSheets[index] = this.clonedProducts[product.timeSheetId];\r\n      delete this.timeSheets[product.timeSheetId];\r\n      this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Invalid Duration only 15 hours accepted' });\r\n    } */\r\n  }\r\n\r\n  onRowEditCancel(product: any, index: number) {\r\n    this.timeSheets[index] = this.clonedProducts[product.reportId];\r\n    delete this.timeSheets[product.reportId];\r\n  }\r\n\r\n  onRowSelected(evt: any) {\r\n\r\n    console.log(\"Content of the selected row...\", evt.data);\r\n  }\r\n\r\n\r\n  onDateSelect(value) {\r\n    this.table.filter(this.formatDate(value), 'created_at', 'equals')\r\n  }\r\n\r\n  formatDate(date) {\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n\r\n    if (month < 10) {\r\n      month = '0' + month;\r\n    }\r\n\r\n    if (day < 10) {\r\n      day = '0' + day;\r\n    }\r\n\r\n    return date.getFullYear() + '-' + month + '-' + day;\r\n  }\r\n\r\n  onRepresentativeChange(event) {\r\n    if (event.value) {\r\n      console.log(event.value)\r\n      this.table.filter(event.value, 'technology', 'in')\r\n    }\r\n\r\n  }\r\n\r\n  dropDatabase(event: Event, index: number) {\r\n    if (event.defaultPrevented) return;\r\n    event.preventDefault();\r\n\r\n    this.confirmation.confirm({\r\n      key: 'confirm-drop-database',\r\n      message: 'Are you sure to Aprove for Hotlist',\r\n      accept: () => { this._dropDatabase(index); },\r\n    });\r\n  }\r\n\r\n  private _dropDatabase(index) {\r\n\r\n    this.userRest.statusChangeConsultant(index).subscribe(\r\n      (response) => {\r\n        console.log(response); this.loading = false;\r\n        alert(\"Aproved\")\r\n      },\r\n      (error) => { console.log(error) }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport {environment} from \"../../../../environments/environment\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRestService {\n  users: Array<{id: number, name: string, email: string}> = [];\n  constructor(private http: HttpClient) { }\n  EditDocument(id): Observable<any> {\n    return this.http.get(`${environment.api}/submissions/`+ id);\n  }\n  getTotalInterviewShecdules(index): Observable<any> {\n      return this.http.post(`${environment.api}/getTotalInterviewShecdules`,index);\n    }\n\n  getConsultants(): Observable<any> {\n    return this.http.get(`${environment.api}/getAllConsultants/`);\n  }\n  storeUser(form): Observable<any> {\n    return this.http.post(`${environment.api}/store-consultant`,form.value);\n  }\n statusChangeConsultant(index): Observable<any> {\n  var body = 'index='+index;\n    return this.http.post(`${environment.api}/status-consultant`,JSON.stringify({\n      cmd: \"sa\",\n      data: \"sd\"}));\n  }\n}\n","module.exports = \":host ::ng-deep .p-cell-editing {\\n  padding-top: 0 !important;\\n  padding-bottom: 0 !important;\\n}\\n\\n.disable-td {\\n  pointer-events: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYmVuY2hzYWxlcy9ob3RsaXN0L3VzZXItbGlzdC9DOlxceGFtcHBcXGh0ZG9jc1xcc2VwLWJhclxcYW5nL3NyY1xcYXBwXFxhZG1pblxcYmVuY2hzYWxlc1xcaG90bGlzdFxcdXNlci1saXN0XFx1c2VyLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FkbWluL2JlbmNoc2FsZXMvaG90bGlzdC91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7RUFDQSw0QkFBQTtBQ0NGOztBRENBO0VBQ0Usb0JBQUE7QUNFRiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2JlbmNoc2FsZXMvaG90bGlzdC91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIC5wLWNlbGwtZWRpdGluZyB7XHJcbiAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDtcclxuICBwYWRkaW5nLWJvdHRvbTogMCAhaW1wb3J0YW50O1xyXG59XHJcbi5kaXNhYmxlLXRke1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG59XHJcbiIsIjpob3N0IDo6bmctZGVlcCAucC1jZWxsLWVkaXRpbmcge1xuICBwYWRkaW5nLXRvcDogMCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWJvdHRvbTogMCAhaW1wb3J0YW50O1xufVxuXG4uZGlzYWJsZS10ZCB7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufSJdfQ== */\"","import { Component,  TemplateRef, OnInit, ViewChild, Output, EventEmitter,Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserRestService } from '../user-rest.service';\r\n\r\n\r\nimport { FormBuilder,FormGroup,FormControl } from '@angular/forms';\r\n\r\nimport { MessageService } from 'primeng/api';\r\n\r\nimport { ConfirmationService } from 'primeng/api';\r\n\r\n\r\n\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3',\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF',\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-user-list',\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [MessageService,ConfirmationService],\r\n\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class HotListBenchComponent implements OnInit {\r\n\r\n  products: any[];\r\n\r\n  selectedProducts: any[];\r\n  loading: boolean = true;\r\n  constructor( private confirmation: ConfirmationService,private fb: FormBuilder,private messageService: MessageService, private route: ActivatedRoute, private userRest: UserRestService,\r\n    private router: Router) { }\r\n\r\n  cols: any[];\r\n\r\n  exportColumns: any[];\r\n\r\n  ngOnInit() {\r\n    this.userRest.getConsultants().subscribe(\r\n      (response) => { console.log(this.products = response.timesheet); this.loading=false; },\r\n      (error) => { console.log(error) }\r\n    );\r\n\r\n\r\n      this.cols = [\r\n\r\n          { field: 'consultatName', header: 'Name' },\r\n          { field: 'technology', header: 'Technology' },\r\n       //   { field: 'consultatMobileNumber', header: 'MobileNumber' },\r\n        //  { field: 'consultantEmail', header: 'Email' },\r\n          { field: 'experience', header: 'Experience' },\r\n          { field: 'state', header: 'state' },\r\n          { field: 'willingLocation', header: 'Relocate', width: '20%',editable: false },\r\n          { field: 'visaType', header: 'visa Type', width: '20%',editable: false },\r\n\r\n      ];\r\n\r\n      this.exportColumns = this.cols.map(col => ({title: col.header, dataKey: col.field}));\r\n  }\r\n\r\n\r\n/*\r\n  exportExcel() {\r\n      import(\"xlsx\").then(xlsx => {\r\n          const worksheet = xlsx.utils.json_to_sheet(this.products);\r\n          const workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n          const excelBuffer: any = xlsx.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n          this.saveAsExcelFile(excelBuffer, \"Consultants\");\r\n      });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n      import(\"file-saver\").then(FileSaver => {\r\n          let EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n          let EXCEL_EXTENSION = '.xlsx';\r\n          const data: Blob = new Blob([buffer], {\r\n              type: EXCEL_TYPE\r\n          });\r\n          FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n      }); */\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport {environment} from \"../../../../environments/environment\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRestService {\n  users: Array<{id: number, name: string, email: string}> = [];\n  constructor(private http: HttpClient) { }\n\n\n  getConsultants(): Observable<any> {\n    return this.http.get(`${environment.api}/getHotlistConsultants/`);\n  }\n\n statusChangeConsultant(index): Observable<any> {\n  var body = 'index='+index;\n    return this.http.post(`${environment.api}/status-consultant`,JSON.stringify({\n      cmd: \"sa\",\n      data: \"sd\"}));\n  }\n}\n","module.exports = \":host ::ng-deep .p-cell-editing {\\n  padding-top: 0 !important;\\n  padding-bottom: 0 !important;\\n}\\n\\n.disable-td {\\n  pointer-events: none;\\n}\\n\\n.ui-button {\\n  margin-left: 0.25rem;\\n  margin-right: 0.25rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYmVuY2hzYWxlcy9pbnRlcnZpZXdzL3VzZXItbGlzdC9DOlxceGFtcHBcXGh0ZG9jc1xcc2VwLWJhclxcYW5nL3NyY1xcYXBwXFxhZG1pblxcYmVuY2hzYWxlc1xcaW50ZXJ2aWV3c1xcdXNlci1saXN0XFx1c2VyLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FkbWluL2JlbmNoc2FsZXMvaW50ZXJ2aWV3cy91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7RUFDQSw0QkFBQTtBQ0NGOztBRENBO0VBQ0Usb0JBQUE7QUNFRjs7QURBQTtFQUNFLG9CQUFBO0VBQ0EscUJBQUE7QUNHRiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2JlbmNoc2FsZXMvaW50ZXJ2aWV3cy91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIC5wLWNlbGwtZWRpdGluZyB7XHJcbiAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDtcclxuICBwYWRkaW5nLWJvdHRvbTogMCAhaW1wb3J0YW50O1xyXG59XHJcbi5kaXNhYmxlLXRke1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG59XHJcbi51aS1idXR0b24ge1xyXG4gIG1hcmdpbi1sZWZ0OiAwLjI1cmVtO1xyXG4gIG1hcmdpbi1yaWdodDogMC4yNXJlbTtcclxufVxyXG4iLCI6aG9zdCA6Om5nLWRlZXAgLnAtY2VsbC1lZGl0aW5nIHtcbiAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDtcbiAgcGFkZGluZy1ib3R0b206IDAgIWltcG9ydGFudDtcbn1cblxuLmRpc2FibGUtdGQge1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cblxuLnVpLWJ1dHRvbiB7XG4gIG1hcmdpbi1sZWZ0OiAwLjI1cmVtO1xuICBtYXJnaW4tcmlnaHQ6IDAuMjVyZW07XG59Il19 */\"","import { Component,  TemplateRef, OnInit, ViewChild, Output, EventEmitter,Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserRestService } from '../user-rest.service';\r\nimport { Table } from 'primeng/table';\r\nimport { FormBuilder,FormGroup,FormControl } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { ConfirmationService } from 'primeng/api';\r\n\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3',\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF',\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-user-list',\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [MessageService,ConfirmationService],\r\n\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class InterviewBenchComponent implements OnInit {\r\n  @ViewChild('dt', { static: true }) table: Table;\r\n  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\r\n  timeSheets: Array<object> = [];\r\n  confirmDropDatabaseDialogVisible = false;\r\nstatusOptions = [\r\n   // {label: \"Dot net Developer\",value: 'Dot net Developer'},\r\n    {label: \"Java Developer\",value: 'Java Developer'},\r\n    {label: \"QA Tester/QA Analyst\",value: 'QA Tester/QA Analyst'},\r\n  //  {label: \"Devops Engineer\",value: 'Devops Engineer'}\r\n];;\r\n  frozenCols: any[];\r\n  statuses: any[];\r\n  loading: boolean = true;\r\n  scrollableCols: any[];\r\n  clonedProducts: { [s: string]: any; } = {};\r\n  constructor( private confirmation: ConfirmationService,private fb: FormBuilder,private messageService: MessageService, private route: ActivatedRoute, private userRest: UserRestService,\r\n     private router: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n\r\n    this.userRest.getConsultants().subscribe(\r\n      (response) => { console.log(this.timeSheets = response.submissions); this.loading = false; },\r\n      (error) => { console.log(error) }\r\n    );\r\n    this.frozenCols = [\r\n      { field: 'consultatName', header: 'Name' },\r\n  ];\r\n  this.scrollableCols = [\r\n   // { field: 'user_details.name', header: 'Created By', width: '20%',editable: false},\r\n   // { field: 'consultant.consultatName', header: 'Consultant Name', width: '20%',editable: false},\r\n   // { field: 'scheduleDate', header: 'Shedule Date', width: '20%',editable: false},\r\n   { field: 'vendorCompanyName', header: 'Company Name', width: '20%', editable: false },\r\n   { field: 'endClientName', header: 'End Client', width: '20%', editable: false },\r\n   { field: 'consultant.technology', header: 'Technology', width: '20%', editable: false },\r\n   { field: 'endClientLocation', header: 'End Client', width: '20%', editable: false },\r\n   { field: 'submissionRate', header: 'Submissio Rate', width: '20%', editable: true },\r\n   { field: 'actualRate', header: 'Actual Rate', width: '20%', editable: true },\r\n   { field: 'vendorStatus', header: 'Status', width: '40%', editable: true },\r\n\r\n\r\n];\r\n\r\n\r\n\r\n  this.statuses = [\r\n      {label: 'Unqualified', value: 'unqualified'},\r\n      {label: 'Qualified', value: 'qualified'},\r\n      {label: 'New', value: 'new'},\r\n      {label: 'Negotiation', value: 'negotiation'},\r\n      {label: 'Renewal', value: 'renewal'},\r\n      {label: 'Proposal', value: 'proposal'}\r\n  ]\r\n  }\r\n  onActivityChange(event) {\r\n    const value = event.target.value;\r\n    if (value && value.trim().length) {\r\n        const activity = parseInt(value);\r\n\r\n        if (!isNaN(activity)) {\r\n            this.table.filter(activity, 'activity', 'gte');\r\n        }\r\n    }\r\n}\r\nonRowEditInit(product: any) {\r\nconsole.log(product)\r\n  this.clonedProducts[product.reportId] = { ...product };\r\n}\r\nonRowEditSave(product: any, index: number) {\r\n  //alert(product.timeSheetId)\r\n  /*this.loading = true;\r\n  if (product.duration < 16) {\r\n    let updateUser: FormGroup;\r\n    updateUser = new FormGroup({\r\n      'duration': new FormControl(product.duration),\r\n      'fromDate': new FormControl(product.fromDate),\r\n      'assignment': new FormControl(product.assignment),\r\n      'serviceCode': new FormControl(product.serviceCode),\r\n    });\r\n    this.userRest.updateTimeSheet(updateUser, product.timeSheetId).subscribe(\r\n      (response) => {\r\n        this.loading = false;\r\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Timesheet is updated' });\r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n        this.loading = false;\r\n        this.timeSheets[index] = this.clonedProducts[product.timeSheetId];\r\n        delete this.timeSheets[product.timeSheetId];\r\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: error.error.message });\r\n      },\r\n      () => console.log('completed')\r\n    );\r\n\r\n  }\r\n  else {\r\n    this.loading = false;\r\n    this.timeSheets[index] = this.clonedProducts[product.timeSheetId];\r\n    delete this.timeSheets[product.timeSheetId];\r\n    this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Invalid Duration only 15 hours accepted' });\r\n  } */\r\n}\r\n\r\nonRowEditCancel(product: any, index: number) {\r\n  this.timeSheets[index] = this.clonedProducts[product.reportId];\r\n  delete this.timeSheets[product.reportId];\r\n}\r\n\r\n\r\n\r\n\r\nonDateSelect(value) {\r\n    this.table.filter(this.formatDate(value), 'created_at', 'equals')\r\n}\r\n\r\nformatDate(date) {\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n\r\n    if (month < 10) {\r\n        month = '0' + month;\r\n    }\r\n\r\n    if (day < 10) {\r\n        day = '0' + day;\r\n    }\r\n\r\n    return date.getFullYear() + '-' + month + '-' + day;\r\n}\r\n\r\nonRepresentativeChange(event) {\r\n  if(event.value)\r\n  {\r\n    console.log(event.value)\r\n    this.table.filter(event.value, 'technology', 'in')\r\n  }\r\n\r\n}\r\n\r\ndropDatabase(event: Event,index:number) {\r\n  if (event.defaultPrevented) return;\r\n  event.preventDefault();\r\n\r\n  this.confirmation.confirm({\r\n    key: 'confirm-drop-database',\r\n    message: 'Are you sure to Aprove for Hotlist',\r\n    accept: () => { this._dropDatabase(index); },\r\n  });\r\n}\r\n\r\nprivate _dropDatabase(index) {\r\n  const formData = new FormData();\r\n  formData.append(\"index\",index );\r\n  console.log(formData);\r\n  this.userRest.statusChangeConsultant(formData).subscribe(\r\n    (response) => { console.log(response); this.loading = false;\r\n      this.timeSheets = response.timesheet;\r\n    },\r\n    (error) => { console.log(error) }\r\n  );\r\n\r\n}\r\ndownload(event: Event,url:any)\r\n{\r\n\r\nwindow.open('https://portal.webmobilez.com/public/storage/'+url);\r\n\r\n}\r\n\r\ngetColor (status:string,adminStatus:string)\r\n{\r\n  if(adminStatus==\"A\")\r\n  {\r\n    return \"#d4edda\"\r\n  }else if(status==\"not interested\")\r\n  {\r\n    return \"#f8d7da\"\r\n  }\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport {environment} from \"../../../../environments/environment\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRestService {\n  users: Array<{id: number, name: string, email: string}> = [];\n  constructor(private http: HttpClient) { }\n\n\n  getConsultants(): Observable<any> {\n    return this.http.get(`${environment.api}/interviewsubmissions/`);\n  }\n  storeUser(form): Observable<any> {\n    return this.http.post(`${environment.api}/submissions`,form.value);\n  }\n statusChangeConsultant(index): Observable<any> {\n\n    return this.http.post(`${environment.api}/status-consultant`,index);\n  }\n  getConsultantsList(): Observable<any> {\n    return this.http.get(`${environment.api}/getConsultantsList/`);\n  }\n  editUser(id): Observable<any> {\n    return this.http.get(`${environment.api}/jobs/` + id);\n  }\n  editVenodr(id): Observable<any> {\n    return this.http.get(`${environment.api}/contacts/` + id);\n  }\n  editConsultant(id): Observable<any> {\n    return this.http.get(`${environment.api}/store-consultant/` + id);\n  }\n  updateUser(form,id): Observable<any> {\n    return this.http.put(`${environment.api}/jobs/` + id, form.value);\n  }\n  storeDocument(document): Observable<any> {\n\n    return this.http.post(`${environment.api}/saveDocument`, document);\n  }\n  getContactDetails(index): Observable<any> {\n\n    return this.http.post(`${environment.api}/contactsDetails`,index);\n  }\n\n}\n","module.exports = \".btn-length {\\n  margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYmVuY2hzYWxlcy91c2VyLWNyZWF0ZS9DOlxceGFtcHBcXGh0ZG9jc1xcc2VwLWJhclxcYW5nL3NyY1xcYXBwXFxhZG1pblxcYmVuY2hzYWxlc1xcdXNlci1jcmVhdGVcXHVzZXItY3JlYXRlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hZG1pbi9iZW5jaHNhbGVzL3VzZXItY3JlYXRlL3VzZXItY3JlYXRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUUsaUJBQUE7QUNBRiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2JlbmNoc2FsZXMvdXNlci1jcmVhdGUvdXNlci1jcmVhdGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLWxlbmd0aFxyXG57XHJcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbn1cclxuIiwiLmJ0bi1sZW5ndGgge1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbn0iXX0= */\"","import { Component, OnInit, ViewChild, ɵConsole } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserRestService } from '../user-rest.service';\nimport { SelectItem } from 'primeng/api';\nimport { SelectItemGroup } from 'primeng/api';\nimport { Calendar } from 'primeng/primeng';\nimport { FormGroup, FormControlName, Validators, FormControl } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\n\nexport class Profile {\n  constructor(public prId: string, public prName: string) {\n  }\n}\n@Component({\n  selector: 'app-user-create',\n  templateUrl: './user-create.component.html',\n  providers: [MessageService],\n  styleUrls: ['./user-create.component.scss']\n})\nexport class UserCreateComponent implements OnInit {\n  @ViewChild('dd', { static: true }) dropdown: any;\n\n  countries: any[];\n  selectedCountry: string;\n  cars: SelectItem[];\n  states: SelectItem[];\n  vendors: SelectItem[];\n  contacts: SelectItem[];\n  clients: SelectItem[];\n  selectedCar: SelectItem;\n  selectedStates: SelectItem;\n  selectedVendors: SelectItem;\n  selectedContacts: SelectItem;\n  selectedClients: SelectItem;\n  str: string;\n  counter = 0;\n  totalNumberOfCars: number;\n  formData: FormGroup;\n  crate: any;\n  cemail: any;\n  cmobile: any;\n  ctechnology: any;\n  vmobile: any;\n  vcname: any;\n  serverErrors = [];\n  imageFile: { link: string, file: any, name: string };\n  registerForm: FormGroup;\n  registerVendor: FormGroup;\n  registerContact: FormGroup;\n  registerForm1: FormGroup;\n  displayModal: boolean;\n  displayModal1: boolean;\n\n  registerClient: FormGroup;\n\n  displayModalClient: boolean;\n    data: any[];\n\n    cols: any[];\n\n  constructor(private route: ActivatedRoute, private messageService: MessageService, private userRest: UserRestService, private router: Router) { }\n\n  ngOnInit() {\n  this.cols = [\n    { field: 'user_details.name', header: 'Created By', width: '20%', editable: false },\n    { field: 'consultant.consultatName', header: 'Consultant Name', width: '20%', editable: false },\n    { field: 'consultant.technology', header: 'Technology', width: '20%', editable: false },\n    { field: 'vendorCompanyName', header: 'Company Name', width: '20%', editable: false },\n    { field: 'vendorName', header: 'Vendor Name', width: '20%', editable: false },\n    { field: 'vendorEmail', header: 'Vendor Email', width: '20%', editable: false },\n    { field: 'vendorMobileNumber', header: 'Vendor Mobile', width: '20%', editable: false },\n    { field: 'endClientName', header: 'End Client Name', width: '20%', editable: false },\n    { field: 'actualRate', header: 'Actual Rate', width: '20%', editable: true },\n    { field: 'submissionRate', header: 'Submissio Rate', width: '20%', editable: true },\n    { field: 'vendorStatus', header: 'Status', width: '20%', editable: true },\n        ];\n\n    this.userRest.getConsultantsList().subscribe(\n      (response) => {\n       this.states = response.submissions;\n        this.vendors = response.vendorslist;\n        this.clients = response.clients;\n        this.data = response.data;\n      },\n      (error) => { console.log(error) }\n    );\n    this.cars = [\n      { label: \"Choose Technology\", value: \"\" },\n      { label: \"AEM(Adobe Experience manger)\", value: \"AEM(Adobe Experience manger)\" },\n      { label: 'Android Developer', value: 'Android Developer' },\n      { label: 'Business Analyst', value: 'Business Analyst' },\n      { label: 'Business Intelligence', value: 'Business Intelligence' },\n      { label: 'Data Analyst', value: 'Data Analyst' },\n      { label: 'Database Administrator', value: 'Database Administrator' },\n      { label: 'Devops Engineer', value: 'Devops Engineer' },\n      { label: 'Dot net Developer', value: 'Dot net Developer' },\n      { label: 'ETL Developer', value: \"ETL Developer\" },\n      { label: 'Hadoop', value: \"Hadoop\" },\n      { label: 'Hadoop Developer/Hadoop Admin', value: \"Hadoop Developer/Hadoop Admin\" },\n      { label: 'IOS Developer', value: \"IOS Developer\" },\n      { label: 'Java Developer', value: \"Java Developer\" },\n      { label: 'Linux Admin', value: \"Linux Admin\" },\n      { label: 'Mainframe Developer', value: \"Mainframe Developer\" },\n      { label: 'Network Engineer', value: \"Network Engineer\" },\n      { label: 'Oracle fusion developer', value: \"Oracle fusion developer\" },\n      { label: 'PEGA', value: \"PEGA\" },\n      { label: 'QA Tester/QA Analyst', value: \"QA Tester/QA Analyst\" },\n      { label: 'SAP Hana', value: \"SAP Hana\" },\n      { label: 'Salesforce', value: \"Salesforce\" },\n      { label: 'Salesforce Admin', value: \"Salesforce Admin\" },\n      { label: 'Salesforce Developer', value: \"Salesforce Developer\" },\n      { label: 'Service now developer', value: \"Service now developer\" },\n      { label: 'Tableau Developer', value: \"Tableau Developer\" },\n      { label: 'UI Developer / Frontend Developer', value: \"UI Developer / Frontend Developer\" },\n      { label: 'VOIP Engineer', value: \"VOIP Engineer\" },\n      { label: 'others', value: \"others\" },\n    ];\n    this.totalNumberOfCars = this.cars.length;\n    this.str = '';\n\n    this.registerForm = new FormGroup({\n      'actualRate': new FormControl('', [Validators.required]),\n      'state': new FormControl('', [Validators.required]),\n      'vendorStatus': new FormControl('', [Validators.required]),\n      'vendorComments': new FormControl(''),\n      'submissionRate': new FormControl('', [Validators.required]),\n      'vid': new FormControl('', [Validators.required]),\n      'vendorDetailId': new FormControl('', [Validators.required]),\n      'endClientLocation': new FormControl('', [Validators.required]),\n      'clientId': new FormControl('', [Validators.required]),\n      'scheduleDate': new FormControl(''),\n      'timezone': new FormControl('EST'),\n    })\n\n    this.registerContact = new FormGroup({\n      'vendorcontactName': new FormControl('', [Validators.required]),\n      'vendorcontactMobile': new FormControl('', [Validators.required]),\n      'vendorcontactEmail': new FormControl('', [Validators.required, Validators.email]),\n      'vendorext': new FormControl('', [Validators.required]),\n    });\n    this.registerVendor = new FormGroup({\n      'vendorCompanyName': new FormControl('', [Validators.required]),\n      'contactName': new FormControl('', [Validators.required]),\n      'contactMobile': new FormControl('', [Validators.required]),\n      'contactEmail': new FormControl('', [Validators.required, Validators.email]),\n      'ext': new FormControl('', [Validators.required]),\n\n    });\n    this.registerClient = new FormGroup({\n      'clientName': new FormControl('', [Validators.required]),\n    });\n  }\n\n  showModalDialog() {\n    this.displayModal = true;\n  }\n  showModalDialogClient() {\n    this.displayModalClient = true;\n  }\n\n  showModalDialog1() {\n    this.registerContact.addControl('cvid', new FormControl(this.registerForm.value.vid, Validators.required));\n    this.displayModal1 = true;\n  }\n\n  OnFocus() {\n    if (this.cars.length > this.totalNumberOfCars) {\n      this.cars.shift();\n\n    }\n  }\n\n  OnBlur() {\n    console.log(\"OnBlur\");\n  }\n\n  test(event) {\n    const charCode = event.keyCode;\n    if (event.key === 'Enter') {\n      this.selectedCar = this.cars.find(car => {\n        return car.label.toLowerCase().includes(this.str.toLowerCase());\n      });\n      this.cars.unshift(this.selectedCar)\n      this.str = '';\n    } else if (event.key === 'Backspace') {\n      this.str = this.str.replace(/.$/, \"\");\n    } else if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode === 8) {\n      this.str += event.key;\n    }\n\n  }\n\n  onChange(event) {\n    this.crate = '';\n    this.cemail = '';\n    this.cmobile = '';\n    this.ctechnology = '';\n\n    console.log(event.value);\n    this.userRest.editConsultant(event.value).subscribe(\n      (response) => {\n        this.crate = response.user.rate;\n        this.cemail = response.user.consultantEmail;\n        this.cmobile = response.user.consultatMobileNumber;\n        this.ctechnology = response.user.technology;\n\n      },\n      (error) => console.log(error)\n    );\n  }\n  ChangeClients(event) {\n\n    //   this.clients=[];\n    /* this.userRest.editVenodr(event.value).subscribe(\n       (response) => {\n         this.contacts =  response.contacts;\n       },\n       (error) => console.log(error)\n     ); */\n\n  }\n  ChangeVendor(event) {\n    this.vmobile = '';\n    this.vcname = '';\n    this.contacts = [];\n    this.userRest.editVenodr(event.value).subscribe(\n      (response) => {\n        this.contacts = response.contacts\n\n      },\n      (error) => console.log(error)\n    );\n\n  }\n  ChangeContactsInner(value) {\n    this.vmobile = '';\n    this.vcname = '';\n    const formData = new FormData();\n    formData.append(\"index\", value);\n    this.userRest.getContactDetails(formData).subscribe(\n      (response) => {\n        console.log(response);\n        this.vmobile = response.contactDetails.contactMobile\n        this.vcname = response.contactDetails.contactName\n      },\n      (error) => console.log(error)\n    );\n\n  }\n  ChangeContacts(event) {\n    this.vmobile = '';\n    this.vcname = '';\n    const formData = new FormData();\n    formData.append(\"index\", event.value);\n    this.userRest.getContactDetails(formData).subscribe(\n      (response) => {\n        console.log(response);\n        this.vmobile = response.contactDetails.contactMobile\n        this.vcname = response.contactDetails.contactName\n      },\n      (error) => console.log(error)\n    );\n\n  }\n  vendorsUi(event) {\n  }\n  statesUi(event) {\n    const charCode = event.keyCode;\n    if (event.key === 'Enter') {\n      this.selectedStates = this.states.find(car => {\n        return car.label.toLowerCase().includes(this.str.toLowerCase());\n      });\n      this.states.unshift(this.selectedStates)\n      this.str = '';\n    } else if (event.key === 'Backspace') {\n      this.str = this.str.replace(/.$/, \"\");\n    } else if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode === 8) {\n      this.str += event.key;\n    }\n\n  }\n  get clientName() { return this.registerClient.get('clientName'); }\n  get actualRate() { return this.registerForm.get('actualRate'); }\n  get vendorStatus() { return this.registerForm.get('vendorStatus'); }\n  get vendorComments() { return this.registerForm.get('vendorComments'); }\n  get submissionRate() { return this.registerForm.get('submissionRate'); }\n  get state() { return this.registerForm.get('state'); }\n  get vendorDetailId() { return this.registerForm.get('vendorDetailId'); }\n  get vid() { return this.registerForm.get('vid'); }\n  get clientId() { return this.registerForm.get('clientId'); }\n  get endClientLocation() { return this.registerForm.get('vid'); }\n  get vendorCompanyName() { return this.registerVendor.get('vendorCompanyName'); }\n  get contactName() { return this.registerVendor.get('contactName'); }\n  get contactMobile() { return this.registerVendor.get('contactMobile'); }\n  get contactEmail() { return this.registerVendor.get('contactEmail'); }\n  get ext() { return this.registerVendor.get('ext'); }\n  get vendorcontactName() { return this.registerContact.get('vendorcontactName'); }\n  get vendorcontactMobile() { return this.registerContact.get('vendorcontactMobile'); }\n  get vendorcontactEmail() { return this.registerContact.get('vendorcontactEmail'); }\n  get vendorext() { return this.registerContact.get('vendorext'); }\n  get scheduleDate() { return this.registerContact.get('scheduleDate'); }\n  get timezone() { return this.registerContact.get('timezone'); }\n  registerClientForm() {\n    this.userRest.storeClient(this.registerClient).subscribe(\n      response => {\n        this.displayModalClient = false;\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Client Added' });\n        this.clients = response.clients;\n        this.selectedClients = response.clientId;\n        // this.ChangeContactsInner(response.contactId)\n        // this.router.navigate(['benchsales/list'])\n      },\n      error => {\n        this.serverErrors = error.error.errors\n      }\n    );\n  }\n  registerContactForm() {\n\n    this.userRest.storeContact(this.registerContact).subscribe(\n      response => {\n        this.displayModal1 = false;\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Vendor Contact Details Added' });\n        // this.selectedContacts = response.contactId;\n        this.userRest.editVenodr(this.registerForm.value.vid).subscribe(\n          (response2) => {\n            this.contacts = response2.contacts;\n            this.selectedContacts = response.contactId;\n            this.ChangeContactsInner(response.contactId)\n          },\n          (error) => console.log(error)\n        );\n        // this.ChangeContactsInner(response.contactId)\n        // this.router.navigate(['benchsales/list'])\n      },\n      error => {\n        this.serverErrors = error.error.errors\n      }\n    );\n  }\n  registerVendorCompany() {\n    console.log(this.registerVendor);\n\n    this.userRest.storeVendor(this.registerVendor).subscribe(\n      response => {\n        console.log(response),\n          console.log(response.vendorId);\n        this.displayModal = false;\n        this.selectedVendors = response.vendorId;\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Vendor Company Details Added' });\n\n        this.userRest.getConsultantsList().subscribe(\n          (response1) => {\n            // console.log(this.states = response.submissions);\n            console.log(this.vendors = response1.vendorslist);\n            // console.log( this.clients =  response1.clients);\n          },\n          (error) => { console.log(error) }\n        );\n        this.userRest.editVenodr(response.vendorId).subscribe(\n          (response2) => {\n            this.contacts = response2.contacts;\n            this.selectedContacts = response.contactId;\n            this.ChangeContactsInner(response.contactId)\n          },\n          (error) => console.log(error)\n        );\n\n\n        // this.router.navigate(['benchsales/list'])\n      },\n      error => {\n        this.serverErrors = error.error.errors\n      }\n    );\n  }\n  registerUser() {\n    console.log(this.registerForm);\n\n\n\n    //formData.append('myImageToSend', this.imageFile.file);\n\n\n    this.userRest.storeUser(this.registerForm).subscribe(\n      response => {\n        this.registerForm.reset();\n          this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Submission Completed' });\n          this.data = response.data;\n          this.crate='';\n          this.cemail='';\n          this.cmobile='';\n          this.ctechnology='';\n          this.vmobile='';\n          this.vcname='';\n          // this.router.navigate(['benchsales/list'])\n      },\n      error => {\n        this.serverErrors = error.error.errors\n      }\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2JlbmNoc2FsZXMvdXNlci1lZGl0L3VzZXItY3JlYXRlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit,ViewChild, ɵConsole } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserRestService } from '../user-rest.service';\nimport {SelectItem} from 'primeng/api';\nimport {SelectItemGroup} from 'primeng/api';\n\nimport { FormGroup, FormControlName, Validators, FormControl } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nexport class Profile {\n  constructor(public prId:string, public prName:string) {\n  }\n}\n@Component({\n  selector: 'app-user-create',\n  templateUrl: './user-create.component.html',\n  providers: [MessageService],\n  styleUrls: ['./user-create.component.scss']\n})\nexport class UserEditComponent implements OnInit {\n  @ViewChild('dd', { static: true }) dropdown: any;\n  countries: any[];\n  selectedCountry: string;\n  cars: SelectItem[];\n  states: SelectItem[];\n  selectedCar: SelectItem;\n  selectedStates: SelectItem;\n  str: string;\n  counter = 0;\n  totalNumberOfCars : number;\n  formData: FormGroup;\n\n  serverErrors = [];\n  imageFile: {link: string, file: any, name: string};\n  registerForm: FormGroup;\n  registerForm1: FormGroup;\n  constructor(private route: ActivatedRoute,private messageService: MessageService, private userRest: UserRestService, private router: Router) { }\n\n  ngOnInit() {\n    this.states = [\n      {label: \"Choose State\", value: \"\"},\n      {label: \"Alabama\", value: \"Alabama\"},\n      {label: 'Alaska', value: 'Alaska'},\n      {label: 'Alabama', value: 'Alabama'},\n      {label: 'Arizona', value: 'Arizona'},\n      {label: 'Arkansas', value: 'Arkansas'},\n      {label: 'California', value: 'California'},\n      {label: 'Colorado', value: 'Colorado'},\n      {label: 'Connecticut', value: 'Connecticut'},\n      {label: 'Delaware', value:\"Delaware\"},\n      {label: 'District of Columbia', value:\"District of Columbia\"},\n      {label: 'Florida', value:\"Florida\"},\n      {label: 'Georgia', value:\"Georgia\"},\n      {label: 'Hawaii', value:\"Hawaii\"},\n      {label: 'Idaho', value:\"Idaho\"},\n      {label: 'Illinois', value:\"Illinois\"},\n      {label: 'Indiana', value:\"Indiana\"},\n      {label: 'Iowa', value:\"Iowa\"},\n      {label: 'Kansas', value:\"Kansas\"},\n      {label: 'Kentucky', value:\"Kentucky\"},\n      {label: 'Louisiana', value:\"Louisiana\"},\n      {label: 'Maine', value:\"Maine\"},\n      {label: 'Maryland', value:\"Maryland\"},\n      {label: 'Michigan', value:\"Michigan\"},\n      {label: 'Minnesota', value:\"Minnesota\"},\n      {label: 'Mississippi', value:\"Mississippi\"},\n      {label: 'Missouri', value:\"Missouri\"},\n      {label: 'Montana', value:\"Montana\"},\n      {label: 'Nebraska', value:\"Nebraska\"},\n  ];\n    this.cars = [\n      {label: \"Choose Technology\", value: \"\"},\n      {label: \"AEM(Adobe Experience manger)\", value: \"AEM(Adobe Experience manger)\"},\n      {label: 'Android Developer', value: 'Android Developer'},\n      {label: 'Business Analyst', value: 'Business Analyst'},\n      {label: 'Business Intelligence', value: 'Business Intelligence'},\n      {label: 'Data Analyst', value: 'Data Analyst'},\n      {label: 'Database Administrator', value: 'Database Administrator'},\n      {label: 'Devops Engineer', value: 'Devops Engineer'},\n      {label: 'Dot net Developer', value: 'Dot net Developer'},\n      {label: 'ETL Developer', value:\"ETL Developer\"},\n      {label: 'Hadoop', value:\"Hadoop\"},\n      {label: 'Hadoop Developer/Hadoop Admin', value:\"Hadoop Developer/Hadoop Admin\"},\n      {label: 'IOS Developer', value:\"IOS Developer\"},\n      {label: 'Java Developer', value:\"Java Developer\"},\n      {label: 'Linux Admin', value:\"Linux Admin\"},\n      {label: 'Mainframe Developer', value:\"Mainframe Developer\"},\n      {label: 'Network Engineer', value:\"Network Engineer\"},\n      {label: 'Oracle fusion developer', value:\"Oracle fusion developer\"},\n      {label: 'PEGA', value:\"PEGA\"},\n      {label: 'QA Tester/QA Analyst', value:\"QA Tester/QA Analyst\"},\n      {label: 'SAP Hana', value:\"SAP Hana\"},\n      {label: 'Salesforce', value:\"Salesforce\"},\n      {label: 'Salesforce Admin', value:\"Salesforce Admin\"},\n      {label: 'Salesforce Developer', value:\"Salesforce Developer\"},\n      {label: 'Service now developer', value:\"Service now developer\"},\n      {label: 'Tableau Developer', value:\"Tableau Developer\"},\n      {label: 'UI Developer / Frontend Developer', value:\"UI Developer / Frontend Developer\"},\n      {label: 'VOIP Engineer', value:\"VOIP Engineer\"},\n      {label: 'others', value:\"others\"},\n  ];\n  this.totalNumberOfCars = this.cars.length;\n  this.str ='';\n\n    this.registerForm = new FormGroup({\n      'jobTitle': new FormControl(null, [Validators.required, Validators.minLength(2)]),\n      'jobVisaType': new FormControl(null, [Validators.required]),\n      'jobLocation': new FormControl(null, [Validators.required]),\n      'jobExperience': new FormControl(null),\n      'jobTechnology': new FormControl(null),\n      'jobDescription': new FormControl(null),\n      'jobStatus': new FormControl(null),\n\n    });\n    let id = this.route.snapshot.params.id;\n    this.userRest.editUser(id).subscribe(\n     (response) => {\n       this.registerForm.patchValue({\n\n        'jobTitle': response.user.jobTitle,\n      'jobVisaType':  response.user.jobVisaType,\n      'jobLocation':  response.user.jobLocation,\n      'jobExperience': response.user.jobExperience,\n      'jobTechnology':  response.user.jobTechnology,\n      'jobDescription':  response.user.jobDescription,\n      'jobStatus':  response.user.jobStatus,\n\n       })\n     },\n     (error) => console.log(error)\n   );\n  }\n  imagesPreviewResume(event) {\n    if (event.target.files && event.target.files[0]) {\n        const reader = new FileReader();\n\n        reader.onload = (_event: any) => {\n            this.imageFile = {\n                link: _event.target.result,\n                file: event.srcElement.files[0],\n                name: event.srcElement.files[0].name\n            };\n        };\n        reader.readAsDataURL(event.target.files[0]);\n        const formData = new FormData();\n        formData.append(\"resume\", event.target.files[0]);\n\n        this.userRest.storeDocument(formData).subscribe(\n          (response) => { console.log(response)\n            this.registerForm.patchValue({\n              resume: response.path,\n              // formControlName2: myValue2 (can be omitted)\n            });\n          },\n          (error) => { console.log(error) }\n        );\n    }\n}\nimagesPreviewOtherDoc(event) {\n  if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n\n      reader.onload = (_event: any) => {\n          this.imageFile = {\n              link: _event.target.result,\n              file: event.srcElement.files[0],\n              name: event.srcElement.files[0].name\n          };\n      };\n      reader.readAsDataURL(event.target.files[0]);\n      const formData = new FormData();\n      formData.append(\"otherDocument\", event.target.files[0]);\n\n      this.userRest.storeDocument(formData).subscribe(\n        (response) => { console.log(response)\n          this.registerForm.patchValue({\n            otherDocument: response.path,\n            // formControlName2: myValue2 (can be omitted)\n          });\n        },\n        (error) => { console.log(error) }\n      );\n  }\n}\nimagesPreviewWorkAuth(event) {\n  if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n\n      reader.onload = (_event: any) => {\n          this.imageFile = {\n              link: _event.target.result,\n              file: event.srcElement.files[0],\n              name: event.srcElement.files[0].name\n          };\n      };\n      reader.readAsDataURL(event.target.files[0]);\n      const formData = new FormData();\n      formData.append(\"workAuthorization\", event.target.files[0]);\n\n      this.userRest.storeDocument(formData).subscribe(\n        (response) => { console.log(response)\n          this.registerForm.patchValue({\n            workAuthorization: response.path,\n            // formControlName2: myValue2 (can be omitted)\n          });\n        },\n        (error) => { console.log(error) }\n      );\n  }\n}\n  OnFocus() {\n    if(this.cars.length > this.totalNumberOfCars) {\n      this.cars.shift();\n    }\n  }\n\n  OnBlur() {\n    console.log(\"OnBlur\");\n  }\n\n  test(event) {\n    const charCode = event.keyCode;\n    if(event.key === 'Enter') {\n      this.selectedCar = this.cars.find(car => {\n       return car.label.toLowerCase().includes(this.str.toLowerCase());\n      });\n      this.cars.unshift(this.selectedCar)\n      this.str = '';\n    } else if (event.key === 'Backspace') {\n        this.str = this.str.replace(/.$/,\"\");\n    } else if( (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode === 8) {\n        this.str+= event.key;\n      }\n\n  }\n\n\n  statesUi(event) {\n    const charCode = event.keyCode;\n    if(event.key === 'Enter') {\n      this.selectedStates = this.states.find(car => {\n       return car.label.toLowerCase().includes(this.str.toLowerCase());\n      });\n      this.states.unshift(this.selectedStates)\n      this.str = '';\n    } else if (event.key === 'Backspace') {\n        this.str = this.str.replace(/.$/,\"\");\n    } else if( (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode === 8) {\n        this.str+= event.key;\n      }\n  }\n\n  get jobTitle() { return this.registerForm.get('jobTitle'); }\n  get jobDescription() { return this.registerForm.get('jobDescription'); }\n  get jobTechnology() { return this.registerForm.get('jobTechnology'); }\n  get jobExperience() { return this.registerForm.get('jobExperience'); }\n  get jobLocation() { return this.registerForm.get('jobLocation'); }\n  get jobVisaType() { return this.registerForm.get('jobVisaType'); }\n  get jobStatus() { return this.registerForm.get('jobStatus'); }\n\n\n  registerUser(){\n     console.log(this.registerForm);\n\n\n //formData.append('myImageToSend', this.imageFile.file);\n\n\n      this.userRest.storeUser(this.registerForm).subscribe(\n        response => {\n          console.log(response),\n          this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Consultant is added' });\n          this.router.navigate(['jobs/list'])\n        },\n        error =>{\n          this.serverErrors = error.error.errors\n        }\n      );\n  }\n\n  updateUserDetails(){\n    let id = this.route.snapshot.params.id;\n    this.userRest.updateUser(this.registerForm,id).subscribe(\n      (response) => {\n        console.log(response),\n        this.router.navigate(['jobs/list'])\n      },\n      error =>{\n        this.serverErrors = error.error.errors\n      },\n      () => console.log('completed')\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2JlbmNoc2FsZXMvdXNlci1pbmRleC91c2VyLWluZGV4LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SortEvent } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-user-index',\r\n  templateUrl: './user-index.component.html',\r\n  styleUrls: ['./user-index.component.scss']\r\n})\r\nexport class UserIndexComponent implements OnInit {\r\n  userList: Array<object> = [];\r\n  timeSheets: Array<object> = [];\r\n    statuses: any[];\r\n    loading: boolean = true;\r\n  constructor(private route: ActivatedRoute,  private router: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \":host ::ng-deep .p-cell-editing {\\n  padding-top: 0 !important;\\n  padding-bottom: 0 !important;\\n}\\n\\n.disable-td {\\n  pointer-events: none;\\n}\\n\\n.ui-button {\\n  margin-left: 0.25rem;\\n  margin-right: 0.25rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYmVuY2hzYWxlcy91c2VyLWxpc3QvQzpcXHhhbXBwXFxodGRvY3NcXHNlcC1iYXJcXGFuZy9zcmNcXGFwcFxcYWRtaW5cXGJlbmNoc2FsZXNcXHVzZXItbGlzdFxcdXNlci1saXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hZG1pbi9iZW5jaHNhbGVzL3VzZXItbGlzdC91c2VyLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBQTtFQUNBLDRCQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxvQkFBQTtBQ0VGOztBREFBO0VBQ0Usb0JBQUE7RUFDQSxxQkFBQTtBQ0dGIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vYmVuY2hzYWxlcy91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIC5wLWNlbGwtZWRpdGluZyB7XHJcbiAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDtcclxuICBwYWRkaW5nLWJvdHRvbTogMCAhaW1wb3J0YW50O1xyXG59XHJcbi5kaXNhYmxlLXRke1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG59XHJcbi51aS1idXR0b24ge1xyXG4gIG1hcmdpbi1sZWZ0OiAwLjI1cmVtO1xyXG4gIG1hcmdpbi1yaWdodDogMC4yNXJlbTtcclxufVxyXG4iLCI6aG9zdCA6Om5nLWRlZXAgLnAtY2VsbC1lZGl0aW5nIHtcbiAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDtcbiAgcGFkZGluZy1ib3R0b206IDAgIWltcG9ydGFudDtcbn1cblxuLmRpc2FibGUtdGQge1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cblxuLnVpLWJ1dHRvbiB7XG4gIG1hcmdpbi1sZWZ0OiAwLjI1cmVtO1xuICBtYXJnaW4tcmlnaHQ6IDAuMjVyZW07XG59Il19 */\"","import { Component, TemplateRef, OnInit, ViewChild, Output, EventEmitter, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserRestService } from '../user-rest.service';\r\nimport { Representative } from '../../../customer';\r\nimport { Table } from 'primeng/table';\r\nimport { FormGroup, FormControlName, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { FilterMetadata } from 'primeng/api';\r\nimport { SelectItem } from 'primeng/api'\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3',\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF',\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-user-list',\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [MessageService, ConfirmationService],\r\n\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  @ViewChild('dt', { static: true }) table: Table;\r\n  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\r\n  timeSheets: Array<object> = [];\r\n\r\n  cities: SelectItem[]\r\n  statusesVendor: SelectItem[]\r\n  selectedCity: any\r\n  selectedStatus:any;\r\n  displayModal: boolean;\r\n  displayModal1: boolean;\r\n  comment: any;\r\n  representatives: Representative[];\r\n  confirmDropDatabaseDialogVisible = false;\r\n  statusOptions = [\r\n    // {label: \"Dot net Developer\",value: 'Dot net Developer'},\r\n    { label: \"Java Developer\", value: 'Java Developer' },\r\n    { label: \"QA Tester/QA Analyst\", value: 'QA Tester/QA Analyst' },\r\n    //  {label: \"Devops Engineer\",value: 'Devops Engineer'}\r\n  ];;\r\n  frozenCols: any[];\r\n  statuses: any[];\r\n  totalRecords: number;\r\n  cols: any[];\r\n  loading: boolean = true;\r\n  registerVendor: FormGroup;\r\n  submissionId: number;\r\n  scrollableCols: any[];\r\n  serverErrors = [];\r\n  heading1: any;\r\n  clonedProducts: { [s: string]: any; } = {};\r\n  constructor(private confirmation: ConfirmationService, private fb: FormBuilder, private messageService: MessageService, private route: ActivatedRoute, private userRest: UserRestService,\r\n    private router: Router) { }\r\n  clearFilters(dt) {\r\n    dt.reset(); // reset the table\r\n    this.selectedCity='';\r\n    this.selectedStatus='';\r\n  }\r\n\r\n  loadCarsLazy(event: LazyLoadEvent) {\r\n    this.loading = true;\r\n    console.log(event)\r\n\r\n    //in a real application, make a remote request to load data using state metadata from event\r\n    //event.first = First row offset\r\n    //event.rows = Number of rows per page\r\n    //event.sortField = Field name to sort with\r\n    //event.sortOrder = Sort order as number, 1 for asc and -1 for dec\r\n    //filters: FilterMetadata object having field as key and filter value, filter matchMode as value\r\n\r\n    //imitate db connection over a network\r\n    setTimeout(() => {\r\n      this.userRest.getConsultants((event)).subscribe(\r\n        (response) => {\r\n          console.log(this.timeSheets = response.submissions.data);\r\n          this.totalRecords = response.submissions.total;\r\n          this.loading = false;\r\n        },\r\n        (error) => { console.log(error) }\r\n      );\r\n\r\n\r\n    }, 1000);\r\n  }\r\n  ngOnInit() {\r\n\r\n    this.cities = [];\r\n    this.statusesVendor = [ {label: 'Select Status', value: null },\r\n    {label: 'Interview scheduled', value: 'Interview scheduled' },\r\n    {label: 'Submitted to Client', value: 'Submitted to Client' },\r\n    {label: 'Submitted to Vendor', value: 'Submitted to Vendor' }\r\n  ,{label: 'Disqualified', value: 'Disqualified' },\r\n  {label: 'Client rejected', value: 'Client rejected' },\r\n  {label: 'Vendor Rejected', value: 'Vendor Rejected' },\r\n  {label: 'Vendor screening call', value: 'Vendor screening call' },\r\n  {label: 'Waiting for Evaluation', value: 'Waiting for Evaluation' }\r\n ];\r\n    this.userRest.getConsultantsOnly().subscribe(\r\n      (response) => {\r\n       this.cities = response.submissions;\r\n      },\r\n      (error) => { console.log(error) }\r\n    );\r\n    this.registerVendor = new FormGroup({\r\n      'vendorStatus': new FormControl(''),\r\n      'vendorComments': new FormControl(''),\r\n      'scheduleDate': new FormControl(''),\r\n      'timezone': new FormControl(''),\r\n\r\n\r\n    });\r\n    this.frozenCols = [\r\n\r\n    ];\r\n    this.scrollableCols = [\r\n      // { field: 'user_details.name', header: 'Created By', width: '20%', editable: false },\r\n    //  { field: 'consultant.consultatName', header: 'First Name', width: '20%', editable: false },\r\n  //    { field: 'consultant.consultantLastName', header: 'Last Name', width: '20%', editable: false },\r\n      { field: 'vendorStatus', header: 'Status', width: '40%', editable: true },\r\n      { field: 'consultant.technology', header: 'Technology', width: '20%', editable: false },\r\n      { field: 'vendorCompanyName', header: 'Company Name', width: '20%', editable: false },\r\n      { field: 'vendorName', header: 'Vendor Name', width: '20%', editable: false },\r\n      { field: 'vendorEmail', header: 'Vendor Email', width: '20%', editable: false },\r\n      { field: 'vendorMobileNumber', header: 'Vendor Mobile', width: '20%', editable: false },\r\n      { field: 'endClientName', header: 'End Client Name', width: '20%', editable: false },\r\n      { field: 'actualRate', header: 'Actual Rate', width: '20%', editable: true },\r\n      { field: 'submissionRate', header: 'Submissio Rate', width: '20%', editable: true },\r\n\r\n      //{ field: 'vendorComments', header: 'Comments', width: '40%',editable: true },\r\n\r\n    ];\r\n\r\n    this.representatives = [\r\n      { name: \"Dot net Developer\" },\r\n      { name: \"Java Developer\" },\r\n      { name: \"QA Tester/QA Analyst\" },\r\n      { name: \"Devops Engineer\" }\r\n\r\n    ];\r\n\r\n\r\n    this.statuses = [\r\n      { label: 'Unqualified', value: 'unqualified' },\r\n      { label: 'Qualified', value: 'qualified' },\r\n      { label: 'New', value: 'new' },\r\n      { label: 'Negotiation', value: 'negotiation' },\r\n      { label: 'Renewal', value: 'renewal' },\r\n      { label: 'Proposal', value: 'proposal' }\r\n    ]\r\n  }\r\n\r\n  showModalDialog(data: any) {\r\n    console.log(data)\r\n    this.heading1 = data.consultant.consultatName + \" submiting to \" + data.vendorCompanyName;\r\n    this.displayModal = true;\r\n\r\n    this.submissionId = data.vendorId;\r\n\r\n    this.registerVendor.patchValue({\r\n      vendorComments: data.vendorComments,\r\n      vendorStatus: data.vendorStatus,\r\n      timezone: data.timezone,\r\n      scheduleDate: this.formatDate(data.scheduleDate),\r\n      // formControlName2: myValue2 (can be omitted)\r\n    });\r\n  }\r\n\r\n  showModalDialog1(data: any) {\r\n    this.displayModal1 = true;\r\n    this.comment = data;\r\n  }\r\n\r\n\r\n\r\n\r\n  formatDate(date) {\r\n    if (date) {\r\n      const d = new Date(date);\r\n      let month = '' + (d.getMonth() + 1);\r\n      let day = '' + d.getDate();\r\n      const year = d.getFullYear();\r\n      if (month.length < 2) month = '0' + month;\r\n      if (day.length < 2) day = '0' + day;\r\n      return [year, month, day].join('-');\r\n    } else {\r\n      const d = new Date();\r\n      let month = '' + (d.getMonth() + 1);\r\n      let day = '' + d.getDate();\r\n      const year = d.getFullYear();\r\n      if (month.length < 2) month = '0' + month;\r\n      if (day.length < 2) day = '0' + day;\r\n      return [year, month, day].join('-');\r\n    }\r\n  }\r\n\r\n  onRepresentativeChange(event) {\r\n    if (event.value) {\r\n      console.log(event.value)\r\n      this.table.filter(event.value, 'technology', 'in')\r\n    }\r\n\r\n  }\r\n\r\n  dropDatabase(event: Event, index: number) {\r\n    if (event.defaultPrevented) return;\r\n    event.preventDefault();\r\n\r\n    this.confirmation.confirm({\r\n      key: 'confirm-drop-database',\r\n      message: 'Are you sure to Aprove for Hotlist',\r\n      accept: () => { this._dropDatabase(index); },\r\n    });\r\n  }\r\n\r\n  private _dropDatabase(index) {\r\n    const formData = new FormData();\r\n    formData.append(\"index\", index);\r\n    console.log(formData);\r\n    this.userRest.statusChangeConsultant(formData).subscribe(\r\n      (response) => {\r\n        console.log(response); this.loading = false;\r\n        this.timeSheets = response.timesheet;\r\n      },\r\n      (error) => { console.log(error) }\r\n    );\r\n\r\n  }\r\n\r\n\r\n  getColor(status: string, adminStatus: string) {\r\n    if (adminStatus == \"A\") {\r\n      return \"#d4edda\"\r\n    } else if (status == \"not interested\") {\r\n      return \"#f8d7da\"\r\n    }\r\n  }\r\n  onDateSelect(value) {\r\n    this.table.filter(value, 'created_at', 'equals')\r\n  }\r\n  formatDateNew(date) {\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n\r\n    if (month < 10) {\r\n      month = '0' + month;\r\n    }\r\n\r\n    if (day < 10) {\r\n      day = '0' + day;\r\n    }\r\n\r\n    return date.getFullYear() + '-' + month + '-' + day;\r\n  }\r\n\r\n\r\n  get vendorStatus() { return this.registerVendor.get('vendorStatus'); }\r\n  get vendorComments() { return this.registerVendor.get('vendorComments'); }\r\n  get scheduleDate() { return this.registerVendor.get('scheduleDate'); }\r\n  get timezone() { return this.registerVendor.get('timezone'); }\r\n\r\n  registerUser(submissionId: number) {\r\n    console.log(this.registerVendor);\r\n\r\n    this.userRest.updateSubmission(this.registerVendor, submissionId).subscribe(\r\n      response => {\r\n        this.displayModal = false;\r\n        console.log(response),\r\n          this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Submision Updated' });\r\n        this.timeSheets = response.submissions.data;\r\n      },\r\n      error => {\r\n        this.serverErrors = error.error.errors\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport {environment} from \"../../../environments/environment\";\nimport { HttpParams } from \"@angular/common/http\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRestService {\n  users: Array<{id: number, name: string, email: string}> = [];\n  constructor(private http: HttpClient) { }\n\n  getConsultants(page:any): Observable<any> {\n    const pagenumber:any =page.first/20;\n    let str:any;\n    let actorList = page.filters;\n\n    let params = new HttpParams();\n    console.log(Object.keys(actorList).length)\n    params = params.append('page', pagenumber);\n        if(Object.keys(actorList).length)\n        {\n         /* if(actorList['user_details.name'])\n          params = params.append('name', actorList['user_details.name']['value']);\n\n          if(actorList['vendorStatus'])\n          params = params.append('vendorStatus', actorList['vendorStatus']['value']);\n          if(actorList['vendorCompanyName'])\n          params = params.append('vendorCompanyName', actorList['vendorCompanyName']['value']);\n          if(actorList['vendorName'])\n          params = params.append('vendorName', actorList['vendorName']['value']);\n          if(actorList['vendorEmail'])\n          params = params.append('vendorEmail', actorList['vendorEmail']['value']);\n          if(actorList['created_at'])\n          params = params.append('created_at', actorList['created_at']['value']); */\n          if(actorList['consultant.consultatName'])\n          params = params.append('consultatName', actorList['consultant.consultatName']['value']);\n       for (let id in actorList) {\n\n          params = params.append(id, actorList[id]['value']);\n        }\n      }\n    const opts = { params: params };\n    return this.http.get(`${environment.api}/submissions`, opts);\n   // const pagenumber:any =page.first/20;\n\n\n\n//this.http.get(`${environment.api}/submissions`,  params);\n  //  return this.http.get(`${environment.api}/submissions?page=`+pagenumber+'filters'+);\n  }\n  storeUser(form): Observable<any> {\n    return this.http.post(`${environment.api}/submissions`,form.value);\n  }\n\n  storeClient(form): Observable<any> {\n    return this.http.post(`${environment.api}/clients`,form.value);\n  }\nupdateSubmission(form,id): Observable<any> {\n  return this.http.put(`${environment.api}/submissions/` + id, form.value);\n}\n  storeVendor(form): Observable<any> {\n    return this.http.post(`${environment.api}/vendorlist`,form.value);\n  }\n  storeContact(form): Observable<any> {\n    return this.http.post(`${environment.api}/contactslist`,form.value);\n  }\n\n statusChangeConsultant(index): Observable<any> {\n\n    return this.http.post(`${environment.api}/status-consultant`,index);\n  }\n  getConsultantsList(): Observable<any> {\n    return this.http.get(`${environment.api}/getConsultantsList/`);\n  }\n  getConsultantsOnly(): Observable<any> {\n    return this.http.get(`${environment.api}/getConsultantsOnly/`);\n  }\n  editUser(id): Observable<any> {\n    return this.http.get(`${environment.api}/jobs/` + id);\n  }\n  editVenodr(id): Observable<any> {\n    return this.http.get(`${environment.api}/contacts/` + id);\n  }\n  editConsultant(id): Observable<any> {\n    return this.http.get(`${environment.api}/store-consultant/` + id);\n  }\n  updateUser(form,id): Observable<any> {\n    return this.http.put(`${environment.api}/jobs/` + id, form.value);\n  }\n  storeDocument(document): Observable<any> {\n\n    return this.http.post(`${environment.api}/saveDocument`, document);\n  }\n  getContactDetails(index): Observable<any> {\n\n    return this.http.post(`${environment.api}/contactsDetails`,index);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserIndexComponent } from './user-index/user-index.component';\n\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserCreateComponent } from './user-create/user-create.component';\nimport { UserEditComponent } from './user-edit/user-edit.component';\nimport { DocumentBenchListComponent } from './documents/user-list/user-list.component';\nimport { InterviewComponent } from '../superadmin/interviews/user-list/user-list.component';\nimport { HotListComponent } from '../superadmin/hotlist/user-list/user-list.component';\nimport { ContactListComponent } from './/contacts/user-list/user-list.component';\nimport { InterviewBenchComponent } from './interviews/user-list/user-list.component';\nimport { HotListBenchComponent } from './hotlist/user-list/user-list.component';\nconst routes: Routes = [\n // { path: 'list', component: UserListComponent, outlet: 'users' },\n  {\n    path: '',\n    component: UserIndexComponent,\n    children: [\n\n      {path: 'list', component: UserListComponent,data: {\n        expectedRole: 'BenchSales'\n      }},\n\n      {path: 'create', component: UserCreateComponent,data: {\n        expectedRole: 'BenchSales'\n      }},\n      {path: 'edit/:id', component: UserEditComponent,data: {\n        expectedRole: 'BenchSales'\n      }},\n      {path: 'documentlist', component: DocumentBenchListComponent,data: {\n        expectedRole: 'BenchSales'\n      }},\n      {path: 'interviews', component: InterviewBenchComponent,data: {\n        expectedRole: 'BenchSales'\n      }},\n      {path: 'hotlist', component: HotListBenchComponent,data: {\n        expectedRole: 'BenchSales'\n      }},\n      {path: 'contacts', component: ContactListComponent,data: {\n        expectedRole: 'BenchSales'\n      }},\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserIndexComponent } from './user-index/user-index.component';\n\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserCreateComponent } from './user-create/user-create.component';\nimport { UserEditComponent } from './user-edit/user-edit.component';\nimport { UserRestService } from './user-rest.service';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { TableModule } from 'primeng/table';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { ToastModule } from 'primeng/toast';\nimport { SliderModule } from 'primeng/slider';\nimport { FormsModule } from '@angular/forms';\nimport { ContextMenuModule } from 'primeng/contextmenu';\nimport { DialogModule } from 'primeng/dialog';\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { TabMenuModule } from 'primeng/tabmenu';\nimport { MenuItem } from 'primeng/api';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InplaceModule } from 'primeng/inplace';\nimport { FieldPipe1 } from '../../field1.pipe';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\n\nimport { DocumentBenchListComponent } from './documents/user-list/user-list.component';\nimport { ContactListComponent } from './contacts/user-list/user-list.component';\nimport { InterviewBenchComponent } from './interviews/user-list/user-list.component';\nimport { HotListBenchComponent } from './hotlist/user-list/user-list.component';\nimport {VirtualScrollerModule} from 'primeng/virtualscroller';\n\n\nimport {CalendarModule} from 'primeng/calendar';\n@NgModule({\n  declarations: [UserIndexComponent, UserListComponent, UserCreateComponent, UserEditComponent,\n     FieldPipe1, DocumentBenchListComponent, ContactListComponent,HotListBenchComponent,InterviewBenchComponent],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    ReactiveFormsModule, TableModule, MultiSelectModule,CalendarModule,VirtualScrollerModule,\n    SliderModule,\n    DialogModule,\n    MultiSelectModule,\n    ContextMenuModule,\n    ButtonModule,\n    ToastModule,\n    InputTextModule, ConfirmDialogModule,\n\n    ProgressBarModule, TabMenuModule, TooltipModule, FileUploadModule, NgxDropzoneModule, DropdownModule, FormsModule, InplaceModule\n  ],\n  providers: [\n    UserRestService\n  ]\n})\nexport class UserModule { }\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DatePipe, CurrencyPipe, DecimalPipe } from \"@angular/common\";\r\n@Pipe({\r\n  name: \"field\"\r\n})\r\nexport class FieldPipe1 implements PipeTransform {\r\n  /**\r\n   *\r\n   */\r\n  constructor() {}\r\n  transform(value: any, ...args: any[]): any {\r\n    const column: any = args[0];\r\n    let result = value;\r\n    // addressModel.City.Name\r\n    column.field.split(\".\").forEach(f => (result = result[f]));\r\n    return result?result:'-';\r\n  }\r\n}\r\n"],"sourceRoot":""}